LRESULT __stdcall sub_401000(HWND arg1, uint32_t arg2, WPARAM arg3, HGDIOBJ arg4)
{
    LRESULT eax;
    if (arg2 == 0xf)
    {
        void* esi_1 = data_42a230;
        void lpPaint;
        HDC eax_1 = BeginPaint(arg1, &lpPaint);
        int32_t plbrush = 0;
        arg2 = eax_1;
        int32_t var_20;
        GetClientRect(arg1, &var_20);
        int32_t var_14_1 = 0;
        int32_t i;
        int32_t var_14;
        for (; i < var_14; i = (i + 4))
        {
            WPARAM ecx_3 = (var_14 - i);
            int32_t eax_5;
            int32_t edx_3;
            edx_3 = HIGHD(((*(esi_1 + 0x52) * ecx_3) + (*(esi_1 + 0x56) * i)));
            eax_5 = LOWD(((*(esi_1 + 0x52) * ecx_3) + (*(esi_1 + 0x56) * i)));
            int32_t edx_4;
            *edx_4[1] = (COMBINE(edx_3, eax_5) / var_14);
            int32_t eax_10;
            int32_t edx_5;
            edx_5 = HIGHD(((*(esi_1 + 0x51) * ecx_3) + (*(esi_1 + 0x55) * i)));
            eax_10 = LOWD(((*(esi_1 + 0x51) * ecx_3) + (*(esi_1 + 0x55) * i)));
            int32_t ecx_6;
            ecx_6 = (COMBINE(edx_5, eax_10) / var_14);
            int32_t eax_15;
            int32_t edx_8;
            edx_8 = HIGHD(((*(esi_1 + 0x50) * ecx_3) + (*(esi_1 + 0x54) * i)));
            eax_15 = LOWD(((*(esi_1 + 0x50) * ecx_3) + (*(esi_1 + 0x54) * i)));
            int32_t var_c_1 = ((ecx_6 << 8) | (COMBINE(edx_8, eax_15) / var_14));
            HGDIOBJ eax_18 = CreateBrushIndirect(&plbrush);
            var_14_1 = (var_14_1 + 4);
            FillRect(arg2, &var_20, eax_18);
            DeleteObject(eax_18);
        }
        if (*(esi_1 + 0x58) != 0xffffffff)
        {
            HFONT eax_19 = CreateFontIndirectW(*(esi_1 + 0x34));
            arg4 = eax_19;
            if (eax_19 != 0)
            {
                HDC hdc = arg2;
                var_20 = 0x10;
                int32_t var_1c = 8;
                SetBkMode(hdc, 1);
                SetTextColor(hdc, *(esi_1 + 0x58));
                arg2 = SelectObject(hdc, arg4);
                DrawTextW(hdc, &data_429220, 0xffffffff, &var_20, DT_NOPREFIX | DT_SINGLELINE | DT_TOP);
                SelectObject(hdc, arg2);
                DeleteObject(arg4);
            }
        }
        EndPaint(arg1, &lpPaint);
        eax = 0;
    }
    else
    {
        LPARAM lParam = arg4;
        if (arg2 == 0x46)
        {
            *(lParam + 0x18) = (*(lParam + 0x18) | 0x10);
            *(lParam + 4) = data_42a228;
        }
        eax = DefWindowProcW(arg1, arg2, arg3, lParam);
    }
    return eax;
}

int32_t* __stdcall sub_40117d(int32_t arg1)
{
    int32_t* eax = data_42a248;
    int32_t edx_2 = eax[((arg1 * 0x206) + 2)];
    if ((edx_2 & 2) != 0)
    {
        int32_t i = (arg1 + 1);
        int32_t edi_1 = 0;
        if (i < data_42a24c)
        {
            eax = &eax[((i * 0x206) + 2)];
            do
            {
                int32_t ecx_2 = *eax;
                if ((ecx_2 & 2) != 0)
                {
                    edi_1 = (edi_1 + 1);
                }
                else if ((ecx_2 & 4) != 0)
                {
                    int32_t ecx_3 = edi_1;
                    edi_1 = (edi_1 - 1);
                    if (ecx_3 == 0)
                    {
                        break;
                    }
                }
                else if ((ecx_2 & 0x10) == 0)
                {
                    *eax = (((ecx_2 ^ edx_2) & 1) ^ ecx_2);
                }
                i = (i + 1);
                eax = &eax[0x206];
            } while (i < data_42a24c);
        }
    }
    return eax;
}

int32_t __stdcall sub_4011ef(int32_t arg1, int32_t arg2)
{
    int32_t ecx;
    int32_t var_8 = ecx;
    int32_t var_c = ecx;
    int32_t i_1 = arg1;
    int32_t ebx = data_42a248;
    void* esi_2 = ((i_1 * 0x818) + ebx);
    int32_t var_8_1 = 0;
    int32_t var_c_1 = 0;
    int32_t eax = *(esi_2 + 8);
    if (((eax & 2) != 0 && arg2 != 0))
    {
        eax = (eax & 0xbe);
        i_1 = (i_1 + 1);
        *(esi_2 + 8) = eax;
    }
    int32_t i;
    char ecx_1;
    if (i_1 < data_42a24c)
    {
        do
        {
            i = (i_1 + 1);
            ecx_1 = *(((i_1 * 0x818) + ebx) + 8);
            if ((ecx_1 & 2) != 0)
            {
                i = sub_4011ef(i_1, 1);
                ecx_1 = *(((i_1 * 0x818) + ebx) + 8);
            }
            if ((ecx_1 & 4) != 0)
            {
                break;
            }
            if ((ecx_1 & 0x40) != 0)
            {
                var_8_1 = (var_8_1 + 1);
            }
            if ((ecx_1 & 1) == 0)
            {
                var_c_1 = (var_c_1 + 1);
            }
            else
            {
                var_8_1 = (var_8_1 + 1);
            }
            i_1 = i;
        } while (i < data_42a24c);
    }
    if ((i_1 >= data_42a24c || (i_1 < data_42a24c && (ecx_1 & 4) == 0)))
    {
        i = 0;
    }
    if (((i_1 < data_42a24c && (ecx_1 & 4) != 0) && var_8_1 != 0))
    {
        if (var_c_1 == 0)
        {
            int32_t ecx_2;
            ecx_2 = (*(esi_2 + 8) & 0x7f);
            *(esi_2 + 8) = (ecx_2 | 1);
        }
        else
        {
            *(esi_2 + 8) = (*(esi_2 + 8) | 0x40);
        }
    }
    return i;
}

void* __stdcall sub_401299(int32_t arg1)
{
    void* eax = data_42a248;
    int32_t i = 0;
    if ((arg1 < 0x20 && data_42a24c > 0))
    {
        int32_t* edx_1 = (eax + 8);
        do
        {
            eax = *edx_1;
            if ((eax & 6) == 0)
            {
                if ((edx_1[-1] & (1 << arg1)) == 0)
                {
                    eax = (eax & 0xfe);
                }
                else
                {
                    eax = (eax | 1);
                }
                *edx_1 = eax;
            }
            i = (i + 1);
            edx_1 = &edx_1[0x206];
        } while (i < data_42a24c);
    }
    return eax;
}

int32_t __stdcall sub_4012e2(int32_t arg1)
{
    int32_t i = 0;
    int32_t edi = data_42a24c;
    int32_t* var_c = (data_42a230 + 0x94);
    do
    {
        int32_t ebx_1 = 0;
        if (*var_c != 0)
        {
            bool cond:0_1 = 0 == edi;
            if (0 < edi)
            {
                int32_t* esi_2 = (data_42a248 + 8);
                do
                {
                    int32_t edx_1 = *esi_2;
                    if (((edx_1 & 6) == 0 && ((arg1 == 0 || (arg1 != 0 && *(arg1 + (ebx_1 << 2)) != 0)) && (esi_2[-1] & (1 << i)) != ((edx_1 & 1) << i))))
                    {
                        break;
                    }
                    ebx_1 = (ebx_1 + 1);
                    esi_2 = &esi_2[0x206];
                } while (ebx_1 < edi);
                cond:0_1 = ebx_1 == edi;
            }
            if (cond:0_1)
            {
                break;
            }
        }
        i = (i + 1);
        var_c = &var_c[1];
    } while (i < 0x20);
    return i;
}

int32_t __stdcall sub_40136d(int32_t arg1)
{
    int32_t eax_2 = arg1;
    if (eax_2 < 0)
    {
        eax_2 = sub_406467((0x42b000 - ((eax_2 + 1) << 0xb)));
    }
    return eax_2;
}

int32_t __stdcall sub_401389(int32_t arg1, HWND arg2)
{
    int32_t esi = arg1;
    int32_t eax_9;
    while (true)
    {
        if (esi >= 0)
        {
            int32_t* eax_3 = ((esi * 0x1c) + data_42a250);
            if (*eax_3 != 1)
            {
                uint32_t eax_4 = sub_401434(eax_3);
                if (eax_4 == 0x7fffffff)
                {
                    eax_9 = 0x7fffffff;
                    break;
                }
                int32_t eax_5 = sub_40136d(eax_4);
                int32_t eax_6;
                if (eax_5 != 0)
                {
                    int32_t ecx_2 = esi;
                    esi = (eax_5 - 1);
                    eax_6 = ((eax_5 - 1) - ecx_2);
                }
                else
                {
                    eax_6 = (eax_5 + 1);
                    esi = (esi + 1);
                }
                if (arg2 == 0)
                {
                    continue;
                }
                else
                {
                    data_42920c = (data_42920c + eax_6);
                    SendMessageW(arg2, 0x402, MulDiv(data_42920c, 0x7530, data_4291f4), 0);
                    continue;
                }
            }
        }
        eax_9 = 0;
        break;
    }
    return eax_9;
}

int32_t __stdcall sub_40140b(int32_t arg1)
{
    return sub_401389(*((data_42a230 + (arg1 << 2)) + 0x6c), nullptr);
}

int32_t __stdcall sub_401423(int32_t arg1)
{
    return sub_405569(arg1, &data_40adc8);
}

uint32_t __stdcall sub_401434(PWSTR arg1)
{
    HWND lpFileOp_1 = data_42a228;
    int32_t var_38;
    __builtin_memcpy(&var_38, arg1, 0x1c);
    int32_t edx = var_38;
    uint32_t nCmdShow_2;
    uint32_t nCmdShow = nCmdShow_2;
    int16_t* lpString_3 = nullptr;
    data_40ce24 = &nCmdShow_2;
    uint32_t var_8 = 0;
    if ((edx - 2) > 0x43)
    {
        goto label_402c2d;
    }
    uint32_t nCmdShow_1;
    PWSTR var_2f0_1;
    HANDLE var_3c;
    HWND var_28;
    uint32_t nCmdShow_4;
    BOOL eax_17;
    int16_t* lpString2;
    HANDLE eax_44;
    uint32_t i;
    bool cond:20_1;
    switch (edx)
    {
        case 3:
        {
            var_2f0_1 = nullptr;
            nCmdShow_1 = nCmdShow;
            break;
        }
        case 0xc:
        {
            eax_17 = sub_40683d(sub_402da6(0));
            break;
        }
        case 0x12:
        {
            cond:20_1 = SearchPathW(nullptr, sub_402da6(0xffffffff), nullptr, 0x400, ((nCmdShow << 0xb) + 0x42b000), &arg1) != 0;
            break;
        }
        case 0x14:
        {
            lpString2 = sub_402da6(0x31);
            arg1 = (nCmdShow_2 & 7);
            if (sub_405e4d(lpString2) == 0)
            {
                lstrcatW(sub_405dd6(sub_406507(&data_40a5c8, &data_436000)), lpString2);
            }
            else
            {
                sub_406507(&data_40a5c8, lpString2);
            }
            sub_40678e(&data_40a5c8);
            do
            {
                if (arg1 >= 3)
                {
                    void* eax_32 = sub_40683d(&data_40a5c8);
                    int32_t ecx_11 = 0;
                    if (eax_32 != 0)
                    {
                        ecx_11 = CompareFileTime((eax_32 + 0x14), &var_28);
                    }
                    int32_t eax_38 = (((arg1 - 3) | 0x80000000) & ecx_11);
                    int32_t eax_39 = -(eax_38);
                    arg1 = ((eax_39 - eax_39) + 1);
                }
                if (arg1 == 0)
                {
                    sub_405fd2(&data_40a5c8);
                }
                int32_t eax_42;
                eax_42 = arg1 != 1;
                eax_44 = sub_405ff7(&data_40a5c8, 0x40000000, (eax_42 + 1));
                var_3c = eax_44;
                if (eax_44 != 0xffffffff)
                {
                    break;
                }
                if (arg1 != 0)
                {
                    break;
                }
                sub_406507(&data_40b5c8, &data_42b000);
                sub_406507(&data_42b000, &data_40a5c8);
                sub_406544(&data_40adc8, nCmdShow_4);
                sub_406507(&data_42b000, &data_40b5c8);
                i = sub_405b67(0x40adc8, (nCmdShow_2 >> 3));
            } while (i == 4);
            break;
        }
    }
    int32_t var_2f4_17;
    uint32_t var_2c;
    uint32_t var_24;
    bool cond:44_1;
    if (edx == 0x14)
    {
        if ((eax_44 == 0xffffffff && arg1 != 0))
        {
            sub_405569(0xffffffe2, lpString2);
            cond:44_1 = arg1 != 2;
        }
        if (!((eax_44 == 0xffffffff && arg1 != 0)))
        {
            if (eax_44 != 0xffffffff)
            {
                sub_405569(0xffffffea, lpString2);
                *data_42a2d4 = (*data_42a2d4 + 1);
                uint32_t eax_49 = sub_4032b4(var_2c, var_3c, nullptr, 0);
                *data_42a2d4 = (*data_42a2d4 - 1);
                if ((var_28 != 0xffffffff || (var_28 == 0xffffffff && var_24 != 0xffffffff)))
                {
                    SetFileTime(var_3c, &var_28, nullptr, &var_28);
                }
                CloseHandle(var_3c);
                if (eax_49 >= 0)
                {
                    goto label_402c2d;
                }
                if (eax_49 != 0xfffffffe)
                {
                    sub_406544(&data_40a5c8, 0xffffffee);
                }
                else
                {
                    sub_406544(&data_40a5c8, 0xffffffe9);
                    lstrcatW(&data_40a5c8, lpString2);
                }
                int32_t var_2f0_35 = 0x200010;
                var_2f4_17 = 0x40a5c8;
                goto label_402398;
            }
            if (i == 5)
            {
                data_42a2a8 = (data_42a2a8 + 1);
                goto label_402c33;
            }
            var_2f0_1 = &data_40a5c8;
            nCmdShow_1 = 0xfffffffa;
        }
    }
    if ((edx == 3 || (edx == 0x14 && !((eax_44 == 0xffffffff && arg1 != 0)))))
    {
        sub_405569(nCmdShow_1, var_2f0_1);
    label_40239d:
        nCmdShow = 0x7fffffff;
        goto label_402c39;
    }
    int32_t var_2f0_36;
    HANDLE nCmdShow_3;
    HGLOBAL nCmdShow_5;
    HANDLE lParam_4;
    uint32_t i_1;
    PWSTR hMem_2;
    switch (edx)
    {
        case 0x15:
        {
            var_2f0_36 = 0;
            break;
        }
        case 0x17:
        {
            var_2f0_36 = 0xfffffff0;
            break;
        }
        case 0x18:
        {
            lParam_4 = lstrlenW(sub_402da6(1));
            break;
        }
        case 0x1f:
        {
            i_1 = var_2c;
            hMem_2 = data_40ce28;
            break;
        }
        case 0x22:
        {
            HWND hWnd_1;
            HGLOBAL nCmdShow_19;
            hWnd_1 = sub_402d84(0);
            nCmdShow_5 = nCmdShow_19;
            eax_17 = IsWindow(hWnd_1);
            break;
        }
        case 0x23:
        {
            int32_t nIDDlgItem;
            HGLOBAL nCmdShow_20;
            nIDDlgItem = sub_402d84(2);
            nCmdShow_5 = nCmdShow_20;
            HWND hDlg;
            HGLOBAL nCmdShow_21;
            hDlg = sub_402d84(1);
            nCmdShow_5 = nCmdShow_21;
            lParam_4 = GetDlgItem(hDlg, nIDDlgItem);
            break;
        }
        case 0x26:
        {
            HDC eax_115 = GetDC(lpFileOp_1);
            int32_t nNumber;
            HGLOBAL nCmdShow_24;
            nNumber = sub_402d84(2);
            nCmdShow_5 = nCmdShow_24;
            data_40cdc8 = -(MulDiv(nNumber, GetDeviceCaps(eax_115, 0x5a), 0x48));
            ReleaseDC(lpFileOp_1, eax_115);
            int32_t eax_119;
            HGLOBAL nCmdShow_25;
            eax_119 = sub_402d84(3);
            data_40cdd8 = eax_119;
            eax_119 = var_24;
            nCmdShow_5 = nCmdShow_25;
            data_40cddf = 1;
            data_40cddc = (eax_119 & 1);
            char ecx_27 = (eax_119 & 2);
            eax_119 = (eax_119 & 4);
            data_40cddd = ecx_27;
            data_40cdde = eax_119;
            sub_406544(&data_40cde4, nCmdShow_3);
            lParam_4 = CreateFontIndirectW(&data_40cdc8);
            break;
        }
        case 0x31:
        {
            arg1 = data_40a010;
            int16_t* lpAppName = sub_402da6(1);
            nCmdShow_5 = sub_402da6(0x12);
            int16_t* lpFileName_1 = sub_402da6(0xffffffdd);
            GetPrivateProfileStringW(lpAppName, nCmdShow_5, &arg1, ((nCmdShow << 0xb) + 0x42b000), 0x3ff, lpFileName_1);
            cond:20_1 = *((nCmdShow << 0xb) + 0x42b000) != 0xa;
            break;
        }
        case 0x37:
        {
            lParam_4 = sub_405ff7(sub_402da6(0xffffffed), nCmdShow_3, var_2c);
            break;
        }
    }
    if ((edx == 0x15 || edx == 0x17))
    {
        sub_405c13(sub_402da6(var_2f0_36), nCmdShow_3);
        goto label_402c2d;
    }
    PWSTR var_2f4_26;
    PWSTR var_2f0_47;
    PWSTR hMem;
    if (edx == 0x1f)
    {
        if (i_1 == 0)
        {
            if (nCmdShow_3 == 0)
            {
                HGLOBAL eax_82 = GlobalAlloc(GMEM_ZEROINIT, 0x804);
                sub_406544((eax_82 + 4), nCmdShow_2);
                *eax_82 = data_40ce28;
                data_40ce28 = eax_82;
                goto label_402c2d;
            }
            if (hMem_2 == 0)
            {
                goto label_40292e;
            }
            sub_406507(((nCmdShow << 0xb) + 0x42b000), &hMem_2[2]);
            hMem = hMem_2;
            data_40ce28 = *hMem_2;
        }
        else
        {
            do
            {
                i_1 = (i_1 - 1);
                if (hMem_2 == 0)
                {
                    break;
                }
                hMem_2 = *hMem_2;
            } while (i_1 != 0);
            if ((hMem_2 != 0 && hMem_2 != 0))
            {
                sub_406507(&data_40a5c8, &hMem_2[2]);
                sub_406507(&hMem_2[2], (data_40ce28 + 4));
                var_2f0_47 = &data_40a5c8;
                var_2f4_26 = (data_40ce28 + 4);
                goto label_402a94;
            }
        }
    }
    if ((edx == 0xc || edx == 0x22))
    {
        if (eax_17 != 0)
        {
            nCmdShow = nCmdShow_3;
            goto label_402c39;
        }
    label_401a20:
        nCmdShow = var_2c;
        goto label_402c39;
    }
    if ((edx == 0x12 || edx == 0x31))
    {
        if (cond:20_1)
        {
            goto label_402c2d;
        }
        goto label_4028fc;
    }
    HANDLE lParam_1;
    if ((((edx == 0x18 || edx == 0x23) || edx == 0x26) || (edx == 0x37 && lParam_4 != 0xffffffff)))
    {
        lParam_1 = lParam_4;
        goto label_40156d;
    }
    void lpFindFileData;
    HANDLE eax_231;
    if (edx == 0x3d)
    {
        eax_231 = FindFirstFileW(sub_402da6(2), &lpFindFileData);
        if (eax_231 != 0xffffffff)
        {
            sub_40644e(((nCmdShow_3 << 0xb) + 0x42b000), eax_231);
        }
        else
        {
            *((nCmdShow_3 << 0xb) + 0x42b000) = 0;
        }
    }
    if (((edx == 0x3d && eax_231 == 0xffffffff) || (edx == 0x37 && lParam_4 == 0xffffffff)))
    {
        *((nCmdShow << 0xb) + 0x42b000) = 0;
        goto label_40292e;
    }
    PWSTR var_2f4_81;
    int32_t var_2f0_14;
    HANDLE hObject;
    HWND lpFileOp;
    int32_t hObject_1;
    int32_t cbMultiByte_1;
    uint32_t var_48;
    int32_t cbMultiByte_2;
    BOOL eax_8;
    HANDLE lParam;
    switch (edx)
    {
        case 8:
        {
            SetForegroundWindow(lpFileOp_1);
            goto label_402c2d;
        }
        case 0xa:
        {
            eax_8 = SetFileAttributesW(sub_402da6(0xfffffff0), nCmdShow_3);
        label_4015b4:
            cond:44_1 = eax_8 != 0;
            break;
        }
        case 0xb:
        {
            int16_t* eax_9 = sub_402da6(0xfffffff0);
            arg1 = eax_9;
            void* esi_2 = sub_405e81(eax_9);
            if (esi_2 != 0)
            {
                int16_t* edi_2;
                do
                {
                    int16_t* esi_3 = sub_405e03(esi_2, 0x5c);
                    edi_2 = *esi_3;
                    *esi_3 = 0;
                    int32_t eax_12;
                    if ((edi_2 == 0 && var_2c != 0))
                    {
                        eax_12 = sub_405ad2();
                    }
                    enum WIN32_ERROR eax_13;
                    if (((edi_2 != 0 || (edi_2 == 0 && var_2c == 0)) || ((edi_2 == 0 && var_2c != 0) && eax_12 == 0)))
                    {
                        eax_13 = sub_405ab5(arg1);
                    }
                    if (((edi_2 == 0 && var_2c != 0) && eax_12 != 0))
                    {
                        eax_13 = sub_405a38(arg1);
                    }
                    if (eax_13 != NO_ERROR)
                    {
                        char eax_14;
                        if (eax_13 == ERROR_ALREADY_EXISTS)
                        {
                            eax_14 = GetFileAttributesW(arg1);
                        }
                        if ((eax_13 != ERROR_ALREADY_EXISTS || (eax_13 == ERROR_ALREADY_EXISTS && (eax_14 & 0x10) == 0)))
                        {
                            var_8 = (var_8 + 1);
                        }
                    }
                    *esi_3 = edi_2;
                    esi_2 = &esi_3[1];
                } while (edi_2 != 0);
            }
            if (nCmdShow_3 == 0)
            {
                var_2f0_14 = 0xfffffff5;
                goto label_4022f1;
            }
            sub_401423(0xffffffe6);
            sub_406507(&data_436000, arg1);
            if (SetCurrentDirectoryW(arg1) == 0)
            {
                var_8 = (var_8 + 1);
            }
            goto label_402c2d;
        }
        case 0xf:
        {
            lParam_1 = &data_42a2a0[nCmdShow_3];
        label_40156d:
            var_2f4_81 = ((nCmdShow << 0xb) + 0x42b000);
        label_402ba4:
            sub_40644e(var_2f4_81, lParam_1);
            goto label_402c2d;
        }
        case 0x10:
        {
            int16_t* lpExistingFileName = sub_402da6(0xffffffd0);
            int16_t* lpNewFileName = sub_402da6(0xffffffdf);
            sub_402da6(0x13);
            if (MoveFileW(lpExistingFileName, lpNewFileName) != 0)
            {
                var_2f0_14 = 0xffffffe3;
            label_4022f1:
                sub_401423(var_2f0_14);
                goto label_402c2d;
            }
            if (var_2c == 0)
            {
                goto label_40292e;
            }
            if (sub_40683d(lpExistingFileName) == 0)
            {
                goto label_40292e;
            }
            sub_4062c7(lpExistingFileName, lpNewFileName);
            var_2f0_14 = 0xffffffe4;
            goto label_4022f1;
        }
        case 0x13:
        {
            PWSTR eax_26;
            int32_t ecx_10;
            eax_26 = sub_402da6(0xffffffef);
            eax_8 = sub_406026(ecx_10, ((nCmdShow << 0xb) + 0x42b000), eax_26);
            goto label_4015b4;
        }
        case 0x1a:
        {
            int16_t* lpString1 = sub_402da6(0x20);
            int16_t* lpString2_1 = sub_402da6(0x31);
            int32_t eax_62;
            if (var_24 != 0)
            {
                eax_62 = lstrcmpW(lpString1, lpString2_1);
            }
            else
            {
                eax_62 = lstrcmpiW(lpString1, lpString2_1);
            }
            if (eax_62 == 0)
            {
                goto label_401a20;
            }
            goto label_401a9c;
        }
        case 0x1d:
        {
            PWSTR eax_67;
            HGLOBAL nCmdShow_12;
            eax_67 = sub_402d84(1);
            nCmdShow_5 = nCmdShow_12;
            arg1 = eax_67;
            int32_t eax_68;
            HGLOBAL nCmdShow_13;
            eax_68 = sub_402d84(2);
            nCmdShow_5 = nCmdShow_13;
            HWND eax_69 = var_28;
            if (eax_69 > 0xd)
            {
                lParam = arg1;
            }
            else
            {
                HANDLE lParam_2;
                HANDLE lParam_3;
                switch (eax_69)
                {
                    case nullptr:
                    {
                        lParam = (eax_67 + eax_68);
                        break;
                    }
                    case 1:
                    {
                        lParam = (eax_67 - eax_68);
                        break;
                    }
                    case 2:
                    {
                        lParam_3 = (eax_68 * eax_67);
                        break;
                    }
                    case 4:
                    {
                        lParam_3 = (eax_68 | eax_67);
                        break;
                    }
                    case 5:
                    {
                        lParam_3 = (eax_68 & eax_67);
                        break;
                    }
                    case 6:
                    {
                        lParam_3 = (eax_68 ^ eax_67);
                        break;
                    }
                    case 7:
                    {
                        lParam_2 = eax_67 == 0;
                        break;
                    }
                    case 0xb:
                    {
                        lParam = (eax_67 << eax_68);
                        break;
                    }
                    case 0xc:
                    {
                        lParam = (eax_67 >> eax_68);
                        break;
                    }
                    case 0xd:
                    {
                        lParam = (eax_67 >> eax_68);
                        break;
                    }
                }
                if ((((eax_69 == 2 || eax_69 == 4) || eax_69 == 5) || eax_69 == 6))
                {
                    lParam = lParam_3;
                }
                if ((eax_69 == 3 && eax_68 != 0))
                {
                    int32_t eax_71;
                    int32_t edx_2;
                    edx_2 = HIGHD(eax_67);
                    eax_71 = LOWD(eax_67);
                    lParam_2 = (COMBINE(edx_2, eax_71) / eax_68);
                }
                if ((eax_69 == 7 || (eax_69 == 3 && eax_68 != 0)))
                {
                    lParam = lParam_2;
                }
                if (((eax_69 == 8 && eax_67 != 0) || (((eax_69 == 8 && eax_67 == 0) || (eax_69 == 9 && eax_67 != 0)) && eax_68 != 0)))
                {
                    lParam = 1;
                }
                if (((eax_69 == 9 && eax_67 == 0) || (((eax_69 == 8 && eax_67 == 0) || (eax_69 == 9 && eax_67 != 0)) && eax_68 == 0)))
                {
                    lParam = nullptr;
                }
                if ((eax_69 == 0xa && eax_68 != 0))
                {
                    int32_t eax_73;
                    int32_t edx_4;
                    edx_4 = HIGHD(eax_67);
                    eax_73 = LOWD(eax_67);
                    lParam = (COMBINE(edx_4, eax_73) % eax_68);
                }
                if (((eax_69 == 3 && eax_68 == 0) || (eax_69 == 0xa && eax_68 == 0)))
                {
                    lParam = nullptr;
                    var_8 = 1;
                }
            }
            break;
        }
        case 0x1e:
        {
            int16_t* param1 = sub_402da6(1);
            int32_t eax_75;
            HGLOBAL nCmdShow_14;
            eax_75 = sub_402d84(2);
            nCmdShow_5 = nCmdShow_14;
            wsprintfW(((nCmdShow << 0xb) + 0x42b000), param1, eax_75);
            goto label_402c2d;
        }
        case 0x20:
        case 0x21:
        {
            WPARAM eax_85;
            HGLOBAL nCmdShow_15;
            eax_85 = sub_402d84(3);
            nCmdShow_5 = nCmdShow_15;
            WPARAM var_1c_1 = eax_85;
            PWSTR eax_86;
            HGLOBAL nCmdShow_16;
            eax_86 = sub_402d84(4);
            nCmdShow_5 = nCmdShow_16;
            arg1 = eax_86;
            if ((nCmdShow_4 & 1) != 0)
            {
                var_1c_1 = sub_402da6(0x33);
            }
            if ((nCmdShow_4 & 2) != 0)
            {
                arg1 = sub_402da6(0x44);
            }
            HWND hWnd;
            uint32_t Msg;
            LRESULT eax_93;
            int32_t uTimeout;
            if (var_38 != 0x21)
            {
                int16_t* eax_94 = sub_402da6(1);
                int16_t* eax_95;
                int32_t ecx_18;
                eax_95 = sub_402da6(0x12);
                ecx_18 = *eax_95;
                int16_t temp7_1 = ecx_18;
                ecx_18 = -(ecx_18);
                PWSTR lpszWindow = ((ecx_18 - ecx_18) & eax_95);
                eax_95 = *eax_94;
                int16_t temp8_1 = eax_95;
                eax_95 = -(eax_95);
                eax_93 = FindWindowExW(var_1c_1, arg1, ((eax_95 - eax_95) & eax_94), lpszWindow);
            }
            else
            {
                HGLOBAL nCmdShow_17;
                hWnd = sub_402d84(1);
                nCmdShow_5 = nCmdShow_17;
                HGLOBAL nCmdShow_18;
                Msg = sub_402d84(2);
                nCmdShow_5 = nCmdShow_18;
                uTimeout = (nCmdShow_4 >> 2);
                if (uTimeout == 0)
                {
                    eax_93 = SendMessageW(hWnd, Msg, var_1c_1, arg1);
                }
            }
            if ((var_38 != 0x21 || (var_38 == 0x21 && uTimeout == 0)))
            {
                var_3c = eax_93;
            }
            if ((var_38 == 0x21 && uTimeout != 0))
            {
                LRESULT eax_89 = SendMessageTimeoutW(hWnd, Msg, var_1c_1, arg1, SMTO_NORMAL, uTimeout, &var_3c);
                int32_t eax_90 = -(eax_89);
                var_8 = ((eax_90 - eax_90) + 1);
            }
            if (nCmdShow_2 < 0)
            {
                goto label_402c2d;
            }
            lParam_1 = var_3c;
            goto label_40156d;
        }
        case 0x24:
        {
            int32_t dwNewLong = (data_42a268 + nCmdShow_3);
            HWND hWnd_2;
            HGLOBAL nCmdShow_22;
            hWnd_2 = sub_402d84(0);
            nCmdShow_5 = nCmdShow_22;
            SetWindowLongW(hWnd_2, 0xffffffeb, dwNewLong);
            goto label_402c2d;
        }
        case 0x28:
        {
            int16_t* eax_121 = sub_402da6(0);
            int16_t* eax_122 = sub_402da6(0x31);
            int16_t* eax_123 = sub_402da6(0x22);
            sub_402da6(0x15);
            sub_401423(0xffffffec);
            HWND lpFileOp_2 = lpFileOp_1;
            lpFileOp = var_28;
            HWND eax_126;
            eax_126 = *eax_121;
            int16_t temp2_1 = eax_126;
            eax_126 = -(eax_126);
            int16_t* var_80_1 = eax_122;
            void* var_84_1 = ((eax_126 - eax_126) & eax_121);
            void* eax_128;
            eax_128 = *eax_123;
            int16_t temp3_1 = eax_128;
            eax_128 = -(eax_128);
            int32_t var_78_1 = 0x436000;
            void* var_7c_1 = ((eax_128 - eax_128) & eax_123);
            void var_90;
            BOOL eax_131;
            uint32_t ecx_29;
            eax_131 = sub_405b2d(&var_90);
            if (eax_131 == 0)
            {
                goto label_40292e;
            }
            if ((var_24 & 0x40) == 0)
            {
                goto label_402c2d;
            }
            sub_40697f(ecx_29, hObject_1);
            hObject = hObject_1;
            break;
        }
        case 0x29:
        {
            PWSTR eax_132 = sub_402da6(0);
            sub_405569(0xffffffeb, eax_132);
            BOOL hObject_4;
            uint32_t ecx_30;
            hObject_4 = sub_405aea(eax_132);
            HANDLE hObject_3 = hObject_4;
            if (hObject_3 == 0)
            {
                goto label_40292e;
            }
            if (var_2c != 0)
            {
                uint32_t eax_133 = sub_40697f(ecx_30, hObject_3);
                if (nCmdShow_3 >= 0)
                {
                    sub_40644e(((nCmdShow_3 << 0xb) + 0x42b000), eax_133);
                }
                else if (eax_133 != 0)
                {
                    var_8 = 1;
                }
            }
            hObject = hObject_3;
            break;
        }
        case 0x2a:
        {
            void* eax_135 = sub_40683d(sub_402da6(2));
            if (eax_135 == 0)
            {
                *((nCmdShow << 0xb) + 0x42b000) = 0;
                *((nCmdShow_3 << 0xb) + 0x42b000) = 0;
            label_40292e:
                var_8 = 1;
                goto label_402c2d;
            }
            sub_40644e(((nCmdShow_3 << 0xb) + 0x42b000), *(eax_135 + 0x14));
            lParam_1 = *(eax_135 + 0x18);
            goto label_40156d;
        }
        case 0x2b:
        {
            int16_t* eax_137 = sub_402da6(0xffffffee);
            var_3c = eax_137;
            uint32_t dwBytes = sub_4068d4(0xa)(eax_137, &nCmdShow_5);
            *((nCmdShow << 0xb) + 0x42b000) = 0;
            *((nCmdShow_3 << 0xb) + 0x42b000) = 0;
            var_8 = 1;
            if (dwBytes == 0)
            {
                goto label_402c2d;
            }
            HGLOBAL eax_140 = GlobalAlloc(GMEM_ZEROINIT, dwBytes);
            arg1 = eax_140;
            if (eax_140 == 0)
            {
                goto label_402c2d;
            }
            cbMultiByte_2 = sub_4068d4(0xb);
            int32_t eax_142 = sub_4068d4(0xc);
            if ((cbMultiByte_2(var_3c, 0, dwBytes, arg1) != 0 && eax_142(arg1, &data_40a014, &var_48, &cbMultiByte_1) != 0))
            {
                sub_40644e(((nCmdShow << 0xb) + 0x42b000), *((var_48 + (var_28 << 2)) + 8));
                sub_40644e(((nCmdShow_3 << 0xb) + 0x42b000), *((var_48 + (var_28 << 2)) + 0xc));
                var_8 = 0;
            }
            hMem = arg1;
            break;
        }
        case 0x42:
        {
            goto label_402c2d;
        }
    }
    if (((edx == 0x1f && i_1 == 0) || edx == 0x2b))
    {
        GlobalFree(hMem);
        goto label_402c2d;
    }
    HKEY hKey;
    int16_t var_64;
    BOOL lpWideCharStr;
    HANDLE lParam_5;
    HKEY hKey_2;
    switch (edx)
    {
        case 0x2c:
        {
            var_8 = 1;
            if (data_42a2e0 < 0)
            {
                var_2f0_14 = 0xffffffe7;
                goto label_4022f1;
            }
            int16_t* eax_147 = sub_402da6(0xfffffff0);
            var_48 = sub_402da6(1);
            HMODULE eax_149;
            if (var_24 != 0)
            {
                eax_149 = GetModuleHandleW(eax_147);
                arg1 = eax_149;
            }
            if ((var_24 == 0 || (var_24 != 0 && eax_149 == 0)))
            {
                HMODULE eax_150 = LoadLibraryExW(eax_147, nullptr, LOAD_WITH_ALTERED_SEARCH_PATH);
                arg1 = eax_150;
                if (eax_150 == 0)
                {
                    var_2f0_14 = 0xfffffff6;
                    goto label_4022f1;
                }
            }
            int32_t eax_151 = sub_406943(arg1, var_48);
            if (eax_151 == 0)
            {
                sub_405569(0xfffffff7, var_48);
            }
            else
            {
                var_8 = 0;
                if (var_2c == 0)
                {
                    eax_151(lpFileOp_1, 0x400, 0x42b000, 0x40ce28, 0x40a000);
                }
                else
                {
                    sub_401423(var_2c);
                    if (eax_151() != 0)
                    {
                        var_8 = 1;
                    }
                }
            }
            if ((var_28 == 0 && sub_403b56(arg1) != 0))
            {
                FreeLibrary(arg1);
            }
            goto label_402c2d;
        }
        case 0x2e:
        {
            int16_t* lpString_1 = sub_402da6(0);
            int16_t* lpString_2 = sub_402da6(0x11);
            arg1 = sub_402da6(0x23);
            if (sub_40683d(lpString_1) != 0)
            {
                lpFileOp = lpFileOp_1;
                int32_t var_70_1 = 2;
                lpString_1[(lstrlenW(lpString_1) + 1)] = 0;
                lpString_2[(lstrlenW(lpString_2) + 1)] = 0;
                PWSTR eax_183 = arg1;
                int16_t* lpString_4 = lpString_1;
                int16_t* lpString_5 = lpString_2;
                PWSTR var_5a = eax_183;
                var_64 = var_2c;
                sub_405569(0, eax_183);
                if (SHFileOperationW(&lpFileOp) == 0)
                {
                    goto label_402c2d;
                }
            }
            sub_405569(0xfffffff9, nullptr);
            goto label_40292e;
        }
        case 0x2f:
        {
            if (nCmdShow == 0xbadf00d)
            {
                data_42a2b4 = (data_42a2b4 + 1);
                goto label_402c2d;
            }
            break;
        }
        case 0x33:
        {
            nCmdShow_5 = nCmdShow_4;
            var_48 = sub_402da6(2);
            var_8 = 1;
            PWSTR eax_199 = sub_402e36(nCmdShow, sub_402da6(0x11), 2);
            arg1 = eax_199;
            if (eax_199 == 0)
            {
                goto label_402c2d;
            }
            uint32_t cbData = 0;
            if (var_24 == 1)
            {
                sub_402da6(0x23);
                cbData = ((lstrlenW(&data_40b5c8) * 2) + 2);
            }
            if (var_24 == 4)
            {
                int32_t eax_201;
                HANDLE edx_7;
                eax_201 = sub_402d84(3);
                data_40b5c8 = eax_201;
                var_3c = edx_7;
                cbData = var_24;
            }
            if (var_24 == 3)
            {
                cbData = sub_4032b4(var_28, nullptr, &data_40b5c8, 0x1800);
            }
            if (RegSetValueExW(arg1, var_48, 0, nCmdShow_5, &data_40b5c8, cbData) == NO_ERROR)
            {
                var_8 = 0;
            }
            hKey = arg1;
            goto label_4025fd;
        }
        case 0x34:
        {
            hKey_2 = sub_402de6(0x20019);
            int16_t* lpValueName = sub_402da6(0x33);
            *((nCmdShow << 0xb) + 0x42b000) = 0;
            if (hKey_2 == 0)
            {
                goto label_40292e;
            }
            nCmdShow_5 = 0x800;
            enum WIN32_ERROR eax_204 = RegQueryValueExW(hKey_2, lpValueName, nullptr, &arg1, ((nCmdShow << 0xb) + 0x42b000), &nCmdShow_5);
            if ((eax_204 != NO_ERROR || (((eax_204 == NO_ERROR && arg1 != 4) && arg1 != 1) && arg1 != 2)))
            {
                *((nCmdShow << 0xb) + 0x42b000) = 0;
                var_8 = 1;
            label_4025fc:
                hKey = hKey_2;
            label_4025fd:
                RegCloseKey(hKey);
                goto label_402c2d;
            }
            if (eax_204 == NO_ERROR)
            {
                if ((arg1 == 1 || arg1 == 2))
                {
                    var_8 = var_24;
                }
                if (arg1 == 4)
                {
                    uint32_t eax_206;
                    eax_206 = var_24 == 0;
                    var_8 = eax_206;
                    sub_40644e(((nCmdShow << 0xb) + 0x42b000), *((nCmdShow << 0xb) + 0x42b000));
                    goto label_4025fc;
                }
            }
            break;
        }
        case 0x35:
        {
            hKey_2 = sub_402de6(0x20019);
            uint32_t dwIndex;
            HGLOBAL nCmdShow_28;
            dwIndex = sub_402d84(3);
            nCmdShow_5 = nCmdShow_28;
            *((nCmdShow << 0xb) + 0x42b000) = 0;
            if (hKey_2 == 0)
            {
                goto label_40292e;
            }
            arg1 = 0x3ff;
            if (var_24 != 0)
            {
                RegEnumKeyW(hKey_2, dwIndex, ((nCmdShow << 0xb) + 0x42b000), 0x3ff);
            }
            else if (RegEnumValueW(hKey_2, dwIndex, ((nCmdShow << 0xb) + 0x42b000), &arg1, nullptr, nullptr, nullptr, nullptr) != NO_ERROR)
            {
                var_8 = 1;
            }
            break;
        }
        case 0x36:
        {
            HANDLE hObject_2 = sub_406467(((nCmdShow << 0xb) + 0x42b000));
            if (hObject_2 == 0)
            {
                goto label_402c2d;
            }
            hObject = hObject_2;
            break;
        }
        case 0x38:
        case 0x44:
        {
            nCmdShow_5 = var_2c;
            int32_t ecx_50;
            ecx_50 = edx == 0x38;
            PWSTR eax_213;
            if (var_2c != 0)
            {
                int16_t eax_211;
                uint32_t edx_8;
                eax_211 = sub_402d84(1);
                data_40adc8 = eax_211;
                int32_t eax_212;
                eax_212 = ecx_50 == 0;
                var_48 = edx_8;
                eax_213 = (eax_212 + 1);
            }
            else if (edx != 0x38)
            {
                eax_213 = (lstrlenW(sub_402da6(0x11)) * 2);
            }
            else
            {
                sub_402da6(0x21);
                sub_406529(&data_40b5c8, &data_40adc8, 0x400);
                eax_213 = lstrlenA(&data_40adc8);
            }
            bool cond:32_1 = *((nCmdShow << 0xb) + 0x42b000) == 0;
            arg1 = eax_213;
            if (cond:32_1)
            {
                goto label_40292e;
            }
            HANDLE eax_216 = sub_406467(((nCmdShow << 0xb) + 0x42b000));
            if ((((ecx_50 | nCmdShow_5) == 0 && var_28 != 0) && sub_4060d8(eax_216, eax_216) < 0))
            {
                goto label_40292e;
            }
            eax_8 = sub_4060a9(eax_216, &data_40adc8, arg1);
            goto label_4015b4;
        }
        case 0x39:
        case 0x45:
        {
            int32_t var_c_3 = 0;
            cbMultiByte_1 = 2;
            uint32_t eax_218;
            HGLOBAL nCmdShow_29;
            eax_218 = sub_402d84(2);
            nCmdShow_5 = nCmdShow_29;
            var_48 = eax_218;
            if (eax_218 < 1)
            {
                goto label_402c2d;
            }
            if (eax_218 > 0x3ff)
            {
                var_48 = 0x3ff;
            }
            if (*((nCmdShow << 0xb) + 0x42b000) != 0)
            {
                var_3c = nullptr;
                HANDLE hFile = sub_406467(((nCmdShow << 0xb) + 0x42b000));
                if (var_48 > 0)
                {
                    while (true)
                    {
                        if (var_38 == 0x39)
                        {
                            if (ReadFile(hFile, &*arg1[2], (2 - var_28), &cbMultiByte_2, nullptr) == 0)
                            {
                                break;
                            }
                            int32_t cbMultiByte = cbMultiByte_2;
                            if (cbMultiByte == 0)
                            {
                                break;
                            }
                            BOOL lpWideCharStr_1;
                            lpWideCharStr_1 = *arg1[2];
                            bool cond:46_1 = var_28 != 0;
                            cbMultiByte_1 = cbMultiByte;
                            lpWideCharStr = lpWideCharStr_1;
                            if (!(cond:46_1))
                            {
                                if (MultiByteToWideChar(0, MB_ERR_INVALID_CHARS, &*arg1[2], cbMultiByte, &lpWideCharStr, 1) != 0)
                                {
                                label_402801:
                                    lpWideCharStr_1 = lpWideCharStr;
                                }
                                else
                                {
                                    int32_t lDistanceToMove_1 = -(cbMultiByte_1);
                                    int32_t cbMultiByte_5;
                                    int32_t i_2;
                                    do
                                    {
                                        cbMultiByte_5 = cbMultiByte_2;
                                        cbMultiByte_2 = (cbMultiByte_2 - 1);
                                        lpWideCharStr_1 = 0xfffd;
                                        lpWideCharStr = 0xfffd;
                                        if (cbMultiByte_5 == 1)
                                        {
                                            break;
                                        }
                                        cbMultiByte_1 = (cbMultiByte_1 - 1);
                                        lDistanceToMove_1 = (lDistanceToMove_1 + 1);
                                        SetFilePointer(hFile, lDistanceToMove_1, nullptr, FILE_CURRENT);
                                        i_2 = MultiByteToWideChar(0, MB_ERR_INVALID_CHARS, &*arg1[2], cbMultiByte_2, &lpWideCharStr, 1);
                                    } while (i_2 == 0);
                                    if (cbMultiByte_5 != 1)
                                    {
                                        goto label_402801;
                                    }
                                }
                                if (var_28 == 0)
                                {
                                    if ((var_3c != 0xd && var_3c != 0xa))
                                    {
                                        int32_t edx_9 = var_c_3;
                                        var_c_3 = (var_c_3 + 1);
                                        ((nCmdShow_3 << 0xb) + 0x42b000)[edx_9] = lpWideCharStr_1;
                                        var_3c = lpWideCharStr_1;
                                        if (lpWideCharStr_1 == 0)
                                        {
                                            break;
                                        }
                                        if (var_c_3 >= var_48)
                                        {
                                            break;
                                        }
                                        continue;
                                    }
                                    if ((var_3c != lpWideCharStr_1 && (lpWideCharStr_1 == 0xd || lpWideCharStr_1 == 0xa)))
                                    {
                                        int32_t edx_10 = var_c_3;
                                        var_c_3 = (var_c_3 + 1);
                                        ((nCmdShow_3 << 0xb) + 0x42b000)[edx_10] = lpWideCharStr_1;
                                        break;
                                    }
                                    SetFilePointer(hFile, -(cbMultiByte_1), nullptr, FILE_CURRENT);
                                    break;
                                }
                                goto label_402841;
                            }
                        label_402841:
                            sub_40644e(((nCmdShow_3 << 0xb) + 0x42b000), lpWideCharStr_1);
                            goto label_402c33;
                        }
                        if (((var_28 == 0 && var_c_3 == 0) && sub_4060d8(hFile, 0) < 0))
                        {
                            break;
                        }
                        if (sub_40607a(hFile, &lpWideCharStr, 2) == 0)
                        {
                            break;
                        }
                        goto label_402801;
                    }
                }
            }
            cond:44_1 = var_c_3 != 0;
            ((nCmdShow_3 << 0xb) + 0x42b000)[var_c_3] = 0;
            break;
        }
        case 0x3f:
        {
            int32_t eax_240;
            HGLOBAL nCmdShow_31;
            eax_240 = sub_402d84(0);
            bool cond:16_1 = eax_240 >= data_42a24c;
            nCmdShow_5 = nCmdShow_31;
            if (cond:16_1)
            {
                goto label_40292e;
            }
            void* esi_44 = ((eax_240 * 0x818) + data_42a248);
            if (var_2c >= 0)
            {
                if (var_2c != 0)
                {
                    lParam_1 = *(esi_44 + (var_2c << 2));
                    goto label_402ba1;
                }
                var_2f0_47 = (esi_44 + 0x18);
                var_2f4_26 = ((nCmdShow_3 << 0xb) + 0x42b000);
                goto label_402a94;
            }
            if (0xffffffff == var_2c)
            {
                sub_406544((esi_44 + 0x18), var_24);
                *(esi_44 + 9) = (*(esi_44 + 9) | 1);
            }
            else
            {
                HANDLE nCmdShow_6;
                HGLOBAL nCmdShow_32;
                nCmdShow_6 = sub_402d84(1);
                nCmdShow_5 = nCmdShow_32;
                nCmdShow_3 = nCmdShow_6;
            }
            *(esi_44 + ((0xffffffff - var_2c) << 2)) = nCmdShow_3;
            if (var_28 != 0)
            {
                sub_40117d(eax_240);
            }
            goto label_402c2d;
        }
        case 0x40:
        {
            int32_t eax_244;
            HGLOBAL nCmdShow_33;
            eax_244 = sub_402d84(0);
            nCmdShow_5 = nCmdShow_33;
            if (eax_244 >= 0x20)
            {
                goto label_40292e;
            }
            if (var_28 == 0)
            {
                if (var_2c == 0)
                {
                    sub_406544(((nCmdShow_3 << 0xb) + 0x42b000), *((data_42a230 + (eax_244 << 2)) + 0x94));
                }
                else
                {
                    *((data_42a230 + (eax_244 << 2)) + 0x94) = nCmdShow_3;
                }
                goto label_402c2d;
            }
            if (var_2c != 0)
            {
                sub_401299(eax_244);
                sub_4011ef(0, 0);
                goto label_402c2d;
            }
            lParam_5 = sub_4012e2(0);
            break;
        }
        case 0x41:
        {
            HWND eax_245 = var_28;
            if (eax_245 != 0)
            {
                if (eax_245 != 1)
                {
                    goto label_402c2d;
                }
                int32_t eax_248;
                HGLOBAL nCmdShow_34;
                eax_248 = sub_402d84(2);
                int32_t esi_46 = eax_248;
                nCmdShow_5 = nCmdShow_34;
                int32_t eax_249;
                HGLOBAL nCmdShow_35;
                eax_249 = sub_402d84(4);
                nCmdShow_5 = nCmdShow_35;
                arg1 = nullptr;
                if (esi_46 == 0)
                {
                    esi_46 = 0x42a2a0;
                }
                sub_405fb2(&arg1, ((eax_249 >> 0x18) + esi_46), eax_249);
                lParam_1 = arg1;
                goto label_402ba1;
            }
            int32_t eax_252 = sub_4068d4(5);
            int16_t* lpsz = sub_402da6(0x22);
            HRESULT eax_253;
            int32_t eax_254;
            if (eax_252 != 0)
            {
                eax_253 = IIDFromString(lpsz, &var_64);
                if (eax_253 >= 0)
                {
                    eax_254 = eax_252(&var_64, var_28, 0, &arg1);
                    if (eax_254 >= 0)
                    {
                        sub_406507(((nCmdShow_3 << 0xb) + 0x42b000), arg1);
                        CoTaskMemFree(arg1);
                    }
                }
            }
            if (((eax_252 == 0 || (eax_252 != 0 && eax_253 < 0)) || ((eax_252 != 0 && eax_253 >= 0) && eax_254 < 0)))
            {
                var_8 = 1;
                *((nCmdShow_3 << 0xb) + 0x42b000) = 0;
            }
            goto label_402c2d;
        }
    }
    if ((edx == 0x34 || edx == 0x35))
    {
        *((nCmdShow << 0xb) + 0x42b7fe) = 0;
        goto label_4025fc;
    }
    else if (((edx == 0x28 || edx == 0x29) || edx == 0x36))
    {
        CloseHandle(hObject);
        goto label_402c2d;
    }
    if ((((((edx == 0x14 && eax_44 == 0xffffffff) && arg1 != 0) || edx == 0xa) || edx == 0x39) || edx == 0x45))
    {
        if (cond:44_1)
        {
            goto label_402c2d;
        }
        goto label_40292e;
    }
    if (((edx == 0x1f && i_1 != 0) || edx == 0x2f))
    {
        int32_t var_2f0_101 = 0x200010;
        var_2f4_17 = sub_406544(nullptr, 0xffffffe8);
    label_402398:
        sub_405b67(var_2f4_17, 0x200010);
        goto label_40239d;
    }
    switch (edx)
    {
        case 4:
        {
            data_4291ec = (data_4291ec + 1);
            if (lpFileOp_1 != 0)
            {
                PostQuitMessage(0);
            }
            goto label_40239d;
        }
        case 5:
        {
            nCmdShow = sub_401389((sub_40136d(nCmdShow) - 1), nullptr);
        label_402c39:
            return nCmdShow;
            break;
        }
        case 7:
        {
            uint32_t dwMilliseconds;
            HGLOBAL nCmdShow_7;
            dwMilliseconds = sub_402d84(0);
            nCmdShow_5 = nCmdShow_7;
            if (dwMilliseconds <= 1)
            {
                dwMilliseconds = 1;
            }
            Sleep(dwMilliseconds);
            goto label_402c2d;
        }
        case 9:
        {
            HWND hWnd_4 = data_4291f0;
            if (hWnd_4 != 0)
            {
                ShowWindow(hWnd_4, nCmdShow_3);
                nCmdShow = nCmdShow_2;
            }
            HWND hWnd_5 = data_429204;
            if (hWnd_5 != 0)
            {
                ShowWindow(hWnd_5, nCmdShow);
            }
            goto label_402c2d;
        }
        case 0xd:
        {
            uint32_t eax_2 = (nCmdShow << 2);
            if (var_2c != 0)
            {
                *(eax_2 + 0x42a2a0) = *(eax_2 + 0x42a300);
            }
            else
            {
                *(eax_2 + 0x42a300) = *(eax_2 + 0x42a2a0);
                int32_t eax_3;
                HGLOBAL nCmdShow_8;
                eax_3 = sub_402d84(1);
                nCmdShow_5 = nCmdShow_8;
                &data_42a2a0[nCmdShow_2] = eax_3;
            }
            goto label_402c2d;
        }
        case 0xe:
        {
            int32_t ecx_8 = &data_42a2a0[var_2c];
            int32_t eax_5;
            eax_5 = ecx_8 == 0;
            nCmdShow = &nCmdShow_2[eax_5];
            &data_42a2a0[var_2c] = (ecx_8 & var_28);
            goto label_402c39;
        }
        case 0x11:
        {
            int16_t* lpFileName = sub_402da6(0);
            uint32_t eax_20 = GetFullPathNameW(lpFileName, 0x400, ((nCmdShow_3 << 0xb) + 0x42b000), &arg1);
            PWSTR eax_21;
            int32_t eax_22;
            if (eax_20 != 0)
            {
                eax_21 = arg1;
                if ((eax_21 > lpFileName && *eax_21 != 0))
                {
                    eax_22 = sub_40683d(lpFileName);
                    if (eax_22 != 0)
                    {
                        sub_406507(arg1, (eax_22 + 0x2c));
                    }
                }
            }
            if ((eax_20 == 0 || (((eax_20 != 0 && eax_21 > lpFileName) && *eax_21 != 0) && eax_22 == 0)))
            {
                var_8 = 1;
                *((nCmdShow_3 << 0xb) + 0x42b000) = 0;
            }
            if (var_2c == 0)
            {
                GetShortPathNameW(((nCmdShow_3 << 0xb) + 0x42b000), ((nCmdShow_3 << 0xb) + 0x42b000), 0x400);
            }
            goto label_402c2d;
        }
        case 0x19:
        {
            PWSTR eax_54;
            HGLOBAL nCmdShow_9;
            eax_54 = sub_402d84(2);
            nCmdShow_5 = nCmdShow_9;
            int32_t eax_55;
            HANDLE edx_1;
            eax_55 = sub_402d84(3);
            int32_t esi_8 = eax_55;
            var_3c = edx_1;
            arg1 = eax_54;
            int16_t* lpString = sub_402da6(1);
            var_48 = lpString;
            int32_t eax_57 = lstrlenW(lpString);
            bool cond:2_1 = nCmdShow_5 != 0;
            *((nCmdShow << 0xb) + 0x42b000) = 0;
            if (!(cond:2_1))
            {
                arg1 = eax_57;
            }
            if (arg1 != 0)
            {
                if (esi_8 < 0)
                {
                    esi_8 = (eax_57 + esi_8);
                }
                if ((esi_8 >= 0 || (esi_8 < 0 && esi_8 >= 0)))
                {
                    if (esi_8 > eax_57)
                    {
                        esi_8 = eax_57;
                    }
                    sub_406507(((nCmdShow << 0xb) + 0x42b000), (var_48 + (esi_8 << 1)));
                    if (arg1 < 0)
                    {
                        int32_t eax_60 = lstrlenW(((nCmdShow << 0xb) + 0x42b000));
                        PWSTR temp12_1 = arg1;
                        arg1 = (arg1 + eax_60);
                        if ((temp12_1 + eax_60) < 0)
                        {
                            arg1 = nullptr;
                        }
                    }
                    PWSTR eax_61 = arg1;
                    if (eax_61 < 0x400)
                    {
                        ((nCmdShow << 0xb) + 0x42b000)[eax_61] = 0;
                    }
                }
            }
            goto label_402c2d;
        }
        case 0x1b:
        {
            int16_t* lpSrc = sub_402da6(1);
            arg1 = lpSrc;
            uint32_t eax_63 = ExpandEnvironmentStringsW(lpSrc, ((nCmdShow << 0xb) + 0x42b000), 0x400);
            int32_t eax_64;
            if ((eax_63 != 0 && var_2c != 0))
            {
                eax_64 = lstrcmpW(arg1, ((nCmdShow << 0xb) + 0x42b000));
            }
            if ((eax_63 == 0 || ((eax_63 != 0 && var_2c != 0) && eax_64 == 0)))
            {
                var_8 = 1;
                *((nCmdShow << 0xb) + 0x42b000) = 0;
            }
            *((nCmdShow << 0xb) + 0x42b7fe) = 0;
            goto label_402c2d;
        }
        case 0x25:
        {
            PWSTR eax_99;
            if ((*var_28[1] & 1) == 0)
            {
                eax_99 = GetDlgItem(lpFileOp_1, var_2c);
            }
            else
            {
                HGLOBAL nCmdShow_23;
                eax_99 = sub_402d84(2);
                nCmdShow_5 = nCmdShow_23;
            }
            HWND ecx_25 = var_28;
            arg1 = eax_99;
            void* esi_19 = (ecx_25 & 4);
            var_3c = (ecx_25 & 3);
            cbMultiByte_2 = ((ecx_25 >> 0x1e) & 1);
            int16_t* eax_107;
            if ((ecx_25 & 0x10000) == 0)
            {
                eax_107 = nCmdShow_3;
            }
            else
            {
                eax_107 = sub_402da6(0x11);
            }
            var_48 = eax_107;
            GetClientRect(arg1, &var_64);
            int32_t esi_20 = -(esi_19);
            int32_t var_5c;
            lParam = LoadImageW(((esi_20 - esi_20) & data_42a220), var_48, var_3c, (var_5c * (ecx_25 >> 0x1f)), (hObject_1 * cbMultiByte_2), (var_28 & 0xfef0));
            LRESULT ho = SendMessageW(arg1, 0x172, var_3c, lParam);
            if ((ho != 0 && var_3c == 0))
            {
                DeleteObject(ho);
            }
            if (nCmdShow_2 < 0)
            {
                goto label_402c2d;
            }
            break;
        }
        case 0x27:
        {
            HWND hWnd_3;
            HGLOBAL nCmdShow_26;
            hWnd_3 = sub_402d84(0);
            nCmdShow_5 = nCmdShow_26;
            enum SHOW_WINDOW_CMD eax_120;
            HGLOBAL nCmdShow_27;
            eax_120 = sub_402d84(1);
            bool cond:6_1 = var_28 != 0;
            nCmdShow_5 = nCmdShow_27;
            if (cond:6_1)
            {
                EnableWindow(hWnd_3, eax_120);
            }
            else
            {
                ShowWindow(hWnd_3, eax_120);
            }
            goto label_402c2d;
        }
        case 0x2d:
        {
            nCmdShow_5 = sub_402da6(0xfffffff0);
            var_48 = sub_402da6(0xffffffdf);
            int16_t* eax_156 = sub_402da6(2);
            cbMultiByte_1 = sub_402da6(0xffffffcd);
            int16_t* eax_158 = sub_402da6(0x45);
            uint32_t var_2f0_85 = var_48;
            lpWideCharStr = (var_24 & 0xfff);
            int32_t esi_31 = ((var_24 >> 0xc) & 7);
            cbMultiByte_2 = (var_24 >> 0x10);
            if (sub_405e4d(var_2f0_85) == 0)
            {
                sub_402da6(0x21);
            }
            HRESULT eax_163 = CoCreateInstance(&data_4084e4, 0, CLSCTX_INPROC_SERVER, &data_4084d4, &arg1);
            int32_t var_1c_4;
            if (eax_163 >= 0)
            {
                PWSTR eax_164 = arg1;
                int32_t eax_165 = **eax_164(eax_164, 0x4084f4, &var_3c);
                var_1c_4 = eax_165;
                if (eax_165 >= 0)
                {
                    PWSTR eax_166 = arg1;
                    var_1c_4 = *(*eax_166 + 0x50)(eax_166, var_48);
                    if ((var_24 & 0x8000) == 0)
                    {
                        PWSTR eax_168 = arg1;
                        *(*eax_168 + 0x24)(eax_168, 0x436000);
                    }
                    if (esi_31 != 0)
                    {
                        PWSTR eax_169 = arg1;
                        *(*eax_169 + 0x3c)(eax_169, esi_31);
                    }
                    PWSTR eax_170 = arg1;
                    *(*eax_170 + 0x34)(eax_170, cbMultiByte_2);
                    int32_t cbMultiByte_4 = cbMultiByte_1;
                    if (*cbMultiByte_4 != 0)
                    {
                        PWSTR eax_171 = arg1;
                        *(*eax_171 + 0x44)(eax_171, cbMultiByte_4, lpWideCharStr);
                    }
                    PWSTR eax_172 = arg1;
                    *(*eax_172 + 0x2c)(eax_172, eax_156);
                    PWSTR eax_173 = arg1;
                    *(*eax_173 + 0x1c)(eax_173, eax_158);
                    if (var_1c_4 >= 0)
                    {
                        HANDLE eax_174 = var_3c;
                        var_1c_4 = *(*eax_174 + 0x18)(eax_174, nCmdShow_5, 1);
                    }
                    HANDLE eax_176 = var_3c;
                    *(*eax_176 + 8)(eax_176);
                }
                PWSTR eax_177 = arg1;
                *(*eax_177 + 8)(eax_177);
                if (var_1c_4 >= 0)
                {
                    var_2f0_14 = 0xfffffff4;
                }
            }
            if ((eax_163 < 0 || (eax_163 >= 0 && var_1c_4 < 0)))
            {
                var_8 = 1;
                var_2f0_14 = 0xfffffff0;
            }
            goto label_4022f1;
        }
        case 0x30:
        {
            int16_t* lpAppName_1 = nullptr;
            int16_t* lpKeyName = nullptr;
            if (nCmdShow != 0)
            {
                lpAppName_1 = sub_402da6(0);
            }
            if (nCmdShow_3 != 0)
            {
                lpKeyName = sub_402da6(0x11);
            }
            if (var_24 != 0)
            {
                lpString_3 = sub_402da6(0x22);
            }
            eax_8 = WritePrivateProfileStringW(lpAppName_1, lpKeyName, lpString_3, sub_402da6(0xffffffcd));
            goto label_4015b4;
        }
        case 0x32:
        {
            enum WIN32_ERROR edi_12;
            if (var_24 != 0)
            {
                edi_12 = sub_402e64(nCmdShow_3, sub_402da6(0x22), (var_24 >> 1));
            }
            else
            {
                HKEY hKey_1 = sub_402de6(2);
                if (hKey_1 == 0)
                {
                    goto label_40292e;
                }
                edi_12 = RegDeleteValueW(hKey_1, sub_402da6(0x33));
                RegCloseKey(hKey_1);
            }
            if (edi_12 == NO_ERROR)
            {
                goto label_402c2d;
            }
            goto label_40292e;
        }
        case 0x3a:
        {
            if (*((nCmdShow << 0xb) + 0x42b000) == 0)
            {
                goto label_402c2d;
            }
            int32_t lDistanceToMove;
            HGLOBAL nCmdShow_30;
            lDistanceToMove = sub_402d84(2);
            nCmdShow_5 = nCmdShow_30;
            lParam_5 = SetFilePointer(sub_406467(((nCmdShow << 0xb) + 0x42b000)), lDistanceToMove, nullptr, var_28);
            if (nCmdShow_3 < 0)
            {
                goto label_402c2d;
            }
            break;
        }
        case 0x3b:
        {
            HANDLE hFindFile = sub_406467(((nCmdShow << 0xb) + 0x42b000));
            if (hFindFile != 0)
            {
                FindClose(hFindFile);
            }
            goto label_402c2d;
        }
        case 0x3c:
        {
            HANDLE hFindFile_1 = sub_406467(((nCmdShow_3 << 0xb) + 0x42b000));
            if (hFindFile_1 == 0)
            {
            label_4028fc:
                var_8 = 1;
                *((nCmdShow << 0xb) + 0x42b000) = 0;
                goto label_402c2d;
            }
            if (FindNextFileW(hFindFile_1, &lpFindFileData) == 0)
            {
                goto label_4028fc;
            }
            break;
        }
        case 0x3e:
        {
            uint32_t edi_16 = 0xfffffd66;
            int16_t* cbMultiByte_3 = sub_402da6(0xfffffff0);
            cbMultiByte_2 = cbMultiByte_3;
            if (sub_405e4d(cbMultiByte_3) == 0)
            {
                sub_402da6(0xffffffed);
            }
            sub_405fd2(cbMultiByte_3);
            HANDLE eax_234 = sub_405ff7(cbMultiByte_3, 0x40000000, CREATE_ALWAYS);
            arg1 = eax_234;
            if (eax_234 != 0xffffffff)
            {
                var_3c = nCmdShow_3;
                if (var_2c != 0)
                {
                    uint32_t dwBytes_1 = data_42a234;
                    var_48 = dwBytes_1;
                    HGLOBAL hMem_1 = GlobalAlloc(GMEM_ZEROINIT, dwBytes_1);
                    if (hMem_1 != 0)
                    {
                        sub_4034af(0);
                        sub_403499(hMem_1, var_48);
                        HGLOBAL nCmdShow_36 = GlobalAlloc(GMEM_ZEROINIT, var_2c);
                        nCmdShow_5 = nCmdShow_36;
                        if (nCmdShow_36 != 0)
                        {
                            sub_4032b4(nCmdShow_3, nullptr, nCmdShow_36, var_2c);
                            while (*nCmdShow_36 != 0)
                            {
                                int32_t ecx_57 = *nCmdShow_36;
                                sub_405fb2((*(nCmdShow_36 + 4) + hMem_1), (nCmdShow_36 + 8), ecx_57);
                                nCmdShow_36 = ((nCmdShow_36 + 8) + ecx_57);
                            }
                            GlobalFree(nCmdShow_5);
                        }
                        sub_4060a9(arg1, hMem_1, var_48);
                        GlobalFree(hMem_1);
                        var_3c = 0xffffffff;
                    }
                }
                edi_16 = sub_4032b4(var_3c, arg1, nullptr, 0);
                CloseHandle(arg1);
            }
            int32_t esi_41 = 0xfffffff3;
            if (edi_16 < 0)
            {
                esi_41 = 0xffffffef;
                DeleteFileW(cbMultiByte_2);
                var_8 = 1;
            }
            var_2f0_14 = esi_41;
            goto label_4022f1;
        }
        case 0x43:
        {
            SendMessageW(lpFileOp_1, 0xb, (data_425708 & nCmdShow), 0);
            if (nCmdShow_2 != 0)
            {
                InvalidateRect(lpFileOp_1, nullptr, 0);
            }
            goto label_402c2d;
        }
    }
    if ((edx == 0x3a || edx == 0x40))
    {
        lParam_1 = lParam_5;
    label_402ba1:
        var_2f4_81 = ((nCmdShow_3 << 0xb) + 0x42b000);
        goto label_402ba4;
    }
    else if ((edx == 0x1d || edx == 0x25))
    {
        lParam_1 = lParam;
        goto label_40156d;
    }
    if (((edx == 0x3d && eax_231 != 0xffffffff) || edx == 0x3c))
    {
        void var_2b4;
        var_2f0_47 = &var_2b4;
        var_2f4_26 = ((nCmdShow << 0xb) + 0x42b000);
    label_402a94:
        sub_406507(var_2f4_26, var_2f0_47);
        goto label_402c2d;
    }
    switch (edx)
    {
        case 2:
        {
            /* nop */
            goto label_402c39;
        }
        case 6:
        {
            sub_405569(nCmdShow, nullptr);
        label_402c2d:
            data_42a2a8 = (data_42a2a8 + var_8);
        label_402c33:
            nCmdShow = 0;
            goto label_402c39;
        }
        case 0x16:
        {
            uint32_t eax_51 = sub_405b67(sub_402da6(0x31), nCmdShow_2);
            if (eax_51 == 0)
            {
                goto label_40292e;
            }
            if (eax_51 == var_2c)
            {
            label_401a9c:
                nCmdShow = var_28;
            }
            else
            {
                if (eax_51 != var_24)
                {
                    goto label_402c2d;
                }
                nCmdShow = nCmdShow_4;
            }
            goto label_402c39;
        }
        case 0x1c:
        {
            int32_t eax_65;
            HGLOBAL nCmdShow_10;
            eax_65 = sub_402d84(0);
            nCmdShow_5 = nCmdShow_10;
            int32_t eax_66;
            HGLOBAL nCmdShow_11;
            eax_66 = sub_402d84(1);
            nCmdShow_5 = nCmdShow_11;
            if (nCmdShow_4 != 0)
            {
                if (eax_65 < eax_66)
                {
                    goto label_401a9c;
                }
                if (eax_65 <= eax_66)
                {
                    goto label_401a20;
                }
            }
            else
            {
                if (eax_65 < eax_66)
                {
                    goto label_401a9c;
                }
                if (eax_65 <= eax_66)
                {
                    goto label_401a20;
                }
            }
            nCmdShow = var_24;
            goto label_402c39;
        }
    }
}

int32_t sub_402d84(int32_t arg1)
{
    int16_t* eax = sub_406544(nullptr, *(data_40ce24 + (arg1 << 2)));
    int32_t eax_1 = sub_406467(eax);
    *eax;
    return eax_1;
}

int16_t* __stdcall sub_402da6(int32_t arg1)
{
    int32_t eax = arg1;
    if (arg1 < 0)
    {
        eax = -(eax);
    }
    int16_t* eax_4 = sub_406544((((eax >> 4) << 0xb) + 0x40a5c8), *(data_40ce24 + ((eax & 0xf) << 2)));
    if (arg1 < 0)
    {
        sub_40678e(eax_4);
    }
    return eax_4;
}

int32_t __stdcall sub_402de6(int32_t arg1)
{
    int32_t* var_8 = &arg1;
    HKEY* eax_1 = (arg1 | 0x100020);
    int16_t* eax_2 = sub_402da6(0x22);
    enum WIN32_ERROR eax_5 = sub_406374(sub_402e1e(*(data_40ce24 + 4)), eax_2, eax_1);
    int32_t eax_6 = -(eax_5);
    return (!((eax_6 - eax_6)) & arg1);
}

int32_t __stdcall sub_402e1e(int32_t arg1)
{
    int32_t eax = arg1;
    if (eax >= 0)
    {
        eax = ((data_42a2a4 + eax) - 0x7fffffff);
    }
    return eax;
}

int32_t __stdcall sub_402e36(int32_t arg1, PWSTR arg2, int32_t arg3)
{
    int32_t* var_8 = &arg3;
    enum WIN32_ERROR eax_3 = sub_4063a2(sub_402e1e(arg1), arg2, (arg3 | 0x100020));
    int32_t eax_4 = -(eax_3);
    return (!((eax_4 - eax_4)) & arg3);
}

enum WIN32_ERROR __stdcall sub_402e64(int32_t arg1, int16_t* arg2, int32_t arg3)
{
    enum WIN32_ERROR eax;
    if (*arg2 == 0)
    {
        eax = ERROR_CAN_NOT_COMPLETE;
    }
    else
    {
        arg3 = (arg3 | 0x100020);
        HKEY eax_2 = sub_4062f3(sub_402e1e(arg1), &arg3);
        if (eax_2 == 0)
        {
            eax = ERROR_INVALID_HANDLE;
        }
        else
        {
            eax = sub_402ea9(eax_2, arg2, arg3);
        }
    }
    return eax;
}

enum WIN32_ERROR __stdcall sub_402ea9(HKEY arg1, PWSTR arg2, int32_t arg3)
{
    HKEY* esi_1 = (arg3 & 0x300);
    HKEY hKey;
    int32_t* var_228 = &hKey;
    uint32_t dwIndex_1 = (arg3 & 1);
    HKEY* eax;
    eax = (esi_1 | 9);
    enum WIN32_ERROR eax_1 = sub_406374(arg1, arg2, eax);
    if (eax_1 == NO_ERROR)
    {
        void lpValueName;
        enum WIN32_ERROR eax_2;
        if ((arg3 & 2) != 0)
        {
            int32_t lpcchValueName = 0;
            eax_2 = RegEnumValueW(hKey, 0, &lpValueName, &lpcchValueName, nullptr, nullptr, nullptr, nullptr);
        }
        enum WIN32_ERROR eax_4;
        if (((arg3 & 2) == 0 || ((arg3 & 2) != 0 && eax_2 == ERROR_NO_MORE_ITEMS)))
        {
            int32_t var_228_1 = 0x105;
            void* lpName = &lpValueName;
            uint32_t dwIndex = 0;
            while (true)
            {
                eax_4 = RegEnumKeyW(hKey, dwIndex, lpName, 0x105);
                if (eax_4 != NO_ERROR)
                {
                    break;
                }
                if (dwIndex_1 != 0)
                {
                    break;
                }
                if (sub_402ea9(hKey, &lpValueName, arg3) != 0)
                {
                    break;
                }
                int32_t var_228_3 = 0x105;
                lpName = &lpValueName;
                dwIndex = dwIndex_1;
            }
        }
        if ((((arg3 & 2) != 0 && eax_2 != ERROR_NO_MORE_ITEMS) || (((arg3 & 2) == 0 || ((arg3 & 2) != 0 && eax_2 == ERROR_NO_MORE_ITEMS)) && eax_4 == NO_ERROR)))
        {
            RegCloseKey(hKey);
            eax_1 = ERROR_CAN_NOT_COMPLETE;
        }
        if ((((arg3 & 2) == 0 || ((arg3 & 2) != 0 && eax_2 == ERROR_NO_MORE_ITEMS)) && eax_4 != NO_ERROR))
        {
            RegCloseKey(hKey);
            int32_t eax_5 = sub_4068d4(3);
            if (eax_5 != 0)
            {
                eax_1 = eax_5(arg1, arg2, esi_1, 0);
            }
            else
            {
                eax_1 = RegDeleteKeyW(arg1, arg2);
            }
        }
    }
    return eax_1;
}

int32_t __stdcall sub_402f93(HWND arg1, int32_t arg2)
{
    if (arg2 == 0x110)
    {
        SetTimer(arg1, 1, 0xfa, nullptr);
        arg2 = 0x113;
    }
    if (arg2 == 0x113)
    {
        int32_t nNumber = data_414eb8;
        int32_t nDenominator = data_420ec4;
        if (nNumber >= nDenominator)
        {
            nNumber = nDenominator;
        }
        void var_84;
        wsprintfW(&var_84, u"verifying installer: %d%%", MulDiv(nNumber, 0x64, nDenominator));
        SetWindowTextW(arg1, &var_84);
        SetDlgItemTextW(arg1, 0x406, &var_84);
    }
    return 0;
}

BOOL sub_403019(int32_t arg1)
{
    if (arg1 != 0)
    {
        BOOL hWnd = data_420ec0;
        if (hWnd != 0)
        {
            hWnd = DestroyWindow(hWnd);
        }
        data_420ec0 = 0;
        return hWnd;
    }
    if (data_420ec0 != 0)
    {
        return sub_406910(0);
    }
    uint32_t eax_1 = GetTickCount();
    if (eax_1 > data_42a22c)
    {
        HWND hWnd_1 = CreateDialogParamW(data_42a220, 0x6f, nullptr, sub_402f93, 0);
        data_420ec0 = hWnd_1;
        eax_1 = ShowWindow(hWnd_1, SW_SHOW);
    }
    return eax_1;
}

wchar16* sub_40307d()
{
    int32_t var_c = 0;
    int32_t var_8 = 0;
    data_42a22c = (GetTickCount() + 0x3e8);
    GetModuleFileNameW(nullptr, &data_438800, 0x400);
    HANDLE hFile = sub_405ff7(&data_438800, 0x80000000, OPEN_EXISTING);
    data_40a018 = hFile;
    wchar16* eax_2;
    if (hFile == 0xffffffff)
    {
        eax_2 = u"Error launching installer";
    }
    else
    {
        sub_406507(&data_436800, &data_438800);
        sub_406507(&data_439000, sub_405e22(&data_436800));
        uint32_t eax_4 = GetFileSize(hFile, nullptr);
        data_420ec4 = eax_4;
        uint32_t esi_1 = eax_4;
        char var_2c;
        if (eax_4 > 0)
        {
            int32_t eax_10;
            uint32_t edi_1;
            uint32_t temp3_1;
            do
            {
                int32_t eax_5 = data_42a234;
                edi_1 = esi_1;
                int32_t eax_6 = -(eax_5);
                if (esi_1 >= (((eax_6 - eax_6) & 0x7e00) + 0x200))
                {
                    edi_1 = (((eax_6 - eax_6) & 0x7e00) + 0x200);
                }
                eax_10 = sub_403499(&data_40ceb8, edi_1);
                if (eax_10 == 0)
                {
                    sub_403019(1);
                    break;
                }
                if (data_42a234 == 0)
                {
                    sub_405fb2(&var_2c, 0x40ceb8, 0x1c);
                    int32_t eax_11 = var_2c;
                    int32_t var_28;
                    int32_t var_24;
                    int32_t var_20;
                    int32_t var_1c;
                    if (((eax_11 & 0xfffffff0) == 0 && (var_28 == 0xdeadbeef && (var_1c == 0x74736e49 && (var_20 == 0x74666f73 && var_24 == 0x6c6c754e)))))
                    {
                        arg_4 = (arg_4 | eax_11);
                        int32_t ecx_1 = data_414eb8;
                        data_42a2c0 = (data_42a2c0 | (arg_4 & 2));
                        data_42a234 = ecx_1;
                        int32_t var_14;
                        if (var_14 > esi_1)
                        {
                            break;
                        }
                        if (((arg_4 & 8) == 0 && (arg_4 & 4) != 0))
                        {
                            break;
                        }
                        var_8 = (var_8 + 1);
                        esi_1 = (var_14 - 4);
                        if (edi_1 > esi_1)
                        {
                            edi_1 = esi_1;
                        }
                    }
                }
                else if ((arg_4 & 2) == 0)
                {
                    sub_403019(0);
                }
                if (esi_1 < data_420ec4)
                {
                    var_c = sub_4069c1(var_c, &data_40ceb8, edi_1);
                }
                data_414eb8 = (data_414eb8 + edi_1);
                temp3_1 = esi_1;
                esi_1 = (esi_1 - edi_1);
            } while (temp3_1 != edi_1);
            if (eax_10 == 0)
            {
                goto label_403253;
            }
        }
        sub_403019(1);
        if (data_42a234 == 0)
        {
        label_403253:
            eax_2 = u"Installer integrity check has fa…";
        }
        else
        {
            if (var_8 != 0)
            {
                sub_4034af(data_414eb8);
                if (sub_403499(&arg_4, 4) == 0)
                {
                    goto label_403253;
                }
                if (var_c != arg_4)
                {
                    goto label_403253;
                }
            }
            uint32_t dwBytes;
            int32_t* esi_2 = GlobalAlloc(GMEM_ZEROINIT, dwBytes);
            sub_4034af((data_42a234 + 0x1c));
            if (sub_4032b4(0xffffffff, nullptr, esi_2, dwBytes) != dwBytes)
            {
                goto label_403253;
            }
            bool cond:3_1 = (var_2c & 1) == 0;
            data_42a230 = esi_2;
            *data_42a238 = *esi_2;
            if (!(cond:3_1))
            {
                data_42a23c = (data_42a23c + 1);
            }
            void** eax_23 = &esi_2[0x11];
            int32_t i_1 = 8;
            int32_t i;
            do
            {
                eax_23 = (eax_23 - 8);
                *eax_23 = (*eax_23 + esi_2);
                i = i_1;
                i_1 = (i_1 - 1);
            } while (i != 1);
            esi_2[0xf] = SetFilePointer(hFile, 0, nullptr, FILE_CURRENT);
            sub_405fb2(&data_42a240, &esi_2[1], 0x40);
            eax_2 = nullptr;
        }
    }
    return eax_2;
}

uint32_t __stdcall sub_4032b4(int32_t arg1, HANDLE arg2, uint8_t* arg3, uint32_t arg4)
{
    uint32_t esi = arg4;
    uint32_t var_c = esi;
    if (arg3 == 0)
    {
        var_c = 0x8000;
    }
    uint32_t var_8 = 0;
    uint8_t* ebx = arg3;
    if (arg3 == 0)
    {
        ebx = &data_418ec0;
    }
    if (arg1 >= 0)
    {
        sub_4034af((data_42a278 + arg1));
    }
    uint32_t eax_15;
    uint32_t var_a4_7;
    if (sub_403499(&arg4, 4) == 0)
    {
    label_403450:
        var_a4_7 = 0xfffffffd;
    label_403452:
        eax_15 = var_a4_7;
    }
    else
    {
        if ((*arg4[3] & 0x80) != 0)
        {
            uint32_t var_10_1 = GetTickCount();
            sub_406a2f(&data_40ce30);
            uint32_t temp1_1 = (arg4 & 0x7fffffff);
            arg4 = temp1_1;
            int32_t nDenominator = arg4;
            if (temp1_1 <= 0)
            {
                goto label_40348f;
            }
            int32_t eax_3;
            int32_t eax_5;
            uint32_t esi_3;
            do
            {
                uint32_t esi_1 = 0x4000;
                if (arg4 < 0x4000)
                {
                    esi_1 = arg4;
                }
                eax_3 = sub_403499(&data_414ec0, esi_1);
                if (eax_3 == 0)
                {
                    break;
                }
                arg4 = (arg4 - esi_1);
                data_40ce48 = 0x414ec0;
                data_40ce4c = esi_1;
                while (true)
                {
                    data_40ce50 = ebx;
                    data_40ce54 = var_c;
                    eax_5 = sub_406a4f(0x40ce30);
                    if (eax_5 < 0)
                    {
                        var_a4_7 = 0xfffffffc;
                        break;
                    }
                    esi_3 = (data_40ce50 - ebx);
                    uint32_t eax_6 = GetTickCount();
                    if (((data_42a2d4 & 1) != 0 && ((eax_6 - var_10_1) > 0xc8 || ((eax_6 - var_10_1) <= 0xc8 && arg4 == 0))))
                    {
                        void param0;
                        wsprintfW(&param0, u"... %d%%", MulDiv((nDenominator - arg4), 0x64, nDenominator));
                        sub_405569(0, &param0);
                        var_10_1 = eax_6;
                    }
                    if ((esi_3 == 0 && arg4 <= 0))
                    {
                        break;
                    }
                    if (esi_3 != 0)
                    {
                        if (arg3 != 0)
                        {
                            var_8 = (var_8 + esi_3);
                            var_c = (var_c - esi_3);
                            ebx = data_40ce50;
                        }
                        else
                        {
                            if (sub_4060a9(arg2, ebx, esi_3) == 0)
                            {
                                goto label_403435;
                            }
                            var_8 = (var_8 + esi_3);
                        }
                        if (eax_5 == 1)
                        {
                            break;
                        }
                    }
                }
            } while (((eax_5 >= 0 && esi_3 == 0) && arg4 > 0));
            if (eax_3 == 0)
            {
                goto label_403450;
            }
            if (eax_5 < 0)
            {
                goto label_403452;
            }
            goto label_40348f;
        }
        if (arg3 == 0)
        {
            int32_t eax_13;
            uint32_t esi_4;
            for (; arg4 > 0; arg4 = (arg4 - esi_4))
            {
                esi_4 = var_c;
                if (arg4 < esi_4)
                {
                    esi_4 = arg4;
                }
                eax_13 = sub_403499(&data_414ec0, esi_4);
                if (eax_13 == 0)
                {
                    break;
                }
                if (sub_4060a9(arg2, &data_414ec0, esi_4) == 0)
                {
                    break;
                }
                var_8 = (var_8 + esi_4);
            }
            if (arg4 <= 0)
            {
                goto label_40348f;
            }
            if ((arg4 > 0 && eax_13 == 0))
            {
                goto label_403450;
            }
        label_403435:
            var_a4_7 = 0xfffffffe;
            goto label_403452;
        }
        if (arg4 < esi)
        {
            esi = arg4;
        }
        if (sub_403499(arg3, esi) == 0)
        {
            goto label_403450;
        }
        var_8 = esi;
    label_40348f:
        eax_15 = var_8;
    }
    return eax_15;
}

int32_t __stdcall sub_403499(uint8_t* arg1, uint32_t arg2)
{
    return sub_40607a(data_40a018, arg1, arg2);
}

uint32_t __stdcall sub_4034af(int32_t arg1)
{
    return SetFilePointer(data_40a018, arg1, nullptr, FILE_BEGIN);
}

uint32_t sub_4034c6()
{
    sub_40678e(&data_437800);
    int32_t eax = sub_405e4d(&data_437800);
    if (eax != 0)
    {
        sub_405dd6(&data_437800);
        return sub_406026(sub_405ab5(&data_437800), &data_437000, &data_437800);
    }
    return eax;
}

void _start() __noreturn
{
    int16_t edi = 0x20;
    int32_t uExitCode = 0;
    wchar16* var_8 = u"Error writing temporary file. Ma…";
    int32_t var_14 = 0;
    SetErrorMode(SEM_FAILCRITICALERRORS | SEM_NOOPENFILEERRORBOX);
    int16_t var_130 = 0;
    char var_30 = 0;
    int24_t var_2c = 0;
    int32_t lpVersionInformation = 0x11c;
    if (GetVersionExW(&lpVersionInformation) == 0)
    {
        lpVersionInformation = 0x114;
        GetVersionExW(&lpVersionInformation);
        BOOL eax_1;
        eax_1 = var_130;
        eax_1 = (eax_1 - 0x53);
        int16_t temp0_1 = eax_1;
        eax_1 = -(eax_1);
        *var_2c[2] = 4;
        char var_116;
        var_30 = (!((eax_1 - eax_1)) & (var_116 - 0x30));
    }
    int32_t var_140;
    int32_t var_138;
    if (var_140 < 0xa)
    {
        *var_138[2] = 0;
    }
    data_42a2d8 = var_138;
    int16_t eax_6;
    *eax_6[1] = var_140;
    int16_t ecx_4;
    *ecx_4[1] = var_30;
    char var_13c;
    *data_42a2dc = ((((eax_6 | var_13c) << 0x10) | ecx_4) | *var_2c[2]);
    if (data_42a2de != 0x600)
    {
        int32_t eax_12 = sub_4068d4(0);
        if (eax_12 != 0)
        {
            eax_12(0xc00);
        }
    }
    char const* const lpString = "UXTHEME";
    do
    {
        sub_406864(lpString);
        lpString = &lpString[(lstrlenA(lpString) + 1)];
    } while (*lpString != 0);
    sub_4068d4(0xb);
    data_42a224 = sub_4068d4(9);
    int32_t eax_15 = sub_4068d4(7);
    if ((eax_15 != 0 && eax_15(0x1e) != 0))
    {
        data_42a2dc = (data_42a2dc | 0x80);
    }
    InitCommonControls();
    data_42a2e0 = OleInitialize(nullptr);
    void psfi;
    SHGetFileInfoW(0x4216c8, SECURITY_ANONYMOUS, &psfi, 0x2b4, SHGFI_LARGEICON);
    sub_406507(&data_429220, u"NSIS Error");
    sub_406507(&data_435000, GetCommandLineW());
    int16_t* eax_19 = &data_435000;
    data_42a220 = 0x400000;
    if (data_435000 == 0x22)
    {
        edi = 0x22;
        eax_19 = &data_435002;
    }
    PWSTR TokenHandle_2 = CharNextW(sub_405e03(eax_19, edi));
    PWSTR TokenHandle_1 = TokenHandle_2;
    while (true)
    {
        PWSTR eax_21;
        eax_21 = *TokenHandle_2;
        if (eax_21 == 0)
        {
            break;
        }
        if (eax_21 == 0x20)
        {
            do
            {
                TokenHandle_2 = &TokenHandle_2[1];
            } while (*TokenHandle_2 == 0x20);
        }
        int16_t var_c_1 = 0x20;
        if (*TokenHandle_2 == 0x22)
        {
            var_c_1 = 0x22;
            TokenHandle_2 = &TokenHandle_2[1];
        }
        if (*TokenHandle_2 == 0x2f)
        {
            TokenHandle_2 = &TokenHandle_2[1];
            if (*TokenHandle_2 == 0x53)
            {
                eax_21 = TokenHandle_2[1];
                if ((eax_21 == 0x20 || eax_21 == 0))
                {
                    data_42a2c0 = 1;
                }
            }
            int32_t eax_23;
            int32_t edx_1;
            edx_1 = HIGHD(data_40a2bc[3]);
            eax_23 = LOWD(data_40a2bc[3]);
            int32_t eax_26;
            int32_t edx_2;
            edx_2 = HIGHD(data_40a2bc[2]);
            eax_26 = LOWD(data_40a2bc[2]);
            int32_t eax_30;
            int32_t edx_4;
            edx_4 = HIGHD(((data_40a2bc[1] << 0x10) | data_40a2bc[0]));
            eax_30 = LOWD(((data_40a2bc[1] << 0x10) | data_40a2bc[0]));
            if ((*TokenHandle_2 == (0 | eax_30) && *(TokenHandle_2 + 4) == (((eax_23 << 0x10) | eax_26) | edx_4)))
            {
                int32_t eax_32;
                eax_32 = TokenHandle_2[4];
                if ((eax_32 == 0x20 || eax_32 == 0))
                {
                    var_14 = (var_14 | 4);
                }
            }
            int32_t eax_34;
            int32_t edx_5;
            edx_5 = HIGHD(data_40a2b0[3]);
            eax_34 = LOWD(data_40a2b0[3]);
            int32_t eax_37;
            int32_t edx_6;
            edx_6 = HIGHD(data_40a2b0[2]);
            eax_37 = LOWD(data_40a2b0[2]);
            int32_t eax_41;
            int32_t edx_8;
            edx_8 = HIGHD(((data_40a2b0[1] << 0x10) | data_40a2b0[0]));
            eax_41 = LOWD(((data_40a2b0[1] << 0x10) | data_40a2b0[0]));
            if ((*(TokenHandle_2 - 4) == (0 | eax_41) && *TokenHandle_2 == (((eax_34 << 0x10) | eax_37) | edx_8)))
            {
                TokenHandle_2[-2] = 0;
                sub_406507(&data_435800, &TokenHandle_2[2]);
                break;
            }
        }
        TokenHandle_2 = sub_405e03(TokenHandle_2, var_c_1);
        if (*TokenHandle_2 == 0x22)
        {
            TokenHandle_2 = &TokenHandle_2[1];
        }
    }
    GetTempPathW(0x400, &data_437800);
    uint32_t eax_44 = sub_4034c6();
    uint32_t eax_45;
    uint32_t eax_46;
    if (eax_44 == 0)
    {
        GetWindowsDirectoryW(&data_437800, 0x3fb);
        lstrcatW(&data_437800, u"\Temp");
        eax_45 = sub_4034c6();
        if (eax_45 == 0)
        {
            GetTempPathW(0x3fc, &data_437800);
            lstrcatW(&data_437800, &data_40a29c);
            SetEnvironmentVariableW(u"TEMP", &data_437800);
            SetEnvironmentVariableW(&data_40a288, &data_437800);
            eax_46 = sub_4034c6();
        }
    }
    if (((eax_44 != 0 || (eax_44 == 0 && eax_45 != 0)) || ((eax_44 == 0 && eax_45 == 0) && eax_46 != 0)))
    {
        DeleteFileW(&data_437000);
        int32_t var_408_9 = var_14;
        wchar16* eax_47 = sub_40307d();
        var_8 = eax_47;
        if (eax_47 == 0)
        {
            int32_t eax_60;
            int16_t* edi_7;
            if (data_42a23c != 0)
            {
                edi_7 = sub_405e03(&data_435000, 0);
                if (edi_7 >= 0x435000)
                {
                    int32_t eax_50;
                    int32_t edx_9;
                    edx_9 = HIGHD(data_40a27c[3]);
                    eax_50 = LOWD(data_40a27c[3]);
                    int32_t eax_53;
                    int32_t edx_10;
                    edx_10 = HIGHD(data_40a27c[2]);
                    eax_53 = LOWD(data_40a27c[2]);
                    int32_t eax_57;
                    int32_t edx_11;
                    edx_11 = HIGHD(((data_40a27c[1] << 0x10) | data_40a27c[0]));
                    eax_57 = LOWD(((data_40a27c[1] << 0x10) | data_40a27c[0]));
                    while (!((*edi_7 == (0 | eax_57) && *(edi_7 + 4) == (((eax_50 << 0x10) | eax_53) | edx_11))))
                    {
                        edi_7 = (edi_7 - 2);
                        if (edi_7 < 0x435000)
                        {
                            break;
                        }
                    }
                }
                var_8 = u"Error launching installer";
                if (edi_7 >= 0x435000)
                {
                    *edi_7 = 0;
                    eax_60 = sub_405ede(&edi_7[4]);
                    if (eax_60 != 0)
                    {
                        sub_406507(&data_435800, &edi_7[4]);
                        sub_406507(&data_436000, &edi_7[4]);
                        var_8 = nullptr;
                    }
                }
                else
                {
                    int32_t eax_62 = sub_405ad2();
                    lstrcatW(&data_437800, u"~nsu");
                    if (eax_62 != 0)
                    {
                        lstrcatW(&data_437800, &data_40a26c);
                    }
                    lstrcatW(&data_437800, u".tmp");
                    if (lstrcmpiW(&data_437800, &data_436800) != 0)
                    {
                        if (eax_62 == 0)
                        {
                            sub_405ab5(&data_437800);
                        }
                        else
                        {
                            sub_405a38(&data_437800);
                        }
                        SetCurrentDirectoryW(&data_437800);
                        if (data_435800 == 0)
                        {
                            sub_406507(&data_435800, &data_436800);
                        }
                        sub_406507(&data_42b000, TokenHandle_1);
                        int32_t i_1 = 0x1a;
                        data_42b800 = ((data_40a25a << 0x10) | data_40a258);
                        int32_t i;
                        do
                        {
                            sub_406544(&data_420ec8, *(data_42a230 + 0x120));
                            DeleteFileW(&data_420ec8);
                            if ((var_8 != 0 && CopyFileW(&data_438800, &data_420ec8, 1) != 0))
                            {
                                sub_4062c7(&data_420ec8, 0);
                                sub_406544(&data_420ec8, *(data_42a230 + 0x124));
                                BOOL hObject = sub_405aea(&data_420ec8);
                                if (hObject != 0)
                                {
                                    CloseHandle(hObject);
                                    var_8 = nullptr;
                                }
                            }
                            *data_42b800 = (*data_42b800 + 1);
                            i = i_1;
                            i_1 = (i_1 - 1);
                        } while (i != 1);
                        sub_4062c7(&data_437800, 0);
                    }
                }
            }
            if ((((data_42a23c != 0 && edi_7 >= 0x435000) && eax_60 != 0) || data_42a23c == 0))
            {
                data_42a2cc = 0xffffffff;
                uExitCode = sub_403bb6();
            }
        }
    }
    sub_403adc();
    OleUninitialize();
    if (var_8 != 0)
    {
        sub_405b67(var_8, 0x200010);
        ExitProcess(2);
        /* no return */
    }
    if (data_42a2b4 != 0)
    {
        if (OpenProcessToken(GetCurrentProcess(), 0x28, &TokenHandle_1) != 0)
        {
            void lpLuid;
            LookupPrivilegeValueW(nullptr, u"SeShutdownPrivilege", &lpLuid);
            PWSTR TokenHandle = TokenHandle_1;
            int32_t NewState = 1;
            int32_t var_1c_1 = 2;
            AdjustTokenPrivileges(TokenHandle, 0, &NewState, 0, nullptr, nullptr);
        }
        int32_t eax_72 = sub_4068d4(4);
        int32_t eax_73;
        if (eax_72 != 0)
        {
            eax_73 = eax_72(0, 0, 0, 0x25, 0x80040002);
        }
        BOOL eax_74;
        if ((eax_72 == 0 || (eax_72 != 0 && eax_73 != 0)))
        {
            eax_74 = ExitWindowsEx(EWX_REBOOT, 0x80040002);
        }
        if (((eax_72 != 0 && eax_73 == 0) || ((eax_72 == 0 || (eax_72 != 0 && eax_73 != 0)) && eax_74 == 0)))
        {
            sub_40140b(9);
        }
    }
    int32_t uExitCode_1 = data_42a2cc;
    if (uExitCode_1 != 0xffffffff)
    {
        uExitCode = uExitCode_1;
    }
    ExitProcess(uExitCode);
    /* no return */
}

HANDLE sub_403adc()
{
    HANDLE hObject = data_40a018;
    if (hObject != 0xffffffff)
    {
        CloseHandle(hObject);
        data_40a018 = 0xffffffff;
    }
    sub_403b21();
    return sub_405c13(0x438000, 7);
}

void __stdcall sub_403b06(int32_t arg1)
{
    for (int32_t* i = data_4216cc; i != 0; i = *i)
    {
        i[1](arg1);
    }
}

HGLOBAL sub_403b21()
{
    int32_t* i = data_4216cc;
    HGLOBAL eax = sub_403b06(0);
    if (i != 0)
    {
        do
        {
            HGLOBAL hMem = i;
            i = *i;
            FreeLibrary(*(hMem + 8));
            eax = GlobalFree(hMem);
        } while (i != 0);
    }
    data_4216cc = 0;
    return eax;
}

void* __stdcall sub_403b56(int32_t arg1)
{
    void** eax = data_4216cc;
    void* eax_1;
    while (true)
    {
        if (eax == 0)
        {
            eax_1 = (eax + 1);
            break;
        }
        if (eax[2] == arg1)
        {
            eax_1 = nullptr;
            break;
        }
        eax = *eax;
    }
    return eax_1;
}

void* __stdcall sub_403b74(int32_t arg1, int32_t arg2)
{
    void* eax = sub_403b56(arg1);
    void* eax_1;
    if (eax == 0)
    {
        eax_1 = (eax + 1);
    }
    else
    {
        HGLOBAL eax_2 = GlobalAlloc(GMEM_ZEROINIT, 0xc);
        if (eax_2 == 0)
        {
            eax_1 = 0xffffffff;
        }
        else
        {
            *(eax_2 + 8) = arg1;
            *(eax_2 + 4) = arg2;
            *eax_2 = data_4216cc;
            data_4216cc = eax_2;
            eax_1 = nullptr;
        }
    }
    return eax_1;
}

int32_t sub_403bb6()
{
    void* esi = data_42a230;
    int32_t eax;
    int32_t ecx;
    eax = sub_4068d4(2);
    if (eax != 0)
    {
        sub_40644e(&data_437000, eax());
    }
    else
    {
        int32_t var_24_1 = 0;
        int32_t var_28_1 = 0x423708;
        data_437000 = 0x30;
        data_437002 = 0x78;
        data_437004 = 0;
        int32_t ecx_1 = sub_4063d5(ecx, 0x80000001, u"Control Panel\Desktop\ResourceLo…", nullptr);
        if (data_423708 == 0)
        {
            int32_t var_24_2 = 0;
            int32_t var_28_2 = 0x423708;
            sub_4063d5(ecx_1, 0x80000003, u".DEFAULT\Control Panel\Internati…", &*u"Control Panel\Desktop\ResourceLo…"[0x1e]);
        }
        lstrcatW(&data_437000, &data_423708);
    }
    sub_403e8c();
    data_42a2a0 = (*data_42a238 & 0x20);
    data_42a2bc = 0x10000;
    if (sub_405ede(&data_435800) == 0)
    {
        int32_t ecx_2 = *(esi + 0x48);
        if (ecx_2 != 0)
        {
            int32_t eax_6 = data_42a258;
            PWSTR ebx_1 = &data_4281c0;
            int32_t var_24_3 = 0;
            int32_t var_28_3 = 0x4281c0;
            sub_4063d5(ecx_2, *(esi + 0x44), (eax_6 + (ecx_2 << 1)), (eax_6 + (*(esi + 0x4c) << 1)));
            int16_t eax_8 = data_4281c0;
            if (eax_8 != 0)
            {
                if (eax_8 == 0x22)
                {
                    ebx_1 = &data_4281c2;
                    *sub_405e03(&data_4281c2, 0x22) = 0;
                }
                PWSTR lpString1 = &ebx_1[(lstrlenW(ebx_1) - 4)];
                if ((lpString1 > ebx_1 && lstrcmpiW(lpString1, u".exe") == 0))
                {
                    uint32_t eax_12 = GetFileAttributesW(ebx_1);
                    if ((eax_12 == 0xffffffff || (eax_12 != 0xffffffff && (eax_12 & 0x10) == 0)))
                    {
                        sub_405e22(ebx_1);
                    }
                }
                sub_406507(&data_435800, sub_405dd6(ebx_1));
            }
        }
    }
    if (sub_405ede(&data_435800) == 0)
    {
        sub_406544(&data_435800, *(esi + 0x118));
    }
    HANDLE eax_15 = LoadImageW(data_42a220, 0x67, IMAGE_ICON, 0, 0, LR_DEFAULTSIZE | LR_SHARED);
    data_429208 = eax_15;
    if (*(esi + 0x50) != 0xffffffff)
    {
        int32_t ecx_3 = data_42a220;
        data_4291c4 = sub_401000;
        data_4291d0 = ecx_3;
        data_4291d4 = eax_15;
        data_4291e4 = &data_40a380;
        if (RegisterClassW(&data_4291c0) == 0)
        {
            goto label_403e82;
        }
        int32_t var_10;
        SystemParametersInfoW(SPI_GETWORKAREA, 0, &var_10, 0);
        int32_t Y;
        int32_t var_8;
        int32_t var_4;
        data_4236e8 = CreateWindowExW(WS_EX_TOOLWINDOW, &data_40a380, nullptr, WS_POPUP, var_10, Y, (var_8 - var_10), (var_4 - Y), nullptr, nullptr, data_42a220, nullptr);
    }
    int32_t eax_22 = sub_40140b(0);
    int32_t eax_23;
    int32_t eax_30;
    if (eax_22 == 0)
    {
        sub_403e8c();
        if (data_42a2c0 != 0)
        {
            eax_30 = sub_40563c(nullptr);
            if (eax_30 == 0)
            {
                sub_40140b(1);
            label_403e82:
                eax_23 = 0;
            }
            else if (data_4291ec == 0)
            {
                sub_40140b(2);
            }
        }
        else
        {
            ShowWindow(data_4236e8, SW_SHOW);
            if (sub_406864("RichEd20") == 0)
            {
                sub_406864("RichEd32");
            }
            if (GetClassInfoW(nullptr, u"RichEdit20W", &data_4291c0) == 0)
            {
                GetClassInfoW(nullptr, u"RichEdit", &data_4291c0);
                data_4291e4 = u"RichEdit20W";
                RegisterClassW(&data_4291c0);
            }
            int32_t eax_29 = DialogBoxParamW(data_42a220, (data_429200 + 0x69), nullptr, sub_403f64, 0);
            sub_40140b(5);
            sub_403b06(1);
            eax_23 = eax_29;
        }
    }
    if ((eax_22 != 0 || ((eax_22 == 0 && data_42a2c0 != 0) && eax_30 != 0)))
    {
        eax_23 = 2;
    }
    return eax_23;
}

int32_t sub_403e8c()
{
    int32_t ebp;
    int32_t var_8 = ebp;
    int32_t ebx = 0xffff;
    int16_t eax = sub_406467(&data_437000);
    while (true)
    {
        int32_t i = data_42a264;
        if (i != 0)
        {
            int32_t ecx_2 = *(data_42a230 + 0x64);
            int16_t* ecx_4 = ((ecx_2 * i) + data_42a260);
            do
            {
                ecx_4 = (ecx_4 + -(ecx_2));
                i = (i - 1);
                ebp = *ecx_4;
                ebp = (ebp ^ eax);
                if ((ebp & ebx) == 0)
                {
                    data_429200 = *(ecx_4 + 2);
                    data_42a2c8 = *(ecx_4 + 6);
                    if (ecx_4 != 0xfffffff6)
                    {
                        data_4291fc = &ecx_4[5];
                        sub_40644e(&data_437000, *ecx_4);
                        sub_403f45();
                        int32_t j_2 = data_42a24c;
                        int32_t* esi_1 = data_42a248;
                        if (j_2 != 0)
                        {
                            int32_t j_1 = j_2;
                            int32_t j;
                            do
                            {
                                j_2 = *esi_1;
                                if (j_2 != 0)
                                {
                                    j_2 = sub_406544(&esi_1[6], j_2);
                                }
                                esi_1 = &esi_1[0x206];
                                j = j_1;
                                j_1 = (j_1 - 1);
                            } while (j != 1);
                        }
                        return j_2;
                    }
                    break;
                }
            } while (i != 0);
        }
        if (ebx != 0xffff)
        {
            ebx = 0;
        }
        else
        {
            ebx = 0x3ff;
        }
    }
}

int32_t sub_403f45()
{
    sub_406544(&data_429220, 0xfffffffe);
    SetWindowTextW(data_4236e8, &data_429220);
    return 0x429220;
}

int32_t __stdcall sub_403f64(HWND arg1, int32_t arg2, WPARAM arg3, HWND arg4)
{
    int32_t eax_8;
    HWND edi;
    if ((arg2 == 0x110 || arg2 == 0x408))
    {
        WPARAM eax_11 = arg3;
        edi = arg1;
        data_4236f0 = eax_11;
        if (arg2 == 0x110)
        {
            data_42a228 = edi;
            data_423704 = GetDlgItem(edi, 1);
            data_4216d0 = GetDlgItem(edi, 2);
            sub_404463(edi, 0x1c, 0xffffffff);
            SetClassLongW(edi, 0xfffffff2, data_429208);
            data_4291ec = sub_40140b(4);
            eax_11 = 1;
            data_4236f0 = 1;
        }
        int32_t ecx_1 = data_40a368;
        int16_t* dwInitParam = ((ecx_1 << 6) + data_42a240);
        if (ecx_1 >= 0)
        {
            if ((eax_11 == 1 && sub_401389(*(dwInitParam + 0x10), nullptr) != 0))
            {
                SendMessageW(data_4291f8, 0x40f, 0, 1);
                eax_8 = data_4291ec == 0;
            label_404439:
                return eax_8;
            }
            if (*dwInitParam == 0)
            {
            label_404430:
                eax_8 = 0;
                goto label_404439;
            }
        }
        sub_4044af(0x40b);
        while (true)
        {
            int32_t eax_16 = data_4236f0;
            data_40a368 = (data_40a368 + eax_16);
            dwInitParam = &dwInitParam[(eax_16 * 0x20)];
            if (data_40a368 == data_42a244)
            {
                sub_40140b(1);
            }
            if ((data_4291ec == 0 && data_40a368 < data_42a244))
            {
                int32_t ebx_2 = *(dwInitParam + 0x14);
                sub_406544(&data_43a000, *(dwInitParam + 0x24));
                sub_404463(edi, 0xfffffc19, *(dwInitParam + 0x20));
                sub_404463(edi, 0xfffffc1b, *(dwInitParam + 0x1c));
                sub_404463(edi, 0xfffffc1a, *(dwInitParam + 0x28));
                HWND hWnd_1 = GetDlgItem(edi, 3);
                if (data_42a2ac != 0)
                {
                    ebx_2 = (ebx_2 & 0xfefd);
                    ebx_2 = (ebx_2 | 4);
                }
                ShowWindow(hWnd_1, (ebx_2 & 8));
                EnableWindow(hWnd_1, (ebx_2 & 0x100));
                sub_404485((ebx_2 & 2));
                BOOL bEnable = (ebx_2 & 4);
                EnableWindow(data_4216d0, bEnable);
                enum MENU_ITEM_FLAGS uEnable;
                if (bEnable == 0)
                {
                    uEnable = MF_GRAYED;
                }
                else
                {
                    uEnable = MF_BYCOMMAND;
                }
                EnableMenuItem(GetSystemMenu(edi, 0), 0xf060, uEnable);
                SendMessageW(hWnd_1, 0xf4, 0, 1);
                WPARAM var_24_16;
                if (data_42a2ac == 0)
                {
                    var_24_16 = data_423704;
                }
                else
                {
                    SendMessageW(edi, 0x401, 2, 0);
                    var_24_16 = data_4216d0;
                }
                sub_404498(var_24_16);
                sub_403f45();
                sub_406507(&data_423708, &data_429220);
                sub_406544(&&data_423708[lstrlenW(&data_423708)], *(dwInitParam + 0x18));
                SetWindowTextW(edi, &data_423708);
                if (sub_401389(*(dwInitParam + 8), nullptr) != 0)
                {
                    continue;
                }
                else if (*dwInitParam == 0)
                {
                    continue;
                }
                else
                {
                    if (*(dwInitParam + 4) != 5)
                    {
                        DestroyWindow(data_4291f8);
                        data_4226e0 = dwInitParam;
                        if (*dwInitParam <= 0)
                        {
                            break;
                        }
                        int32_t eax_28;
                        eax_28 = *dwInitParam;
                        eax_28 = (eax_28 + *data_429200);
                        HWND eax_30 = CreateDialogParamW(data_42a220, eax_28, edi, *((*(dwInitParam + 4) << 2) + &data_40a36c), dwInitParam);
                        data_4291f8 = eax_30;
                        if (eax_30 == 0)
                        {
                            break;
                        }
                        sub_404463(eax_30, 6, *(dwInitParam + 0x2c));
                        int32_t var_10;
                        GetWindowRect(GetDlgItem(edi, 0x3fa), &var_10);
                        ScreenToClient(edi, &var_10);
                        int32_t Y;
                        SetWindowPos(data_4291f8, nullptr, var_10, Y, 0, 0, 0x15);
                        sub_401389(*(dwInitParam + 0xc), nullptr);
                        if (data_4291ec != 0)
                        {
                            break;
                        }
                        ShowWindow(data_4291f8, SW_SHOWNA);
                        sub_4044af(0x405);
                        break;
                    }
                    if (data_42a2ac != 0)
                    {
                        break;
                    }
                    if (data_42a2a0 == 0)
                    {
                        break;
                    }
                    continue;
                }
            }
            DestroyWindow(data_4291f8);
            int32_t nResult = data_421ed8;
            data_42a228 = 0;
            EndDialog(edi, nResult);
            break;
        }
        if (!((data_4291ec != 0 || (data_4291ec == 0 && data_40a368 >= data_42a244))))
        {
            goto label_404430;
        }
    }
    if ((arg2 != 0x110 && arg2 != 0x408))
    {
        edi = arg1;
        if (arg2 == 0x47)
        {
            SetWindowPos(data_4236e8, edi, 0, 0, 0, 0, 0x13);
        }
        if (arg2 == 5)
        {
            int32_t eax_3 = -((arg3 - 1));
            ShowWindow(data_4236e8, ((eax_3 - eax_3) & 5));
            if (arg3 != 2)
            {
                goto label_4040d3;
            }
            if ((GetWindowLongW(edi, 0xfffffff0) & 0x21010000) != 0x1000000)
            {
                goto label_4040d3;
            }
            ShowWindow(edi, SW_SHOWNOACTIVATE);
        }
        if (arg2 != 0x40d)
        {
            if (arg2 == 0x11)
            {
                SetWindowLongW(edi, 0, 0);
                eax_8 = 1;
            }
            else
            {
                if (arg2 != 0x111)
                {
                    goto label_4040d3;
                }
                uint32_t nIDDlgItem = arg3;
                HWND hWnd = GetDlgItem(edi, nIDDlgItem);
                if (hWnd != 0)
                {
                    SendMessageW(hWnd, 0xf3, 0, 0);
                    if (IsWindowEnabled(hWnd) == 0)
                    {
                        goto label_404430;
                    }
                }
                uint32_t nIDDlgItem_1;
                if (nIDDlgItem != 1)
                {
                    if (nIDDlgItem != 3)
                    {
                        if (nIDDlgItem != 2)
                        {
                        label_4040c4:
                            SendMessageW(data_4291f8, 0x111, arg3, arg4);
                            goto label_4040d3;
                        }
                        if (data_42a2ac == 0)
                        {
                            if (sub_40140b(3) != 0)
                            {
                                goto label_4040d3;
                            }
                            data_421ed8 = 1;
                            goto label_404094;
                        }
                        sub_40140b(2);
                        data_421ed8 = 2;
                    label_404094:
                        nIDDlgItem_1 = 0x78;
                        goto label_404096;
                    }
                    if (data_40a368 <= 0)
                    {
                        goto label_4040c4;
                    }
                    nIDDlgItem_1 = 0xffffffff;
                    goto label_404096;
                }
                nIDDlgItem_1 = nIDDlgItem;
            label_404096:
                sub_40443c(nIDDlgItem_1);
            label_4040d3:
                eax_8 = sub_4044ca(arg2, arg3, arg4);
            }
            goto label_404439;
        }
        DestroyWindow(data_4291f8);
        data_4291f8 = arg3;
    }
    if (data_425708 != 0)
    {
        goto label_404430;
    }
    if (data_4291f8 != 0)
    {
        ShowWindow(edi, SW_SHOWDEFAULT);
        data_425708 = 1;
    }
    goto label_404430;
}

LRESULT __stdcall sub_40443c(WPARAM arg1)
{
    if (arg1 == 0x78)
    {
        data_4291ec = (data_4291ec + 1);
    }
    return SendMessageW(data_42a228, 0x408, arg1, 0);
}

BOOL __stdcall sub_404463(HWND arg1, int32_t arg2, int32_t arg3)
{
    return SetDlgItemTextW(arg1, (arg2 + 0x3e8), sub_406544(nullptr, arg3));
}

BOOL __stdcall sub_404485(BOOL arg1)
{
    return EnableWindow(data_423704, arg1);
}

LRESULT __stdcall sub_404498(WPARAM arg1)
{
    return SendMessageW(data_42a228, 0x28, arg1, 1);
}

LRESULT __stdcall sub_4044af(uint32_t arg1)
{
    LRESULT hWnd = data_4291f8;
    if (hWnd != 0)
    {
        hWnd = SendMessageW(hWnd, arg1, 0, 0);
    }
    return hWnd;
}

int32_t __stdcall sub_4044ca(int32_t arg1, HDC arg2, HWND arg3)
{
    int32_t eax_7;
    if ((arg1 - 0x133) > 5)
    {
    label_404592:
        eax_7 = 0;
    }
    else
    {
        int32_t eax_2 = GetWindowLongW(arg3, 0xffffffeb);
        if (eax_2 == 0)
        {
            goto label_404592;
        }
        if (*(eax_2 + 8) > 1)
        {
            goto label_404592;
        }
        if (*(eax_2 + 0x10) > 2)
        {
            goto label_404592;
        }
        int32_t ecx_1 = *(eax_2 + 0x14);
        if ((ecx_1 & 0xffffffe0) != 0)
        {
            goto label_404592;
        }
        uint32_t eax_3 = *eax_2;
        if ((ecx_1 & 2) != 0)
        {
            eax_3 = GetSysColor(eax_3);
        }
        if ((*(eax_2 + 0x14) & 1) != 0)
        {
            SetTextColor(arg2, eax_3);
        }
        SetBkMode(arg2, *(eax_2 + 0x10));
        COLORREF eax_4 = *(eax_2 + 4);
        COLORREF var_c_1 = eax_4;
        if ((*(eax_2 + 0x14) & 8) != 0)
        {
            eax_4 = GetSysColor(eax_4);
            COLORREF var_c_2 = eax_4;
        }
        if ((*(eax_2 + 0x14) & 4) != 0)
        {
            SetBkColor(arg2, eax_4);
        }
        if ((*(eax_2 + 0x14) & 0x10) != 0)
        {
            int32_t plbrush = *(eax_2 + 8);
            HGDIOBJ ho = *(eax_2 + 0xc);
            if (ho != 0)
            {
                DeleteObject(ho);
            }
            *(eax_2 + 0xc) = CreateBrushIndirect(&plbrush);
        }
        eax_7 = *(eax_2 + 0xc);
    }
    return eax_7;
}

int32_t __stdcall sub_404599(int32_t arg1, wchar16* arg2, int32_t arg3, int32_t* arg4)
{
    lstrcpynW(arg2, (data_4216d4 + arg1), (arg3 >> 1));
    int32_t eax_4 = (lstrlenW(arg2) * 2);
    *arg4 = eax_4;
    data_4216d4 = (data_4216d4 + eax_4);
    return 0;
}

int32_t __stdcall sub_4045d3(int32_t arg1, PSTR arg2, int32_t arg3, int32_t* arg4)
{
    int32_t cchWideChar = lstrlenW((arg1 + (data_4216d4 << 1)));
    uint32_t cchWideChar_1 = (arg3 >> 1);
    if (cchWideChar >= cchWideChar_1)
    {
        cchWideChar = cchWideChar_1;
    }
    int32_t eax_4 = WideCharToMultiByte(0, 0, (arg1 + (data_4216d4 << 1)), cchWideChar, arg2, arg3, nullptr, nullptr);
    *arg4 = eax_4;
    data_4216d4 = (data_4216d4 + eax_4);
    return 0;
}

int32_t __stdcall sub_404622(HWND arg1, uint32_t arg2, HDC arg3, void* arg4)
{
    int32_t eax_13;
    void* lParam;
    if (arg2 == 0x110)
    {
        int32_t eax_1 = *(arg4 + 0x30);
        if (eax_1 < 0)
        {
            eax_1 = *(data_4291fc - ((eax_1 << 2) + 4));
        }
        int16_t* eax_3 = (data_42a258 + (eax_1 << 1));
        uint32_t wParam = *eax_3;
        lParam = &eax_3[1];
        int32_t var_c_1 = 0;
        int32_t (__stdcall* var_8_1)(int32_t arg1, PSTR arg2, int32_t arg3, int32_t* arg4) = sub_4045d3;
        if (wParam != 2)
        {
            int32_t (__stdcall* var_8_2)(int32_t arg1, wchar16* arg2, int32_t arg3, int32_t* arg4) = sub_404599;
        }
        int32_t eax_6 = *(arg4 + 0x14);
        BOOL esi_5 = (((!(eax_6) >> 5) & 1) | (eax_6 & 1));
        sub_404463(arg1, 0x22, *(arg4 + 0x34));
        sub_404463(arg1, 0x23, *(arg4 + 0x38));
        int32_t eax_8;
        eax_8 = esi_5 == 0;
        CheckDlgButton(arg1, (eax_8 + 0x40a), BST_CHECKED | BST_UNCHECKED);
        sub_404485(esi_5);
        HWND hWnd = GetDlgItem(arg1, 0x3e8);
        sub_404498(hWnd);
        SendMessageW(hWnd, 0x45b, 1, 0);
        uint32_t lParam_1 = *(data_42a230 + 0x68);
        if (lParam_1 < 0)
        {
            lParam_1 = GetSysColor(-(lParam_1));
        }
        SendMessageW(hWnd, 0x443, 0, lParam_1);
        SendMessageW(hWnd, 0x445, 0, 0x4010000);
        SendMessageW(hWnd, 0x435, 0, lstrlenW(&eax_3[1]));
        data_4216d4 = 0;
        SendMessageW(hWnd, 0x449, wParam, &lParam);
        data_4216d4 = 0;
        eax_13 = 0;
    }
    else
    {
        void* edi_4;
        if (arg2 == 0x111)
        {
            if ((arg3 >> 0x10) != 0)
            {
            label_404897:
                edi_4 = arg4;
            label_4048a1:
                eax_13 = sub_4044ca(arg2, arg3, edi_4);
            }
            else
            {
                if (data_4216d4 != 0)
                {
                    goto label_404897;
                }
                char* edi_3 = (data_4226e0 + 0x14);
                if ((*edi_3 & 0x20) == 0)
                {
                    goto label_404897;
                }
                BOOL eax_19 = (SendMessageW(GetDlgItem(arg1, 0x40a), 0xf0, 0, 0) & 1);
                *edi_3 = ((*edi_3 & 0xfffffffe) | eax_19);
                sub_404485(eax_19);
                sub_4048ad();
            }
        }
        if ((arg2 != 0x111 || (arg2 == 0x111 && (arg3 >> 0x10) == 0)))
        {
            if (arg2 != 0x4e)
            {
                if (arg2 == 0x40b)
                {
                    data_4216d4 = (data_4216d4 + 1);
                }
                goto label_404897;
            }
            HWND hWnd_1 = GetDlgItem(arg1, 0x3e8);
            edi_4 = arg4;
            if ((*(edi_4 + 8) == 0x70b && *(edi_4 + 0xc) == 0x201))
            {
                int32_t ecx_7 = *(edi_4 + 0x1c);
                void* lParam_2 = *(edi_4 + 0x18);
                int32_t var_c_2 = ecx_7;
                lParam = lParam_2;
                int32_t var_8_3 = 0x4281c0;
                if ((ecx_7 - lParam_2) < 0x800)
                {
                    SendMessageW(hWnd_1, 0x44b, 0, &lParam);
                    SetCursor(LoadCursorW(nullptr, 0x7f02));
                    int32_t var_20_13 = 1;
                    sub_4048d1(arg1, var_8_3);
                    SetCursor(LoadCursorW(nullptr, 0x7f00));
                    edi_4 = arg4;
                }
            }
            if (*(edi_4 + 8) != 0x700)
            {
                goto label_4048a1;
            }
            if (*(edi_4 + 0xc) != 0x100)
            {
                goto label_4048a1;
            }
            if (*(edi_4 + 0x10) == 0xd)
            {
                SendMessageW(data_42a228, 0x111, 1, 0);
            }
            if (*(edi_4 + 0x10) == 0x1b)
            {
                SendMessageW(data_42a228, 0x10, 0, 0);
            }
            eax_13 = 1;
        }
    }
    return eax_13;
}

LRESULT sub_4048ad()
{
    HWND hWnd = data_4216d0;
    if (data_42a2ac == 0)
    {
        hWnd = data_423704;
    }
    return SendMessageW(hWnd, 0xf4, 1, 1);
}

BOOL __stdcall sub_4048d1(int32_t arg1, int32_t arg2)
{
    int32_t var_2c = 0;
    int32_t var_28 = 0;
    int32_t var_38 = arg1;
    int32_t var_3c = 0x500;
    int32_t var_30 = arg2;
    int32_t var_24 = 1;
    void* var_34 = u"open";
    void var_40;
    return sub_405b2d(&var_40);
}

int32_t __stdcall sub_40490d(HWND arg1, int32_t arg2, HDC arg3, HWND arg4)
{
    if (arg2 == 0x110)
    {
        sub_404463(arg1, 0x1d, *(arg4 + 0x30));
        SetDlgItemTextW(arg1, 0x3e8, ((*(arg4 + 0x3c) << 0xb) + 0x42b000));
    }
    return sub_4044ca(arg2, arg3, arg4);
}

int32_t __stdcall sub_404954(HWND arg1, int32_t arg2, int16_t arg3, HWND arg4)
{
    void* eax = data_4226e0;
    int32_t eax_1 = *(eax + 0x38);
    int16_t* ebx_2 = ((*(eax + 0x3c) << 0xb) + 0x42b000);
    if (arg2 == 0x40b)
    {
        sub_405b4b(0x3fb, ebx_2);
        sub_40678e(ebx_2);
    }
    int32_t eax_6;
    if (arg2 == 0x110)
    {
        HWND hWnd = GetDlgItem(arg1, 0x3fb);
        if ((sub_405e4d(ebx_2) != 0 && sub_405e81(ebx_2) == 0))
        {
            sub_405dd6(ebx_2);
        }
        data_4291f8 = arg1;
        SetWindowTextW(hWnd, ebx_2);
        sub_404463(arg1, 1, *(arg4 + 0x34));
        sub_404463(arg1, 0x14, *(arg4 + 0x30));
        sub_404498(hWnd);
        eax_6 = sub_4068d4(8);
        if (eax_6 != 0)
        {
            eax_6(hWnd, 1);
        }
    }
    if (((arg2 == 0x110 && eax_6 != 0) || arg2 != 0x110))
    {
        uint32_t eax_7;
        if (arg2 == 0x111)
        {
            eax_7 = arg3;
            if ((eax_7 == 0x3fb && (arg3 >> 0x10) == 0x300))
            {
                arg2 = 0x40f;
            }
            if ((((eax_7 == 0x3fb && (arg3 >> 0x10) == 0x300) || eax_7 != 0x3fb) && eax_7 == 0x3e9))
            {
                void s;
                __builtin_memset(&s, 0, 0x1c);
                HWND lpbi = arg1;
                int32_t var_48_1 = 0x423708;
                int32_t (__stdcall* var_3c_1)(HWND arg1, int32_t arg2, struct ITEMIDLIST* arg3, wchar16* arg4) = sub_404caa;
                int16_t* var_38_1 = ebx_2;
                int32_t var_44_1 = sub_406544(&data_421ee0, eax_1);
                int32_t var_40_1 = 0x41;
                struct ITEMIDLIST* pv = SHBrowseForFolderW(&lpbi);
                if (pv == 0)
                {
                    arg2 = 0x40f;
                }
                else
                {
                    CoTaskMemFree(pv);
                    sub_405dd6(ebx_2);
                    int32_t eax_10 = *(data_42a230 + 0x11c);
                    if ((eax_10 != 0 && ebx_2 == 0x435800))
                    {
                        sub_406544(nullptr, eax_10);
                        if (lstrcmpiW(&data_4281c0, &data_423708) != 0)
                        {
                            lstrcatW(ebx_2, &data_4281c0);
                        }
                    }
                    data_4236f8 = (data_4236f8 + 1);
                    SetDlgItemTextW(arg1, 0x3fb, ebx_2);
                }
            }
        }
        if (((arg2 != 0x111 || ((arg2 == 0x111 && ((eax_7 == 0x3fb && (arg3 >> 0x10) == 0x300) || eax_7 != 0x3fb)) && eax_7 != 0x3e9)) || ((arg2 == 0x111 && ((eax_7 == 0x3fb && (arg3 >> 0x10) == 0x300) || eax_7 != 0x3fb)) && eax_7 == 0x3e9)))
        {
            if (arg2 == 0x40f)
            {
            label_404afd:
                int32_t var_8_1 = 0;
                int32_t var_c_1 = 0;
                sub_405b4b(0x3fb, ebx_2);
                if (sub_405ede(ebx_2) == 0)
                {
                    var_8_1 = 1;
                }
                sub_406507(&data_4216d8, ebx_2);
                int32_t eax_13 = sub_4068d4(1);
                int32_t var_10 = eax_13;
                int32_t var_30;
                uint32_t var_2c;
                int32_t eax_14;
                if (eax_13 != 0)
                {
                    int16_t* i = nullptr;
                    do
                    {
                        void var_28;
                        void var_1c;
                        eax_14 = var_10(0x4216d8, &var_30, &var_1c, &var_28);
                        if (eax_14 != 0)
                        {
                            break;
                        }
                        if (i != 0)
                        {
                            *i = (*i & eax_14);
                        }
                        void* eax_15 = sub_405e22(&data_4216d8);
                        *eax_15 = 0;
                        i = (eax_15 - 2);
                        *i = 0x5c;
                    } while (i != 0x4216d8);
                    if (eax_14 != 0)
                    {
                        var_30 = ((var_30 >> 0xa) | (var_2c << 0x16));
                        var_2c = (var_2c >> 0xa);
                        var_c_1 = 1;
                    }
                }
                if ((eax_13 == 0 || (eax_13 != 0 && eax_14 == 0)))
                {
                    sub_406507(&data_4216d8, ebx_2);
                    PWSTR eax_16 = sub_405e81(&data_4216d8);
                    if (eax_16 != 0)
                    {
                        *eax_16 = 0;
                    }
                    void lpTotalNumberOfClusters;
                    int32_t lpBytesPerSector;
                    int32_t lpSectorsPerCluster;
                    if (GetDiskFreeSpaceW(&data_4216d8, &lpSectorsPerCluster, &lpBytesPerSector, &var_10, &lpTotalNumberOfClusters) != 0)
                    {
                        int32_t eax_21;
                        uint32_t edx_1;
                        edx_1 = HIGHD(MulDiv((lpSectorsPerCluster * lpBytesPerSector), var_10, 0x400));
                        eax_21 = LOWD(MulDiv((lpSectorsPerCluster * lpBytesPerSector), var_10, 0x400));
                        var_30 = eax_21;
                        var_2c = edx_1;
                        var_c_1 = 1;
                    }
                }
                int32_t eax_24 = sub_404df1(5);
                if ((var_c_1 != 0 && (var_2c <= 0 && (var_2c < 0 || (var_2c >= 0 && var_30 < eax_24)))))
                {
                    var_8_1 = 2;
                }
                if (*(data_4291fc + 0x10) != 0)
                {
                    sub_404dd9(0x3ff, 0xfffffffb, eax_24);
                    if (var_c_1 == 0)
                    {
                        SetDlgItemTextW(arg1, 0x400, 0x4216c8);
                    }
                    else
                    {
                        sub_404d10(0x400, 0xfffffffc, var_30, var_2c);
                    }
                }
                data_42a2c4 = var_8_1;
                if (var_8_1 == 0)
                {
                    var_8_1 = sub_40140b(7);
                }
                if ((*(eax + 0x14) & 0x400) != 0)
                {
                    var_8_1 = 0;
                }
                BOOL eax_28;
                eax_28 = var_8_1 == 0;
                sub_404485(eax_28);
                if ((var_8_1 == 0 && data_4236f8 == 0))
                {
                    sub_4048ad();
                }
                data_4236f8 = 0;
            }
            else if (arg2 == 0x405)
            {
                goto label_404afd;
            }
        }
    }
    return sub_4044ca(arg2, arg3, arg4);
}

int32_t __stdcall sub_404caa(HWND arg1, int32_t arg2, struct ITEMIDLIST* arg3, wchar16* arg4)
{
    if (arg2 == 1)
    {
        sub_405b4b(0x3fb, arg4);
        SendMessageW(arg1, 0x467, 1, arg4);
    }
    if (arg2 == 2)
    {
        BOOL eax_1 = SHGetPathFromIDListW(arg3, arg4);
        int32_t eax_2;
        LPARAM lParam;
        if (eax_1 != 0)
        {
            eax_2 = sub_40140b(7);
            if (eax_2 == 0)
            {
                lParam = (eax_2 + 1);
            }
        }
        if ((eax_1 == 0 || (eax_1 != 0 && eax_2 != 0)))
        {
            lParam = 0;
        }
        SendMessageW(arg1, 0x465, 0, lParam);
    }
    return 0;
}

BOOL __stdcall sub_404d10(int32_t arg1, int32_t arg2, int32_t arg3, int32_t arg4)
{
    int32_t ebx = 0xffffffdc;
    int32_t esi_1;
    uint32_t edi;
    if (arg4 != 0)
    {
        esi_1 = ((arg3 >> 0x14) | (arg4 << 0xc));
        edi = 0;
    }
    else
    {
        char ecx_1 = 0x14;
        int32_t eax_2 = arg3;
        if (arg3 < 0x100000)
        {
            ecx_1 = 0xa;
            ebx = 0xffffffdd;
        }
        if (arg3 < 0x400)
        {
            ecx_1 = 0;
            ebx = 0xffffffde;
        }
        if (arg3 < 0xffff3333)
        {
            int32_t eax_4;
            int32_t edx_1;
            edx_1 = HIGHD((1 << ecx_1));
            eax_4 = LOWD((1 << ecx_1));
            eax_2 = ((COMBINE(edx_1, eax_4) / 0x14) + arg3);
        }
        esi_1 = (eax_2 >> ecx_1);
        edi = (COMBINE(0, (((eax_2 & 0xffffff) * 0xa) >> ecx_1)) % 0xa);
    }
    void var_44;
    int32_t eax_11 = sub_406544(&var_44, 0xffffffdf);
    void var_84;
    int32_t eax_12 = sub_406544(&var_84, ebx);
    wsprintfW((sub_406544(&data_423708, arg2) + (lstrlenW(&data_423708) << 1)), u"%u.%u%s%s", esi_1, edi, eax_12, eax_11);
    return SetDlgItemTextW(data_4291f8, arg1, &data_423708);
}

BOOL __stdcall sub_404dd9(int32_t arg1, int32_t arg2, int32_t arg3)
{
    return sub_404d10(arg1, arg2, arg3, 0);
}

int32_t __stdcall sub_404df1(int32_t arg1)
{
    int32_t i_1 = data_42a24c;
    void* ecx = data_42a248;
    int32_t eax = 0;
    if (i_1 != 0)
    {
        int32_t i;
        do
        {
            if ((*(ecx + 8) & 1) != 0)
            {
                eax = (eax + *(ecx + (arg1 << 2)));
            }
            ecx = (ecx + 0x818);
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
    return eax;
}

int32_t __stdcall sub_404e1e(HWND arg1, int32_t arg2)
{
    LRESULT eax = SendMessageW(arg1, 0x110a, 9, 0);
    char var_c;
    int32_t eax_4;
    if (arg2 != 0)
    {
        uint32_t eax_1 = GetMessagePos();
        int32_t var_10_1 = (eax_1 >> 0x10);
        int32_t var_14 = eax_1;
        ScreenToClient(arg1, &var_14);
        SendMessageW(arg1, 0x1111, 0, &var_14);
        LRESULT var_8;
        if ((var_c & 0x66) != 0)
        {
            eax = var_8;
        }
        else
        {
            eax_4 = 0xffffffff;
        }
    }
    if (((arg2 != 0 && (var_c & 0x66) != 0) || arg2 == 0))
    {
        LRESULT var_38_1 = eax;
        int32_t lParam = 4;
        SendMessageW(arg1, 0x113e, 0, &lParam);
        int32_t var_18;
        eax_4 = var_18;
    }
    return eax_4;
}

PWSTR __stdcall sub_404e9e(int32_t arg1, int32_t arg2)
{
    sub_406507(&data_423708, &data_42b000);
    sub_40644e(&data_42b000, arg2);
    sub_40140b(arg1);
    return sub_406507(&data_42b000, &data_423708);
}

int32_t __stdcall sub_404ed0(HWND arg1, int32_t arg2, HDC arg3, HWND arg4)
{
    HWND hWnd = GetDlgItem(arg1, 0x3f9);
    HWND hWnd_1 = GetDlgItem(arg1, 0x408);
    void* eax = data_42a248;
    int32_t eax_2 = (data_42a230 + 0x94);
    int32_t var_14_1;
    if (arg2 == 0x110)
    {
        int32_t var_24_1 = 0;
        int32_t dwBytes = (data_42a24c << 2);
        var_14_1 = 2;
        data_42a280 = arg1;
        data_423700 = GlobalAlloc(GMEM_ZEROINIT, dwBytes);
        HANDLE eax_5 = LoadImageW(data_42a220, 0x6e, IMAGE_BITMAP, 0, 0, LR_DEFAULTCOLOR);
        data_4236f4 = 0xffffffff;
        data_4236fc = SetWindowLongW(hWnd_1, 0xfffffffc, sub_4054dd);
        HIMAGELIST himl = ImageList_Create(0x10, 0x10, 0x21, 6, 0);
        data_4236ec = himl;
        ImageList_AddMasked(himl, eax_5, 0xff00ff);
        SendMessageW(hWnd_1, 0x1109, 2, data_4236ec);
        if (SendMessageW(hWnd_1, 0x111c, 0, 0) < 0x10)
        {
            SendMessageW(hWnd_1, 0x111b, 0x10, 0);
        }
        DeleteObject(eax_5);
        LPARAM lParam_4 = 0;
        do
        {
            int32_t eax_9 = *(eax_2 + (lParam_4 << 2));
            if (eax_9 != 0)
            {
                if (lParam_4 != 0x20)
                {
                    var_14_1 = 0;
                }
                SendMessageW(hWnd, 0x151, SendMessageW(hWnd, 0x143, 0, sub_406544(nullptr, eax_9)), lParam_4);
            }
            lParam_4 = (lParam_4 + 1);
        } while (lParam_4 < 0x21);
        sub_404463(arg1, 0x15, arg4[(var_14_1 + 0xc)].unused);
        sub_404463(arg1, 0x16, arg4[(var_14_1 + 0xd)].unused);
        int32_t i = 0;
        LRESULT lParam_2 = 0;
        if (data_42a24c > 0)
        {
            int32_t* edx_1 = (eax + 8);
            int32_t* var_20_1 = edx_1;
            do
            {
                if (edx_1[4] != 0)
                {
                    int16_t* var_40_1 = &edx_1[4];
                    int32_t eax_16 = *edx_1;
                    LRESULT lParam = lParam_2;
                    int32_t var_54_1 = 0xffff0002;
                    int32_t var_50_1 = 0xd;
                    int32_t var_44_1 = 0x20;
                    int32_t i_2 = i;
                    int32_t var_48_1 = (eax_16 & 0x20);
                    if ((eax_16 & 2) != 0)
                    {
                        int32_t var_50_2 = 0x4d;
                        int32_t var_30_1 = 1;
                        var_24_1 = 1;
                        *(data_423700 + (i << 2)) = SendMessageW(hWnd_1, 0x1132, 0, &lParam);
                        lParam_2 = *(data_423700 + (i << 2));
                    }
                    else if ((eax_16 & 4) == 0)
                    {
                        *(data_423700 + (i << 2)) = SendMessageW(hWnd_1, 0x1132, 0, &lParam);
                    }
                    else
                    {
                        lParam_2 = SendMessageW(hWnd_1, 0x110a, 3, lParam_2);
                    }
                }
                i = (i + 1);
                edx_1 = &var_20_1[0x206];
                var_20_1 = edx_1;
            } while (i < data_42a24c);
        }
        if ((data_42a24c <= 0 || (data_42a24c > 0 && var_24_1 == 0)))
        {
            int32_t dwNewLong;
            dwNewLong = (GetWindowLongW(hWnd_1, 0xfffffff0) & 0xfb);
            SetWindowLongW(hWnd_1, 0xfffffff0, dwNewLong);
        }
        if (var_14_1 != 0)
        {
            sub_404498(hWnd_1);
        }
        else
        {
            ShowWindow(hWnd, SW_SHOW);
            sub_404498(hWnd);
        }
    }
    if (((arg2 == 0x110 && var_14_1 != 0) || arg2 != 0x110))
    {
        HWND ecx_4;
        if (arg2 != 0x405)
        {
            ecx_4 = arg4;
        }
        else
        {
            arg3 = nullptr;
            ecx_4 = 1;
            arg2 = 0x40f;
            arg4 = 1;
        }
        if (((arg2 == 0x4e || arg2 == 0x413) && (arg2 == 0x413 || (arg2 != 0x413 && *(ecx_4 + 4) == 0x408))))
        {
            if (((data_42a239 & 2) == 0 && (arg2 == 0x413 || (arg2 != 0x413 && *(arg4 + 8) == 0xfffffffe))))
            {
                int32_t ecx_6;
                ecx_6 = arg2 != 0x413;
                int32_t eax_22 = sub_404e1e(hWnd_1, ecx_6);
                if (eax_22 >= 0)
                {
                    int32_t eax_24 = *(((eax_22 * 0x818) + eax) + 8);
                    if ((eax_24 & 0x10) == 0)
                    {
                        int32_t eax_25;
                        if ((eax_24 & 0x40) == 0)
                        {
                            eax_25 = (eax_24 ^ 1);
                        }
                        else
                        {
                            eax_25 = (eax_24 ^ 0x80);
                            if (eax_25 >= 0)
                            {
                                eax_25 = (eax_25 & 0xfe);
                            }
                            else
                            {
                                eax_25 = (eax_25 | 1);
                            }
                        }
                        *(((eax_22 * 0x818) + eax) + 8) = eax_25;
                        sub_40117d(eax_22);
                        arg3 = (eax_22 + 1);
                        arg4 = ((!(*data_42a238) >> 8) & 1);
                        arg2 = 0x40f;
                    }
                }
            }
            if (ecx_4 != 0)
            {
                if (*(ecx_4 + 8) == 0xfffffe3d)
                {
                    SendMessageW(hWnd_1, 0x419, 0, *(ecx_4 + 0x5c));
                }
                if (*(ecx_4 + 8) == 0xfffffe39)
                {
                    int32_t eax_32 = *(ecx_4 + 0x5c);
                    if (*(ecx_4 + 0xc) != 2)
                    {
                        *(((eax_32 * 0x818) + eax) + 8) = (*(((eax_32 * 0x818) + eax) + 8) & 0xffffffdf);
                    }
                    else
                    {
                        *(((eax_32 * 0x818) + eax) + 8) = (*(((eax_32 * 0x818) + eax) + 8) | 0x20);
                    }
                }
            }
        }
        if (((((arg2 != 0x4e && arg2 != 0x413) || (((arg2 == 0x4e || arg2 == 0x413) && arg2 != 0x413) && *(ecx_4 + 4) != 0x408)) || (((arg2 == 0x4e || arg2 == 0x413) && (arg2 == 0x413 || (arg2 != 0x413 && *(ecx_4 + 4) == 0x408))) && ecx_4 == 0)) || (((arg2 == 0x4e || arg2 == 0x413) && (arg2 == 0x413 || (arg2 != 0x413 && *(ecx_4 + 4) == 0x408))) && ecx_4 != 0)))
        {
            WPARAM wParam;
            if (((arg2 == 0x111 && arg3 == 0x3f9) && (arg3 >> 0x10) == 1))
            {
                wParam = SendMessageW(hWnd, 0x147, 0, 0);
                if (wParam != 0xffffffff)
                {
                    LPARAM lParam_5 = SendMessageW(hWnd, 0x150, wParam, 0);
                    if ((lParam_5 == 0xffffffff || (lParam_5 != 0xffffffff && *(eax_2 + (lParam_5 << 2)) == 0)))
                    {
                        lParam_5 = 0x20;
                    }
                    sub_401299(lParam_5);
                    SendMessageW(arg1, 0x420, 0, lParam_5);
                    arg3 = 0xffffffff;
                    arg4 = nullptr;
                    arg2 = 0x40f;
                }
            }
            if ((arg2 != 0x111 || (((arg2 == 0x111 && arg3 == 0x3f9) && (arg3 >> 0x10) == 1) && wParam != 0xffffffff)))
            {
                if (arg2 == 0x200)
                {
                    SendMessageW(hWnd_1, 0x200, 0, 0);
                }
                if (arg2 == 0x40b)
                {
                    HIMAGELIST himl_1 = data_4236ec;
                    if (himl_1 != 0)
                    {
                        ImageList_Destroy(himl_1);
                    }
                    HGLOBAL hMem = data_423700;
                    if (hMem != 0)
                    {
                        GlobalFree(hMem);
                    }
                    data_4236ec = 0;
                    data_423700 = 0;
                    data_42a280 = 0;
                }
                if (arg2 == 0x40f)
                {
                    sub_4011ef(0, 0);
                    HDC eax_41 = arg3;
                    if (eax_41 != 0)
                    {
                        if (eax_41 != 0xffffffff)
                        {
                            eax_41 = (eax_41 - 1);
                        }
                        sub_404e9e(8, eax_41);
                    }
                    if (arg4 != 0)
                    {
                        HWND eax_42 = sub_4012e2(data_423700);
                        sub_401299(eax_42);
                        int32_t eax_43 = 0;
                        WPARAM wParam_1 = 0;
                        if (eax_42 > 0)
                        {
                            do
                            {
                                if (*(eax_2 + (eax_43 << 2)) != 0)
                                {
                                    wParam_1 = (wParam_1 + 1);
                                }
                                eax_43 = (eax_43 + 1);
                            } while (eax_43 < eax_42);
                        }
                        SendMessageW(hWnd, 0x14e, wParam_1, 0);
                        arg4 = eax_42;
                        arg2 = 0x420;
                    }
                    sub_4011ef(0, 0);
                    int32_t eax_44 = data_423700;
                    int32_t var_40_2 = 0xf030;
                    int32_t i_1 = 0;
                    if (data_42a24c > 0)
                    {
                        int32_t* ebx_6 = (data_42a248 + 8);
                        do
                        {
                            LPARAM lParam_3 = *(eax_44 + (i_1 << 2));
                            if (lParam_3 != 0)
                            {
                                int32_t ecx_11 = *ebx_6;
                                int32_t lParam_1 = 8;
                                if ((*ecx_11[1] & 1) != 0)
                                {
                                    lParam_1 = 9;
                                    void* var_3c_1 = &ebx_6[4];
                                    *(ebx_6 + 1) = (*(ebx_6 + 1) & 0xfe);
                                }
                                int32_t eax_48;
                                if ((ecx_11 & 0x40) != 0)
                                {
                                    eax_48 = 3;
                                }
                                else
                                {
                                    eax_48 = ((ecx_11 & 1) + 1);
                                    if ((ecx_11 & 0x10) != 0)
                                    {
                                        eax_48 = (eax_48 + 3);
                                    }
                                }
                                int32_t var_44_2 = ((((eax_48 << 0xb) | (ecx_11 & 8)) * 2) | (ecx_11 & 0x20));
                                SendMessageW(hWnd_1, 0x1102, (((ecx_11 >> 5) & 1) + 1), lParam_3);
                                SendMessageW(hWnd_1, 0x113f, 0, &lParam_1);
                            }
                            i_1 = (i_1 + 1);
                            ebx_6 = &ebx_6[0x206];
                        } while (i_1 < data_42a24c);
                    }
                    if (data_42a2de == 0x400)
                    {
                        InvalidateRect(hWnd_1, nullptr, 1);
                    }
                    if (*(data_4291fc + 0x10) != 0)
                    {
                        sub_404dd9(0x3ff, 0xfffffffb, sub_404df1(5));
                    }
                }
                if ((arg2 == 0x420 && (data_42a239 & 1) != 0))
                {
                    int32_t eax_58;
                    eax_58 = arg4 == 0x20;
                    enum SHOW_WINDOW_CMD nCmdShow = (eax_58 << 3);
                    ShowWindow(hWnd_1, nCmdShow);
                    ShowWindow(GetDlgItem(arg1, 0x3fe), nCmdShow);
                }
            }
        }
    }
    return sub_4044ca(arg2, arg3, arg4);
}

LRESULT __stdcall sub_4054dd(HWND arg1, uint32_t arg2, WPARAM arg3, LPARAM arg4)
{
    uint32_t Msg = arg2;
    LRESULT eax_1;
    if ((Msg == 0x102 && arg3 == 0x20))
    {
        sub_4044af(0x413);
        eax_1 = 0;
    }
    LPARAM lParam;
    if (Msg != 0x102)
    {
        BOOL eax_2;
        if (Msg != 0x200)
        {
            lParam = arg4;
        }
        else
        {
            eax_2 = IsWindowVisible(arg1);
            if (eax_2 != 0)
            {
                lParam = sub_404e1e(arg1, 1);
                Msg = 0x419;
            }
        }
        if ((Msg != 0x200 || (Msg == 0x200 && eax_2 != 0)))
        {
            if (Msg != 0x419)
            {
                goto label_40555d;
            }
            if (data_4236f4 != lParam)
            {
                data_4236f4 = lParam;
                sub_404e9e(6, lParam);
            }
            goto label_40555d;
        }
    }
    if (((Msg == 0x102 && arg3 != 0x20) || Msg != 0x102))
    {
        lParam = arg4;
    label_40555d:
        eax_1 = CallWindowProcW(data_4236fc, arg1, Msg, arg3, lParam);
    }
    return eax_1;
}

int32_t __stdcall sub_405569(int32_t arg1, PWSTR arg2)
{
    int32_t hWnd_1 = data_429204;
    int32_t hWnd = hWnd_1;
    if (hWnd_1 != 0)
    {
        int32_t ebx_1 = *data_42a2d4;
        char var_c_1 = ebx_1;
        int32_t ebx_2 = (ebx_1 & 1);
        if (ebx_2 == 0)
        {
            sub_406544(&data_4226e8, arg1);
        }
        hWnd_1 = lstrlenW(&data_4226e8);
        arg1 = hWnd_1;
        if (arg2 != 0)
        {
            hWnd_1 = (lstrlenW(arg2) + arg1);
            if (hWnd_1 < 0x1000)
            {
                hWnd_1 = lstrcatW(&data_4226e8, arg2);
            }
        }
        if (((arg2 != 0 && hWnd_1 < 0x1000) || arg2 == 0))
        {
            if ((var_c_1 & 4) == 0)
            {
                hWnd_1 = SetWindowTextW(data_4291e8, &data_4226e8);
            }
            if ((var_c_1 & 2) == 0)
            {
                int32_t var_20_1 = 0x4226e8;
                int32_t lParam = 1;
                WPARAM wParam = (SendMessageW(hWnd, 0x1004, 0, 0) - ebx_2);
                int32_t var_2c_1 = 0;
                SendMessageW(hWnd, (0x104d - ebx_2), 0, &lParam);
                hWnd_1 = SendMessageW(hWnd, 0x1013, wParam, 0);
            }
            if (ebx_2 != 0)
            {
                hWnd_1 = arg1;
                *((hWnd_1 << 1) + &data_4226e8) = 0;
            }
        }
    }
    return hWnd_1;
}

int32_t __stdcall sub_40563c(HWND arg1)
{
    void* esi = data_42a248;
    int32_t i = data_42a24c;
    HRESULT eax = OleInitialize(nullptr);
    data_42a2e0 = (data_42a2e0 | eax);
    sub_4044af(0);
    if (i != 0)
    {
        int32_t* esi_1 = (esi + 0xc);
        do
        {
            i = (i - 1);
            if (((esi_1[-1] & 1) != 0 && sub_401389(*esi_1, arg1) != 0))
            {
                data_42a2ac = (data_42a2ac + 1);
                break;
            }
            esi_1 = &esi_1[0x206];
        } while (i != 0);
    }
    sub_4044af(0x404);
    OleUninitialize();
    return data_42a2ac;
}

int32_t __stdcall sub_4056a8(HWND arg1, LPARAM arg2, int16_t arg3, HWND arg4)
{
    WPARAM hWnd_3 = data_429204;
    WPARAM wParam = 0;
    HWND hWnd = hWnd_3;
    int32_t eax_10;
    int32_t lParam_1;
    int32_t lpRect;
    if (arg2 == 0x110)
    {
        int32_t var_34_1 = 0xffffffff;
        int32_t var_28 = 0xffffffff;
        lParam_1 = 2;
        int32_t var_38_1 = 0;
        int32_t var_30_1 = 0;
        int32_t var_2c_1 = 0;
        int32_t var_24_1 = 0;
        void var_20;
        var_20 = 0;
        void* eax_1 = data_42a230;
        LPARAM lParam_2 = *(eax_1 + 0x5c);
        arg3 = *(eax_1 + 0x60);
        data_4291f0 = GetDlgItem(arg1, 0x403);
        data_4291e8 = GetDlgItem(arg1, 0x3ee);
        HWND hWnd_1 = GetDlgItem(arg1, 0x3f8);
        WPARAM var_54_1 = data_4291f0;
        data_429204 = hWnd_1;
        sub_404498(var_54_1);
        data_4291f4 = sub_404df1(4);
        data_42920c = 0;
        GetClientRect(hWnd_1, &lpRect);
        int32_t var_14;
        int32_t var_34_2 = (var_14 - GetSystemMetrics(SM_CXVSCROLL));
        SendMessageW(hWnd_1, 0x1061, 0, &lParam_1);
        SendMessageW(hWnd_1, 0x1036, 0x4000, 0x4000);
        if (lParam_2 >= 0)
        {
            SendMessageW(hWnd_1, 0x1001, 0, lParam_2);
            SendMessageW(hWnd_1, 0x1026, 0, lParam_2);
        }
        if (arg3 >= 0)
        {
            SendMessageW(hWnd_1, 0x1024, 0, arg3);
        }
        sub_404463(arg1, 0x1b, *(arg4 + 0x30));
        if ((data_42a238 & 3) != 0)
        {
            ShowWindow(data_4291f0, SW_HIDE);
            if ((data_42a238 & 2) != 0)
            {
                data_4291f0 = 0;
            }
            else
            {
                ShowWindow(hWnd_1, SW_SHOWNA);
            }
            sub_404498(data_4291e8);
        }
        HWND hWnd_2 = GetDlgItem(arg1, 0x3ec);
        SendMessageW(hWnd_2, 0x401, 0, 0x75300000);
        if ((data_42a238 & 4) != 0)
        {
            SendMessageW(hWnd_2, 0x409, 0, arg3);
            SendMessageW(hWnd_2, 0x2001, 0, lParam_2);
        }
    label_405a31:
        eax_10 = 0;
    }
    else
    {
        void lpThreadId;
        if (arg2 == 0x405)
        {
            CloseHandle(CreateThread(nullptr, 0, sub_40563c, GetDlgItem(arg1, 0x3ec), THREAD_CREATE_RUN_IMMEDIATELY, &lpThreadId));
        }
        if (arg2 == 0x111)
        {
            if (arg3 != 0x403)
            {
                goto label_4058dc;
            }
            ShowWindow(data_4291f0, SW_HIDE);
            ShowWindow(hWnd_3, SW_SHOWNA);
            sub_404498(hWnd_3);
        }
        int32_t esi = 1;
        if (arg2 == 0x404)
        {
            if (data_4291ec == 0)
            {
                ShowWindow(data_42a228, SW_SHOWNA);
                if (data_42a2ac == 0)
                {
                    sub_405569(*(data_4226e0 + 0x34), nullptr);
                }
                sub_40443c(1);
            }
            else
            {
                data_421ed8 = 2;
                sub_40443c(0x78);
            label_4058dc:
                eax_10 = sub_4044ca(arg2, arg3, arg4);
            }
        }
        if ((arg2 != 0x404 || (arg2 == 0x404 && data_4291ec == 0)))
        {
            if (arg2 != 0x7b)
            {
                goto label_4058dc;
            }
            if (arg3 != hWnd)
            {
                goto label_4058dc;
            }
            LRESULT eax_13 = SendMessageW(hWnd, 0x1004, 0, 0);
            arg2 = eax_13;
            if (eax_13 > 0)
            {
                HMENU hMenu = CreatePopupMenu();
                AppendMenuW(hMenu, MF_BYCOMMAND, 1, sub_406544(nullptr, 0xffffffe1));
                int32_t x = arg4;
                int32_t y = (arg4 >> 0x10);
                if (arg4 == 0xffffffff)
                {
                    GetWindowRect(hWnd, &lpRect);
                    x = lpRect;
                    int32_t y_1;
                    y = y_1;
                }
                if (TrackPopupMenu(hMenu, TPM_NONOTIFY | TPM_RETURNCMD, x, y, 0, arg1, nullptr) == 1)
                {
                    lParam_1 = 0;
                    int32_t var_30_2 = 0x423708;
                    int32_t var_2c_2 = 0x1000;
                    arg1 = arg2;
                    void lParam;
                    do
                    {
                        arg1 = (arg1 - 1);
                        esi = ((esi + SendMessageW(hWnd, 0x1073, arg1, &lParam)) + 2);
                    } while (arg1 != 0);
                    OpenClipboard(nullptr);
                    EmptyClipboard();
                    HGLOBAL hMem = GlobalAlloc(GHND, (esi * 2));
                    arg1 = hMem;
                    void* esi_1 = GlobalLock(hMem);
                    do
                    {
                        void* var_30_3 = esi_1;
                        int16_t* esi_2 = (esi_1 + (SendMessageW(hWnd, 0x1073, wParam, &lParam) << 1));
                        *esi_2 = 0xd;
                        esi_2[1] = 0xa;
                        esi_1 = &esi_2[2];
                        wParam = (wParam + 1);
                    } while (wParam < arg2);
                    GlobalUnlock(arg1);
                    SetClipboardData(0xd, arg1);
                    CloseClipboard();
                }
            }
            goto label_405a31;
        }
    }
    return eax_10;
}

enum WIN32_ERROR __stdcall sub_405a38(PWSTR arg1)
{
    char var_23 = 0;
    int32_t var_20 = 0x4083f8;
    int32_t var_1c = 0x4083f8;
    int32_t var_18 = 0;
    int32_t var_8 = 0;
    char pSecurityDescriptor;
    char* var_c = &pSecurityDescriptor;
    pSecurityDescriptor = 1;
    int16_t var_22 = 4;
    int32_t var_14 = 0x4083e8;
    int32_t lpSecurityAttributes = 0xc;
    BOOL eax = CreateDirectoryW(arg1, &lpSecurityAttributes);
    enum WIN32_ERROR eax_1;
    BOOL eax_2;
    if (eax == 0)
    {
        eax_1 = GetLastError();
        if (eax_1 == ERROR_ALREADY_EXISTS)
        {
            eax_2 = SetFileSecurityW(arg1, DACL_SECURITY_INFORMATION | GROUP_SECURITY_INFORMATION | OWNER_SECURITY_INFORMATION | PROTECTED_DACL_SECURITY_INFORMATION, &pSecurityDescriptor);
            if (eax_2 == 0)
            {
                eax_1 = GetLastError();
            }
        }
    }
    if ((eax != 0 || ((eax == 0 && eax_1 == ERROR_ALREADY_EXISTS) && eax_2 != 0)))
    {
        eax_1 = NO_ERROR;
    }
    return eax_1;
}

enum WIN32_ERROR __stdcall sub_405ab5(PWSTR arg1)
{
    enum WIN32_ERROR eax_1;
    if (CreateDirectoryW(arg1, nullptr) == 0)
    {
        eax_1 = GetLastError();
    }
    else
    {
        eax_1 = NO_ERROR;
    }
    return eax_1;
}

int32_t sub_405ad2()
{
    int32_t eax = sub_4068d4(6);
    if ((eax != 0 && eax() != 0))
    {
        return 1;
    }
    return 0;
}

BOOL __stdcall sub_405aea(PWSTR arg1)
{
    data_426710 = 0x44;
    BOOL lpProcessInformation;
    BOOL lpProcessInformation_1 = CreateProcessW(nullptr, arg1, nullptr, nullptr, 0, CREATE_DEFAULT_ERROR_MODE, nullptr, nullptr, &data_426710, &lpProcessInformation);
    if (lpProcessInformation_1 != 0)
    {
        HANDLE hObject;
        CloseHandle(hObject);
        lpProcessInformation_1 = lpProcessInformation;
    }
    return lpProcessInformation_1;
}

BOOL __stdcall sub_405b2d(int32_t* arg1)
{
    arg1[9] = 0;
    *arg1 = 0x3c;
    return ShellExecuteExW(arg1);
}

BOOL __stdcall SetDlgItemTextW(HWND hDlg, int32_t nIDDlgItem, PWSTR lpString)
{
    /* tailcall */
    return SetDlgItemTextW(hDlg, nIDDlgItem, lpString);
}

uint32_t __stdcall sub_405b4b(int32_t arg1, wchar16* arg2)
{
    return GetDlgItemTextW(data_4291f8, arg1, arg2, 0x400);
}

uint32_t __stdcall sub_405b67(int32_t arg1, int32_t arg2)
{
    int32_t ecx_1 = (arg2 & 0x1fffff);
    uint32_t eax;
    if (data_42a2c0 != 0)
    {
        eax = (arg2 >> 0x15);
    }
    if ((data_42a2c0 == 0 || (data_42a2c0 != 0 && eax == 0)))
    {
        if (data_42a2c8 != 0)
        {
            ecx_1 = (ecx_1 ^ 0x180000);
        }
        data_40a3bc = data_42a228;
        data_40a3c0 = data_42a220;
        data_40a3c4 = arg1;
        data_40a3c8 = 0x429220;
        data_40a3cc = ecx_1;
        eax = MessageBoxIndirectW(&data_40a3b8);
    }
    return eax;
}

int32_t __stdcall sub_405bcb(PWSTR arg1, char arg2)
{
    uint32_t dwFileAttributes = sub_405fd2(arg1);
    BOOL eax;
    int32_t eax_1;
    if (dwFileAttributes != 0xffffffff)
    {
        if ((arg2 & 1) == 0)
        {
            eax = DeleteFileW(arg1);
        }
        else
        {
            eax = RemoveDirectoryW(arg1);
        }
        if (eax != 0)
        {
            eax_1 = 1;
        }
        else if ((arg2 & 4) == 0)
        {
            SetFileAttributesW(arg1, dwFileAttributes);
        }
    }
    if ((dwFileAttributes == 0xffffffff || (dwFileAttributes != 0xffffffff && eax == 0)))
    {
        eax_1 = 0;
    }
    return eax_1;
}

HANDLE __stdcall sub_405c13(PWSTR arg1, PWSTR arg2)
{
    PWSTR edi = arg1;
    void* eax_1 = (arg2 & 4);
    HANDLE hFindFile = sub_405ede(edi);
    HANDLE hFindFile_1 = hFindFile;
    if ((arg2 & 8) != 0)
    {
        BOOL eax_2 = DeleteFileW(edi);
        int32_t eax_3 = -(eax_2);
        hFindFile = ((eax_3 - eax_3) + 1);
        data_42a2a8 = (data_42a2a8 + hFindFile);
    }
    else
    {
        void* temp1_1 = (arg2 & 1);
        arg1 = temp1_1;
        if ((temp1_1 == 0 || ((temp1_1 != 0 && hFindFile != 0) && (arg2 & 2) != 0)))
        {
            sub_406507(&data_425710, edi);
            if (arg1 == 0)
            {
                sub_405e22(edi);
            }
            else
            {
                lstrcatW(&data_425710, u"\*.*");
            }
            if ((*edi != 0 || (*edi == 0 && data_425710 == 0x5c)))
            {
                lstrcatW(edi, &data_40a014);
            }
            void* ebx_1 = &edi[lstrlenW(edi)];
            char lpFindFileData;
            hFindFile = FindFirstFileW(&data_425710, &lpFindFileData);
            if (hFindFile != 0xffffffff)
            {
                BOOL i;
                do
                {
                    int16_t var_230;
                    int16_t var_22e;
                    if (var_230 != 0x2e)
                    {
                    label_405cfe:
                        sub_406507(ebx_1, &var_230);
                        if ((lpFindFileData & 0x10) == 0)
                        {
                            int32_t eax_8 = sub_405bcb(edi, eax_1);
                            if (eax_8 != 0)
                            {
                                sub_405569(0xfffffff2, edi);
                            }
                            else if (eax_1 == eax_8)
                            {
                                data_42a2a8 = (data_42a2a8 + 1);
                            }
                            else
                            {
                                sub_405569(0xfffffff1, edi);
                                sub_4062c7(edi, 0);
                            }
                        }
                        else if ((arg2 & 3) == 3)
                        {
                            sub_405c13(edi, arg2);
                        }
                    }
                    else if (var_22e != 0)
                    {
                        if (var_22e != 0x2e)
                        {
                            goto label_405cfe;
                        }
                        int16_t var_22c;
                        if (var_22c != 0)
                        {
                            goto label_405cfe;
                        }
                    }
                    i = FindNextFileW(hFindFile, &lpFindFileData);
                } while (i != 0);
                hFindFile = FindClose(hFindFile);
            }
            if (arg1 != 0)
            {
                *(ebx_1 - 2) = 0;
            }
        }
        if (arg1 != 0)
        {
            if (hFindFile_1 != 0)
            {
                hFindFile = sub_40683d(edi);
                if (hFindFile != 0)
                {
                    sub_405dd6(edi);
                    hFindFile = sub_405bcb(edi, (eax_1 | 1));
                    if (hFindFile != 0)
                    {
                        hFindFile = sub_405569(0xffffffe5, edi);
                    }
                }
                if ((hFindFile == 0 && eax_1 != 0))
                {
                    sub_405569(0xfffffff1, edi);
                    hFindFile = sub_4062c7(edi, 0);
                }
            }
            if ((hFindFile_1 == 0 || ((hFindFile_1 != 0 && hFindFile == 0) && eax_1 == 0)))
            {
                data_42a2a8 = (data_42a2a8 + 1);
            }
        }
    }
    return hFindFile;
}

PWSTR __stdcall sub_405dd6(PWSTR arg1)
{
    if (*CharPrevW(arg1, &arg1[lstrlenW(arg1)]) != 0x5c)
    {
        lstrcatW(arg1, &data_40a014);
    }
    return arg1;
}

int16_t* __stdcall sub_405e03(int16_t* arg1, int16_t arg2)
{
    int16_t* lpsz = arg1;
    while (true)
    {
        int16_t ecx = *lpsz;
        if (ecx == 0)
        {
            break;
        }
        if (ecx == arg2)
        {
            break;
        }
        lpsz = CharNextW(lpsz);
    }
    return lpsz;
}

void* __stdcall sub_405e22(PWSTR arg1)
{
    PWSTR lpszCurrent = &arg1[lstrlenW(arg1)];
    while (*lpszCurrent != 0x5c)
    {
        lpszCurrent = CharPrevW(arg1, lpszCurrent);
        if (lpszCurrent <= arg1)
        {
            break;
        }
    }
    *lpszCurrent = 0;
    return &lpszCurrent[1];
}

int32_t __stdcall sub_405e4d(int16_t* arg1)
{
    int16_t ecx = *arg1;
    int16_t eax;
    eax = (ecx | 0x20);
    int32_t eax_1;
    if ((ecx == 0x5c && arg1[1] == ecx))
    {
    label_405e79:
        eax_1 = 1;
    }
    if (((ecx != 0x5c || (ecx == 0x5c && arg1[1] != ecx)) && eax < 0x61))
    {
    label_405e7c:
        eax_1 = 0;
    }
    if (((ecx == 0x5c && arg1[1] == ecx) || ((ecx != 0x5c || (ecx == 0x5c && arg1[1] != ecx)) && eax < 0x61)))
    {
        return eax_1;
    }
    if (((ecx != 0x5c || (ecx == 0x5c && arg1[1] != ecx)) && eax >= 0x61))
    {
        if (eax > 0x7a)
        {
            goto label_405e7c;
        }
        if (arg1[1] == 0x3a)
        {
            goto label_405e79;
        }
        goto label_405e7c;
    }
}

PWSTR __stdcall sub_405e81(int16_t* arg1)
{
    PWSTR lpsz = CharNextW(arg1);
    PWSTR lpsz_1 = CharNextW(lpsz);
    int16_t ecx = *arg1;
    if (((ecx != 0 && *lpsz == 0x3a) && lpsz[1] == 0x5c))
    {
        lpsz_1 = CharNextW(lpsz_1);
    }
    if (((ecx == 0 || (ecx != 0 && *lpsz != 0x3a)) || ((ecx != 0 && *lpsz == 0x3a) && lpsz[1] != 0x5c)))
    {
        if ((ecx == 0x5c && arg1[1] == ecx))
        {
            int32_t esi_1 = 2;
            while (true)
            {
                esi_1 = (esi_1 - 1);
                int16_t* eax = sub_405e03(lpsz_1, 0x5c);
                if (*eax == 0)
                {
                    break;
                }
                lpsz_1 = &eax[1];
                if (esi_1 == 0)
                {
                    return lpsz_1;
                }
            }
        }
        lpsz_1 = nullptr;
    }
    return lpsz_1;
}

int32_t __stdcall sub_405ede(PWSTR arg1)
{
    sub_406507(&data_425f10, arg1);
    PWSTR eax = sub_405e81(&data_425f10);
    int32_t eax_5;
    if (eax == 0)
    {
    label_405efb:
        eax_5 = 0;
    }
    else
    {
        sub_40678e(eax);
        if ((data_42a238 & 0x80) != 0)
        {
            int16_t eax_1 = *eax;
            if (eax_1 == 0)
            {
                goto label_405efb;
            }
            if (eax_1 == 0x5c)
            {
                goto label_405efb;
            }
        }
        bool cond:0_1;
        while (true)
        {
            cond:0_1 = lstrlenW(&data_425f10) > ((eax - 0x425f10) >> 1);
            if (!(cond:0_1))
            {
                break;
            }
            char* eax_2 = sub_40683d(&data_425f10);
            if ((eax_2 != 0 && (*eax_2 & 0x10) == 0))
            {
                break;
            }
            sub_405e22(&data_425f10);
        }
        if (cond:0_1)
        {
            goto label_405efb;
        }
        sub_405dd6(&data_425f10);
        int32_t ecx_1;
        ecx_1 = GetFileAttributesW(&data_425f10) != 0xffffffff;
        eax_5 = ecx_1;
    }
    return eax_5;
}

PSTR __stdcall sub_405f5c(PSTR arg1, PSTR arg2)
{
    int32_t ecx;
    int32_t var_8 = ecx;
    int32_t eax = lstrlenA(arg2);
    PSTR esi = arg1;
    PSTR eax_6;
    while (true)
    {
        if (lstrlenA(esi) < eax)
        {
            eax_6 = nullptr;
            break;
        }
        char ebx = esi[eax];
        esi[eax] = 0;
        bool cond:0_1 = lstrcmpiA(esi, arg2) == 0;
        esi[eax] = ebx;
        if (cond:0_1)
        {
            eax_6 = esi;
            break;
        }
        esi = CharNextA(esi);
    }
    return eax_6;
}

void __stdcall sub_405fb2(char* arg1, int32_t arg2, int32_t arg3)
{
    char* ecx = arg1;
    int32_t i_1 = arg3;
    if (i_1 > 0)
    {
        char* eax = (arg2 - ecx);
        int32_t i;
        do
        {
            *ecx = *(eax + ecx);
            ecx = &ecx[1];
            i = i_1;
            i_1 = (i_1 - 1);
        } while (i != 1);
    }
}

uint32_t __stdcall sub_405fd2(PWSTR arg1)
{
    uint32_t dwFileAttributes = GetFileAttributesW(arg1);
    uint32_t dwFileAttributes_1 = dwFileAttributes;
    if (dwFileAttributes_1 != 0xffffffff)
    {
        dwFileAttributes = (dwFileAttributes & 0xfe);
        SetFileAttributesW(arg1, dwFileAttributes);
    }
    return dwFileAttributes_1;
}

HANDLE __stdcall sub_405ff7(PWSTR arg1, uint32_t arg2, enum FILE_CREATION_DISPOSITION arg3)
{
    uint32_t eax = GetFileAttributesW(arg1);
    int32_t ecx_2 = -((eax + 1));
    return CreateFileW(arg1, arg2, FILE_SHARE_READ, nullptr, arg3, ((ecx_2 - ecx_2) & eax), nullptr);
}

uint32_t __thiscall sub_406026(int32_t arg1, int16_t* arg2, PWSTR arg3)
{
    int32_t var_8 = arg1;
    int32_t lpPrefixString = arg1;
    int32_t edi = 0x64;
    uint32_t eax_4;
    while (true)
    {
        edi = (edi - 1);
        lpPrefixString = data_40a578;
        int16_t var_8_1 = (data_40a57c + (COMBINE(0, GetTickCount()) % 0x1a));
        eax_4 = GetTempFileNameW(arg3, &lpPrefixString, 0, arg2);
        if (eax_4 != 0)
        {
            eax_4 = arg2;
            break;
        }
        if (edi == 0)
        {
            *arg2 = (*arg2 & edi);
            break;
        }
    }
    return eax_4;
}

int32_t __stdcall sub_40607a(HANDLE arg1, uint8_t* arg2, uint32_t arg3)
{
    uint32_t nNumberOfBytesToRead = arg3;
    BOOL eax = ReadFile(arg1, arg2, nNumberOfBytesToRead, &arg3, nullptr);
    int32_t eax_1;
    if ((eax == 0 || (eax != 0 && nNumberOfBytesToRead != arg3)))
    {
        eax_1 = 0;
    }
    if ((eax != 0 && nNumberOfBytesToRead == arg3))
    {
        eax_1 = 1;
    }
    return eax_1;
}

int32_t __stdcall sub_4060a9(HANDLE arg1, uint8_t* arg2, uint32_t arg3)
{
    uint32_t nNumberOfBytesToWrite = arg3;
    BOOL eax = WriteFile(arg1, arg2, nNumberOfBytesToWrite, &arg3, nullptr);
    int32_t eax_1;
    if ((eax == 0 || (eax != 0 && nNumberOfBytesToWrite != arg3)))
    {
        eax_1 = 0;
    }
    if ((eax != 0 && nNumberOfBytesToWrite == arg3))
    {
        eax_1 = 1;
    }
    return eax_1;
}

int32_t __stdcall sub_4060d8(HANDLE arg1, int32_t arg2)
{
    HANDLE hFile = arg1;
    if (SetFilePointer(hFile, 0, nullptr, FILE_CURRENT) != 0)
    {
        goto label_406145;
    }
    int32_t eax_1 = sub_40607a(hFile, &*arg1[2], 2);
    int32_t eax_2;
    if ((eax_1 != 0 && *arg1[2] == 0xfeff))
    {
        eax_2 = 0;
    }
    if ((eax_1 == 0 || (eax_1 != 0 && *arg1[2] != 0xfeff)))
    {
        uint32_t eax_3;
        if (arg2 != 0)
        {
            eax_3 = SetFilePointer(hFile, 0, nullptr, FILE_CURRENT);
            if (eax_3 == 0)
            {
                int32_t eax_4 = sub_4060a9(hFile, &data_40841c, 2);
                int32_t eax_5 = -(eax_4);
                eax_2 = (((eax_5 - eax_5) & 0x7fffbffb) - 0x7fffbffb);
            }
        }
        if ((arg2 == 0 || (arg2 != 0 && eax_3 != 0)))
        {
            SetFilePointer(hFile, 0, nullptr, FILE_BEGIN);
        label_406145:
            eax_2 = 1;
        }
    }
    return eax_2;
}

uint32_t sub_40614d(PWSTR arg1, uint32_t arg2)
{
    data_426da8 = 0x55004e;
    data_426dac = 0x4c;
    uint32_t eax_2;
    if (arg2 != 0)
    {
        CloseHandle(sub_405ff7(arg2, 0, CREATE_NEW));
        eax_2 = GetShortPathNameW(arg2, &data_426da8, 0x400);
    }
    if ((arg2 == 0 || ((arg2 != 0 && eax_2 != 0) && eax_2 <= 0x400)))
    {
        eax_2 = GetShortPathNameW(arg1, &data_4275a8, 0x400);
        if ((eax_2 != 0 && eax_2 <= 0x400))
        {
            int32_t eax_3 = wsprintfA(0x4269a8, "%ls=%ls\r\n", 0x426da8, 0x4275a8);
            sub_406544(&data_4275a8, *(data_42a230 + 0x128));
            eax_2 = sub_405ff7(&data_4275a8, 0xc0000000, OPEN_ALWAYS);
            if (eax_2 != 0xffffffff)
            {
                uint32_t edi_1 = GetFileSize(eax_2, nullptr);
                uint8_t* hMem = GlobalAlloc(GMEM_ZEROINIT, ((edi_1 + eax_3) + 0xa));
                if ((hMem != 0 && sub_40607a(eax_2, hMem, edi_1) != 0))
                {
                    PSTR eax_9 = sub_405f5c(hMem, "[Rename]\r\n");
                    PSTR eax_12;
                    uint32_t eax_14;
                    if (eax_9 != 0)
                    {
                        eax_12 = sub_405f5c(&eax_9[0xa], &data_40a580);
                        if (eax_12 != 0)
                        {
                            void* i = &hMem[edi_1];
                            void* eax_13 = (i + eax_3);
                            for (; i > eax_12; i = (i - 1))
                            {
                                *eax_13 = *i;
                                eax_13 = (eax_13 - 1);
                            }
                            eax_14 = ((eax_12 - hMem) + 1);
                        }
                    }
                    else
                    {
                        lstrcpyA(&hMem[edi_1], "[Rename]\r\n");
                        edi_1 = (edi_1 + 0xa);
                    }
                    if ((eax_9 == 0 || (eax_9 != 0 && eax_12 == 0)))
                    {
                        eax_14 = edi_1;
                    }
                    sub_405fb2(&hMem[eax_14], 0x4269a8, eax_3);
                    SetFilePointer(eax_2, 0, nullptr, FILE_BEGIN);
                    sub_4060a9(eax_2, hMem, (edi_1 + eax_3));
                    GlobalFree(hMem);
                }
                eax_2 = CloseHandle(eax_2);
            }
        }
    }
    return eax_2;
}

BOOL __stdcall sub_4062c7(PWSTR arg1, uint32_t arg2)
{
    BOOL eax = MoveFileExW(arg1, arg2, MOVEFILE_DELAY_UNTIL_REBOOT | MOVEFILE_REPLACE_EXISTING);
    if (eax == 0)
    {
        eax = sub_40614d(arg1, arg2);
    }
    data_42a2b0 = (data_42a2b0 + 1);
    return eax;
}

int32_t __stdcall sub_4062f3(int32_t arg1, int32_t* arg2)
{
    int32_t ebx;
    ebx = data_42a2dc < 0;
    int32_t eax = *arg2;
    int32_t edi = arg1;
    int32_t ebx_2;
    ebx_2 = 0;
    if (((eax & 0x20) != 0 && (edi & 0x60000000) != 0))
    {
        int32_t ecx_3 = ((edi >> 0x15) & 0x300);
        if (ecx_3 == 0x300)
        {
            ecx_3 = (!((ebx_2 + 0x100)) & data_42a2d0);
        }
        *eax[1] = (*eax[1] & 0xfe);
        *eax[1] = (*(eax | ecx_3)[1] & 0xfd);
        edi = (edi & 0x9fffffff);
    }
    if ((((eax & 0x20) == 0 || ((eax & 0x20) != 0 && (edi & 0x60000000) == 0)) && (eax & 0x100000) != 0))
    {
        eax = (eax | data_42a2d0);
    }
    int32_t eax_1 = (eax & (ebx_2 + 0x100));
    int32_t eax_2 = -(eax_1);
    *arg2 = (eax & 0xffefffdf);
    return (!((eax_2 - eax_2)) & edi);
}

enum WIN32_ERROR __stdcall sub_406374(int32_t arg1, PWSTR arg2, HKEY* arg3)
{
    HKEY hKey = sub_4062f3(arg1, &samDesired);
    enum WIN32_ERROR eax;
    if (hKey != 0)
    {
        eax = RegOpenKeyExW(hKey, arg2, 0, samDesired, arg3);
    }
    else
    {
        eax = ERROR_INVALID_HANDLE;
    }
    return eax;
}

enum WIN32_ERROR __stdcall sub_4063a2(int32_t arg1, PWSTR arg2, HKEY* arg3)
{
    HKEY hKey = sub_4062f3(arg1, &samDesired);
    enum WIN32_ERROR eax;
    if (hKey != 0)
    {
        eax = RegCreateKeyExW(hKey, arg2, 0, nullptr, REG_OPTION_RESERVED, samDesired, nullptr, arg3, nullptr);
    }
    else
    {
        eax = ERROR_INVALID_HANDLE;
    }
    return eax;
}

enum WIN32_ERROR __thiscall sub_4063d5(int32_t arg1, int32_t arg2, PWSTR arg3, uint8_t* arg4)
{
    int32_t lpcbData = arg1;
    int32_t* __saved_edi = &hKey;
    HKEY hKey_1 = hKey;
    int32_t eax = -(hKey_1);
    lpcbData = 0x800;
    enum WIN32_ERROR eax_4 = sub_406374(arg2, lpType, (((eax - eax) & 0x100) | 0x20019));
    if (eax_4 != NO_ERROR)
    {
    label_406445:
        *arg4 = 0;
    }
    else
    {
        enum WIN32_ERROR eax_5 = RegQueryValueExW(hKey, arg3, nullptr, &lpType, arg4, &lpcbData);
        eax_4 = RegCloseKey(hKey);
        *(arg4 + 0x7fe) = 0;
        if (eax_5 != NO_ERROR)
        {
            goto label_406445;
        }
        if ((lpType != REG_SZ && lpType != REG_EXPAND_SZ))
        {
            goto label_406445;
        }
    }
    return eax_4;
}

int32_t __stdcall sub_40644e(PWSTR arg1, int32_t arg2)
{
    return wsprintfW(arg1, &data_408420, arg2);
}

int32_t __stdcall sub_406467(int16_t* arg1)
{
    int32_t ecx;
    int32_t var_8 = ecx;
    int32_t var_c = ecx;
    int16_t* ecx_1 = arg1;
    int32_t var_8_1 = 0;
    int16_t eax = 0xa;
    int32_t var_c_1 = 1;
    int16_t ebx = 0x39;
    if (*ecx_1 == 0x2d)
    {
        ecx_1 = &ecx_1[1];
        var_c_1 = 0xffffffff;
    }
    if (*ecx_1 == 0x30)
    {
        ecx_1 = &ecx_1[1];
        int16_t edx = *ecx_1;
        if ((edx >= 0x30 && edx <= 0x37))
        {
            eax = 8;
            ebx = 0x37;
        }
        if ((edx & 0xffffffdf) == 0x58)
        {
            eax = 0x10;
            ecx_1 = &ecx_1[1];
        }
    }
    while (true)
    {
        uint32_t edx_3 = *ecx_1;
        ecx_1 = &ecx_1[1];
        int32_t edx_4;
        if ((edx_3 >= 0x30 && edx_3 <= ebx))
        {
            edx_4 = (edx_3 - 0x30);
        }
        if ((edx_3 < 0x30 || (edx_3 >= 0x30 && edx_3 > ebx)))
        {
            if (eax != 0x10)
            {
                break;
            }
            int32_t esi_3 = (edx_3 & 0xffffffdf);
            if (esi_3 < 0x41)
            {
                break;
            }
            if (esi_3 > 0x46)
            {
                break;
            }
            edx_4 = ((edx_3 & 7) + 9);
        }
        var_8_1 = ((eax * var_8_1) + edx_4);
    }
    return (var_c_1 * var_8_1);
}

PWSTR __stdcall sub_406507(wchar16* arg1, PWSTR arg2)
{
    return lstrcpynW(arg1, arg2, 0x400);
}

int32_t __stdcall lstrlenW(PWSTR lpString)
{
    /* tailcall */
    return lstrlenW(lpString);
}

PWSTR __stdcall lstrcatW(PWSTR lpString1, PWSTR lpString2)
{
    /* tailcall */
    return lstrcatW(lpString1, lpString2);
}

int32_t sub_406529(wchar16* arg1, PSTR arg2, int32_t arg3)
{
    return WideCharToMultiByte(0, 0, arg1, 0xffffffff, arg2, arg3, nullptr, nullptr);
}

int32_t __stdcall sub_406544(wchar16* arg1, int32_t arg2)
{
    int32_t eax = arg2;
    if (eax < 0)
    {
        eax = *(data_4291fc - ((eax << 2) + 4));
    }
    int32_t i;
    int32_t i_1 = i;
    int16_t* edi = (data_42a258 + (eax << 1));
    char eax_2 = -0x40;
    wchar16* esi = &data_4281c0;
    if ((arg1 >= 0x4281c0 && ((arg1 - 0x4281c0) >> 1) < 0x800))
    {
        esi = arg1;
        arg1 = nullptr;
    }
    int32_t ecx_5;
    ecx_5 = *edi;
    arg2 = ecx_5;
    if (ecx_5 != 0)
    {
        while (((esi - 0x4281c0) & 0xfffffffe) < 0x800)
        {
            edi = &edi[1];
            if (ecx_5 < 4)
            {
                ecx_5 = *(edi + 1);
                eax_2 = *edi;
                int32_t edx_4;
                edx_4 = ecx_5;
                i = eax_2;
                uint32_t eax_3 = eax_2;
                int32_t edx_7 = (((edx_4 & 0x7f) << 7) | (i & 0x7f));
                uint32_t ecx_6 = ecx_5;
                int32_t var_1c = (eax_3 | 0x8000);
                i = 2;
                edi = &edi[1];
                uint32_t var_18_1 = eax_3;
                int32_t var_14_1 = (ecx_6 | 0x8000);
                if (((arg2 != 2 && arg2 != 3) && arg2 == 1))
                {
                    sub_406544(esi, (0xffffffff - edx_7));
                }
                if (arg2 == 3)
                {
                    if (edx_7 != 0x1d)
                    {
                        sub_406507(esi, ((edx_7 << 0xb) + 0x42b000));
                    }
                    else
                    {
                        sub_40644e(esi, data_42a228);
                    }
                }
                if (arg2 == 2)
                {
                    if (data_42a2a4 != 0)
                    {
                        i = 4;
                    }
                    if (eax_3 < 0)
                    {
                        int32_t var_2c_1 = (eax_3 & 0x40);
                        int32_t ecx_10 = data_42a258;
                        wchar16* var_30_1 = esi;
                        sub_4063d5(ecx_10, 0x80000002, u"Software\Microsoft\Windows\Curre…", (ecx_10 + ((eax_3 & 0x3f) << 1)));
                        if (*esi == 0)
                        {
                            sub_406544(esi, ecx_6);
                        }
                    }
                    else if (eax_3 == 0x25)
                    {
                        GetSystemDirectoryW(esi, 0x400);
                    }
                    else
                    {
                        if (eax_3 == 0x24)
                        {
                            GetWindowsDirectoryW(esi, 0x400);
                            i = 0;
                        }
                        while (i != 0)
                        {
                            int32_t eax_6 = data_42a224;
                            i = (i - 1);
                            if ((eax_6 != 0 && eax_6(data_42a228, &var_1c[i], 0, 0, esi) == 0))
                            {
                                break;
                            }
                            struct ITEMIDLIST* var_8;
                            if (SHGetSpecialFolderLocation(data_42a228, &var_1c[i], &var_8) == 0)
                            {
                                int32_t eax_9 = SHGetPathFromIDListW(var_8, esi);
                                CoTaskMemFree(var_8);
                                if (eax_9 != 0)
                                {
                                    break;
                                }
                            }
                            *esi = 0;
                        }
                    }
                    if ((((eax_3 < 0 && *esi != 0) || (((eax_3 < 0 && *esi == 0) || eax_3 >= 0) && *esi != 0)) && ecx_6 == 0x1a))
                    {
                        lstrcatW(esi, u"\Microsoft\Internet Explorer\Qui…");
                    }
                }
                if (((arg2 == 3 && (edx_7 - 0x15) < 7) || arg2 == 2))
                {
                    sub_40678e(esi);
                }
                int32_t eax_14;
                eax_14 = lstrlenW(esi);
                esi = &esi[eax_14];
                eax_2 = -0x40;
            }
            else if (ecx_5 != 4)
            {
                *esi = ecx_5;
                esi = &esi[1];
            }
            else
            {
                ecx_5 = *edi;
                *esi = ecx_5;
                esi = &esi[1];
                edi = &edi[1];
            }
            ecx_5 = *edi;
            arg2 = ecx_5;
            if (ecx_5 == 0)
            {
                break;
            }
            ecx_5 = arg2;
        }
    }
    *esi = 0;
    if (arg1 != 0)
    {
        eax_2 = sub_406507(arg1, &data_4281c0);
    }
    return eax_2;
}

PWSTR __stdcall sub_40678e(int16_t* arg1)
{
    int16_t* lpsz = arg1;
    if ((*lpsz == 0x5c && (lpsz[1] == 0x5c && (lpsz[2] == 0x3f && lpsz[3] == 0x5c))))
    {
        lpsz = &lpsz[4];
    }
    if ((*lpsz != 0 && sub_405e4d(lpsz) != 0))
    {
        lpsz = &lpsz[2];
    }
    PWSTR eax;
    eax = *lpsz;
    int16_t* lpszStart = lpsz;
    char* lpsz_1 = lpsz;
    if (eax != 0)
    {
        do
        {
            if ((eax > 0x1f && *sub_405e03(u"*?|<>/":", eax) == 0))
            {
                sub_405fb2(lpsz_1, lpsz, ((CharNextW(lpsz) - lpsz) >> 1));
                lpsz_1 = CharNextW(lpsz_1);
            }
            lpsz = CharNextW(lpsz);
            eax = *lpsz;
        } while (eax != 0);
    }
    *lpsz_1 = 0;
    PWSTR eax_6;
    do
    {
        lpsz_1 = CharPrevW(lpszStart, lpsz_1);
        eax_6 = *lpsz_1;
        if ((eax_6 != 0x20 && eax_6 != 0x5c))
        {
            break;
        }
        *lpsz_1 = 0;
    } while (lpszStart < lpsz_1);
    return eax_6;
}

int32_t __stdcall sub_40683d(PWSTR arg1)
{
    HANDLE hFindFile = FindFirstFileW(arg1, &data_426758);
    int32_t eax;
    if (hFindFile == 0xffffffff)
    {
        eax = 0;
    }
    else
    {
        FindClose(hFindFile);
        eax = 0x426758;
    }
    return eax;
}

HMODULE __stdcall sub_406864(int32_t arg1)
{
    void var_240;
    uint32_t eax = GetSystemDirectoryW(&var_240, 0x104);
    if (eax > 0x104)
    {
        eax = 0;
    }
    int32_t __saved_esi;
    int32_t ecx;
    if ((eax == 0 || (eax != 0 && *(&*__saved_esi[2] + (eax << 1)) == 0x5c)))
    {
        ecx = 1;
    }
    if ((eax != 0 && *(&*__saved_esi[2] + (eax << 1)) != 0x5c))
    {
        ecx = 0;
    }
    int32_t __saved_ebp;
    wsprintfW(((&__saved_ebp + (eax << 1)) - 0x23c), u"%s%S.dll", ((ecx << 1) + &data_40a014), arg1);
    return LoadLibraryExW(&var_240, nullptr, LOAD_WITH_ALTERED_SEARCH_PATH);
}

int32_t __stdcall sub_4068d4(int32_t arg1)
{
    int32_t esi_1 = (arg1 << 3);
    PSTR lpModuleName = *(esi_1 + 0x40a3e0);
    HMODULE hModule = GetModuleHandleA(lpModuleName);
    if (hModule == 0)
    {
        hModule = sub_406864(lpModuleName);
    }
    return GetProcAddress(hModule, *(esi_1 + 0x40a3e4));
}

BOOL __stdcall sub_406910(uint32_t arg1)
{
    BOOL eax_1;
    while (true)
    {
        void lpMsg;
        eax_1 = PeekMessageW(&lpMsg, nullptr, arg1, arg1, PM_REMOVE);
        if (eax_1 == 0)
        {
            break;
        }
        DispatchMessageW(&lpMsg);
    }
    return eax_1;
}

int32_t __stdcall sub_406943(HMODULE arg1, wchar16* arg2)
{
    void lpProcName;
    int32_t eax_1;
    if (sub_406529(arg2, &lpProcName, 0x100) == 0)
    {
        eax_1 = 0;
    }
    else
    {
        eax_1 = GetProcAddress(arg1, &lpProcName);
    }
    return eax_1;
}

uint32_t __thiscall sub_40697f(uint32_t arg1, HANDLE arg2)
{
    uint32_t lpExitCode = arg1;
    for (enum WAIT_EVENT i = WaitForSingleObject(arg2, 0x64); i == WAIT_TIMEOUT; i = WaitForSingleObject(arg2, 0x64))
    {
        sub_406910(0xf);
    }
    GetExitCodeProcess(arg2, &lpExitCode);
    return lpExitCode;
}

int32_t __stdcall sub_4069c1(int32_t arg1, char* arg2, int32_t arg3)
{
    if (data_427dac == 0)
    {
        int32_t i = 0;
        do
        {
            int32_t i_2 = i;
            int32_t j_1 = 8;
            int32_t j;
            do
            {
                int32_t edx_1;
                edx_1 = (i_2 & 1);
                char temp2_1 = edx_1;
                edx_1 = -(edx_1);
                i_2 = ((i_2 >> 1) ^ ((edx_1 - edx_1) & 0xedb88320));
                j = j_1;
                j_1 = (j_1 - 1);
            } while (j != 1);
            *((i << 2) + &data_427da8) = i_2;
            i = (i + 1);
        } while (i < 0x100);
    }
    int32_t i_3 = arg3;
    int32_t eax_3 = !(arg1);
    if (i_3 > 0)
    {
        char* ecx_1 = arg2;
        int32_t i_1;
        do
        {
            eax_3 = ((eax_3 >> 8) ^ *(((eax_3 ^ *ecx_1) << 2) + &data_427da8));
            ecx_1 = &ecx_1[1];
            i_1 = i_3;
            i_3 = (i_3 - 1);
        } while (i_1 != 1);
    }
    return !(eax_3);
}

char* __fastcall sub_406a2f(void* arg1)
{
    char* i_1 = 0x80;
    char* i;
    do
    {
        i = i_1;
        i_1 = (i_1 - 1);
        *(i_1 + arg1) = 0;
    } while (i != 1);
    *(arg1 + 0x78) = 0xffffffff;
    *(arg1 + 0x68) = 1;
    *(arg1 + 0x64) = 1;
    *(arg1 + 0x60) = 1;
    *(arg1 + 0x5c) = 1;
    return i_1;
}

int32_t __fastcall sub_406a4f(int32_t arg1)
{
    void* var_8c;
    __builtin_memcpy(&var_8c, arg1, 0x88);
    int32_t var_34;
    int32_t eax_1;
    if (var_34 == 0xffffffff)
    {
        eax_1 = 1;
    }
    else
    {
        int32_t j_2;
        int32_t j_1 = j_2;
        int16_t* var_58;
        int16_t* esi_1 = var_58;
        while (true)
        {
            void* eax_21 = var_8c;
            if (eax_21 <= 0x1c)
            {
                void* var_88;
                void* var_84;
                char* var_74;
                int32_t i_1;
                void* var_5c;
                int32_t dwBytes_4;
                int32_t dwBytes;
                char var_40;
                int32_t var_3c;
                int32_t var_30;
                int32_t var_2c;
                int32_t var_28;
                int32_t var_24;
                int32_t var_20;
                int32_t var_1c;
                HGLOBAL hMem_1;
                int32_t eax_61;
                void* eax_100;
                switch (eax_21)
                {
                    case nullptr:
                    {
                        if (i_1 == 0)
                        {
                            goto label_407493;
                        }
                        char* eax_2 = var_74;
                        i_1 = (i_1 - 1);
                        var_74 = &var_74[1];
                        eax_2 = *eax_2;
                        if (eax_2 <= 0xe1)
                        {
                            int32_t eax_4;
                            int32_t edx_1;
                            edx_1 = HIGHD(eax_2);
                            eax_4 = LOWD(eax_2);
                            char temp0_1 = (COMBINE(edx_1, eax_4) / 0x2d);
                            int32_t eax_7;
                            int32_t edx_3;
                            edx_3 = HIGHD((COMBINE(edx_1, eax_4) % 0x2d));
                            eax_7 = LOWD((COMBINE(edx_1, eax_4) % 0x2d));
                            uint32_t edi_1 = (COMBINE(edx_3, eax_7) % 9);
                            var_40 = edi_1;
                            var_20 = ((1 << temp0_1) - 1);
                            var_1c = ((1 << (COMBINE(edx_3, eax_7) / 9)) - 1);
                            int32_t i_3 = ((0x300 << (edi_1 + temp0_1)) + 0x736);
                            uint32_t dwBytes_1 = (i_3 * 2);
                            uint32_t dwBytes_2;
                            HGLOBAL hMem_2;
                            if (dwBytes_1 != dwBytes_2)
                            {
                                if (hMem_1 != 0)
                                {
                                    GlobalFree(hMem_1);
                                }
                                hMem_2 = GlobalAlloc(GMEM_ZEROINIT, dwBytes_1);
                                hMem_1 = hMem_2;
                                if (hMem_2 != 0)
                                {
                                    dwBytes_2 = dwBytes_1;
                                }
                            }
                            if (((dwBytes_1 != dwBytes_2 && hMem_2 != 0) || dwBytes_1 == dwBytes_2))
                            {
                                if (i_3 != 0)
                                {
                                    int32_t i;
                                    do
                                    {
                                        i = i_3;
                                        i_3 = (i_3 - 1);
                                        *(hMem_1 + (i_3 << 1)) = 0x400;
                                    } while (i != 1);
                                }
                                dwBytes_4 = 0;
                                dwBytes = 0;
                                goto label_406b63;
                            }
                        }
                        break;
                    }
                    case 4:
                    {
                        goto label_40726d;
                    }
                    case 7:
                    {
                        if (dwBytes == 1)
                        {
                            var_88 = 8;
                            esi_1 = ((hMem_1 + (var_3c << 1)) + 0x198);
                            goto label_40726a;
                        }
                        var_84 = 0x16;
                        var_24 = var_28;
                        var_28 = var_2c;
                        var_2c = var_30;
                        int32_t eax_47;
                        eax_47 = var_3c >= 7;
                        int32_t eax_48;
                        eax_48 = ((eax_47 - 1) & 0xfd);
                        var_3c = (eax_48 + 0xa);
                        var_5c = (hMem_1 + 0x664);
                        break;
                    }
                    case 0xa:
                    {
                        if (dwBytes != 0)
                        {
                            var_88 = 0xb;
                            esi_1 = ((hMem_1 + (var_3c << 1)) + 0x1c8);
                            goto label_40726a;
                        }
                        eax_61 = var_2c;
                        break;
                    }
                    case 0xb:
                    {
                        if (dwBytes != 0)
                        {
                            eax_61 = var_24;
                            var_24 = var_28;
                        }
                        else
                        {
                            eax_61 = var_28;
                        }
                        var_28 = var_2c;
                        break;
                    }
                    case 0x14:
                    {
                        var_34 = (var_34 + j_1);
                        eax_100 = var_84;
                    label_4072e6:
                        var_8c = eax_100;
                        continue;
                    }
                    case 0x15:
                    {
                        int32_t eax_63;
                        eax_63 = var_3c >= 7;
                        int32_t eax_64;
                        eax_64 = ((eax_63 - 1) & 0xfd);
                        var_3c = (eax_64 + 0xb);
                        break;
                    }
                    case 0x17:
                    {
                        goto label_407332;
                    }
                    case 0x1c:
                    {
                        goto label_4071ef;
                    }
                }
                if ((eax_21 == 0xa || eax_21 == 0xb))
                {
                    int32_t ecx_45 = var_30;
                    var_30 = eax_61;
                    var_2c = ecx_45;
                }
                int32_t var_64;
                if (((eax_21 == 9 && dwBytes == 0) && var_64 != 0))
                {
                    int32_t eax_54;
                    eax_54 = var_3c >= 7;
                    var_3c = ((eax_54 * 2) + 9);
                }
                int32_t dwBytes_3;
                char* var_6c;
                int32_t i_2;
                char var_60;
                uint32_t var_18;
                HGLOBAL hMem;
                int32_t ecx;
                uint32_t edx_13;
                if ((((eax_21 == 9 && dwBytes == 0) && var_64 != 0) || eax_21 == 0x1b))
                {
                    if (i_2 == 0)
                    {
                        var_8c = 0x1b;
                        goto label_407493;
                    }
                    int32_t eax_57 = (var_18 - var_30);
                    if (eax_57 >= dwBytes_3)
                    {
                        eax_57 = (eax_57 + dwBytes_3);
                    }
                    ecx = *(eax_57 + hMem);
                    var_60 = ecx;
                    *(var_18 + hMem) = ecx;
                    edx_13 = (COMBINE(0, (var_18 + 1)) % dwBytes_3);
                    char* eax_60 = var_6c;
                    var_64 = (var_64 + 1);
                    var_6c = &var_6c[1];
                    i_2 = (i_2 - 1);
                    *eax_60 = ecx;
                    goto label_406fa9;
                }
                int32_t j_5;
                int32_t eax_71;
                void* eax_73;
                if (eax_21 == 0x19)
                {
                    if (j_1 < 4)
                    {
                        j_5 = j_1;
                    }
                    else
                    {
                        ecx = ((j_1 >> 1) - 1);
                        int32_t eax_70;
                        eax_70 = ((j_1 & 1) | 2);
                        eax_71 = (eax_70 << ecx);
                        var_30 = eax_71;
                        if (j_1 >= 0xe)
                        {
                            j_1 = 0;
                            dwBytes_4 = (ecx - 4);
                            goto label_4070cd;
                        }
                        dwBytes = ecx;
                        eax_73 = ((hMem_1 + ((eax_71 - j_1) << 1)) + 0x55e);
                    }
                }
                int32_t var_50;
                void* eax_95;
                if (eax_21 == 0x13)
                {
                    if (dwBytes != 0)
                    {
                        var_5c = (var_5c + 0x204);
                        var_34 = 0x10;
                        dwBytes = 8;
                    }
                    else
                    {
                        var_34 = 8;
                        eax_95 = ((var_5c + (var_50 << 4)) + 0x104);
                    }
                }
                if (((eax_21 == 0xb || eax_21 == 0xa) || (eax_21 == 9 && dwBytes != 0)))
                {
                    var_84 = 0x15;
                    var_5c = (hMem_1 + 0xa68);
                }
                if (((((eax_21 == 0xb || eax_21 == 0xa) || (eax_21 == 9 && dwBytes != 0)) || eax_21 == 0x11) || eax_21 == 7))
                {
                    esi_1 = var_5c;
                    var_88 = 0x12;
                    goto label_40726a;
                }
                if (eax_21 == 0x12)
                {
                    if (dwBytes != 0)
                    {
                        var_88 = 0x13;
                        esi_1 = (var_5c + 2);
                        goto label_40726a;
                    }
                    var_34 = 0;
                    eax_95 = ((var_5c + (var_50 << 4)) + 4);
                }
                if (((eax_21 == 0x13 && dwBytes == 0) || eax_21 == 0x12))
                {
                    var_5c = eax_95;
                    dwBytes = 3;
                }
                void* var_80;
                int32_t var_54;
                if ((((eax_21 == 0x13 && dwBytes != 0) || (eax_21 == 0x13 && dwBytes == 0)) || eax_21 == 0x12))
                {
                    var_80 = 0x14;
                label_407332:
                    var_54 = 1;
                    dwBytes_4 = dwBytes;
                    goto label_407366;
                }
                char var_5f;
                int32_t var_38;
                int32_t j;
                int32_t var_10;
                switch (eax_21)
                {
                    case 1:
                    {
                        while (i_1 != 0)
                        {
                            i_1 = (i_1 - 1);
                            dwBytes = (dwBytes | (*var_74 << (dwBytes_4 << 3)));
                            var_74 = &var_74[1];
                            dwBytes_4 = (dwBytes_4 + 1);
                        label_406b63:
                            if (dwBytes_4 >= 4)
                            {
                                break;
                            }
                        }
                        if (i_1 == 0)
                        {
                            var_8c = 1;
                        label_407493:
                            __builtin_memcpy(arg1, &var_8c, 0x88);
                            eax_1 = 0;
                            break;
                        }
                        HGLOBAL hMem_3;
                        if (dwBytes != dwBytes_3)
                        {
                            dwBytes_3 = dwBytes;
                            if (hMem != 0)
                            {
                                GlobalFree(hMem);
                            }
                            hMem_3 = GlobalAlloc(GMEM_ZEROINIT, dwBytes);
                            hMem = hMem_3;
                        }
                        if ((dwBytes == dwBytes_3 || (dwBytes != dwBytes_3 && hMem_3 != 0)))
                        {
                            dwBytes_4 = 5;
                            *((hMem + dwBytes_3) - 1) = 0;
                            goto label_406bce;
                        }
                        break;
                    }
                    case 3:
                    {
                        while (i_1 != 0)
                        {
                            i_1 = (i_1 - 1);
                            int32_t eax_18 = ((var_10 << 8) | *var_74);
                            var_74 = &var_74[1];
                            var_10 = eax_18;
                        label_406bce:
                            int32_t dwBytes_5 = dwBytes_4;
                            dwBytes_4 = (dwBytes_4 - 1);
                            if (dwBytes_5 == 0)
                            {
                                break;
                            }
                        }
                        if (i_1 == 0)
                        {
                            var_8c = 3;
                            goto label_407493;
                        }
                        break;
                    }
                    case 6:
                    {
                        if (dwBytes == 0)
                        {
                            ecx = 8;
                            ecx = (8 - var_40);
                            var_5c = (((((var_60 >> ecx) + ((var_64 & var_1c) << var_40)) * 0x600) + hMem_1) + 0xe6c);
                            if (var_3c < 4)
                            {
                                var_3c = 0;
                            }
                            else if (var_3c >= 0xa)
                            {
                                var_3c = (var_3c - 6);
                            }
                            else
                            {
                                var_3c = (var_3c - 3);
                            }
                            if (var_38 == 0)
                            {
                                j_1 = 1;
                                goto label_406e44;
                            }
                            int32_t eax_29 = (var_18 - var_30);
                            if (eax_29 >= dwBytes_3)
                            {
                                eax_29 = (eax_29 + dwBytes_3);
                            }
                            j_1 = 1;
                            eax_29 = *(eax_29 + hMem);
                            var_5f = eax_29;
                            goto label_406cd4;
                        }
                        var_38 = 1;
                        var_88 = 7;
                        esi_1 = ((hMem_1 + (var_3c << 1)) + 0x180);
                        goto label_40726a;
                    }
                    case 8:
                    {
                        if (dwBytes != 0)
                        {
                            var_88 = 0xa;
                            esi_1 = ((hMem_1 + (var_3c << 1)) + 0x1b0);
                        }
                        else
                        {
                            var_88 = 9;
                            esi_1 = (hMem_1 + ((((var_3c + 0xf) << 4) + var_50) << 1));
                        }
                        goto label_40726a;
                    }
                    case 0xc:
                    {
                        while (i_1 != 0)
                        {
                            j = (j << 8);
                            i_1 = (i_1 - 1);
                            int32_t eax_76 = ((var_10 << 8) | *var_74);
                            var_74 = &var_74[1];
                            var_10 = eax_76;
                            eax_71 = var_30;
                            do
                            {
                                dwBytes_4 = (dwBytes_4 - 1);
                            label_4070cd:
                                if (dwBytes_4 <= 0)
                                {
                                    break;
                                }
                                j_1 = (j_1 * 2);
                                j = (j >> 1);
                                int32_t j_3 = j_1;
                                if (var_10 >= j)
                                {
                                    var_10 = (var_10 - j);
                                    j_1 = (j_1 | 1);
                                    int32_t j_4 = j_1;
                                }
                            } while (j >= 0x1000000);
                            if (dwBytes_4 <= 0)
                            {
                                break;
                            }
                        }
                        if (i_1 == 0)
                        {
                            var_8c = 0xc;
                            goto label_407493;
                        }
                        dwBytes = 4;
                        var_30 = (eax_71 + (j_1 << 4));
                        eax_73 = (hMem_1 + 0x644);
                        break;
                    }
                    case 0xd:
                    {
                        while (i_1 != 0)
                        {
                            j = (j << 8);
                            i_1 = (i_1 - 1);
                            int32_t eax_32 = ((var_10 << 8) | *var_74);
                            var_74 = &var_74[1];
                            var_10 = eax_32;
                            do
                            {
                                if (dwBytes_4 != dwBytes)
                                {
                                    goto label_406d75;
                                }
                                if (j_1 >= 0x100)
                                {
                                    break;
                                }
                            label_406cd4:
                                uint32_t eax_33 = var_5f;
                                var_5f = (var_5f << 1);
                                int32_t dwBytes_6 = (eax_33 >> 7);
                                dwBytes_4 = dwBytes_6;
                                esi_1 = (var_5c + ((((dwBytes_6 + 1) << 8) + j_1) << 1));
                                int32_t eax_36;
                                eax_36 = *esi_1;
                                int16_t* var_58_1 = esi_1;
                                uint32_t edx_9 = eax_36;
                                int32_t j_6 = ((j >> 0xb) * edx_9);
                                if (var_10 >= j_6)
                                {
                                    j = (j - j_6);
                                    var_10 = (var_10 - j_6);
                                    j_6 = eax_36;
                                    dwBytes = 1;
                                    j_6 = (j_6 >> 5);
                                    j_1 = ((j_1 * 2) + 1);
                                    *esi_1 = (eax_36 - j_6);
                                }
                                else
                                {
                                    dwBytes = 0;
                                    j = j_6;
                                    j_1 = (j_1 * 2);
                                    *esi_1 = (((0x800 - edx_9) >> 5) + eax_36);
                                }
                                j_2 = j_1;
                            } while (j >= 0x1000000);
                            if (j_1 >= 0x100)
                            {
                                break;
                            }
                        }
                        if (i_1 == 0)
                        {
                            var_8c = 0xd;
                            goto label_407493;
                        }
                        break;
                    }
                    case 0xe:
                    {
                        while (i_1 != 0)
                        {
                            j = (j << 8);
                            i_1 = (i_1 - 1);
                            eax_21 = ((var_10 << 8) | *var_74);
                            var_74 = &var_74[1];
                            var_10 = eax_21;
                        label_406d75:
                            if (j_1 >= 0x100)
                            {
                                break;
                            }
                            int32_t edx_10 = (j_1 * 2);
                            esi_1 = (edx_10 + var_5c);
                            eax_21 = *esi_1;
                            int16_t* var_58_2 = esi_1;
                            uint32_t edi_2 = eax_21;
                            int32_t j_7 = ((j >> 0xb) * edi_2);
                            if (var_10 >= j_7)
                            {
                                j = (j - j_7);
                                var_10 = (var_10 - j_7);
                                j_7 = eax_21;
                                j_1 = (edx_10 + 1);
                                j_7 = (j_7 >> 5);
                                *esi_1 = (eax_21 - j_7);
                            }
                            else
                            {
                                j = j_7;
                                j_1 = (j_1 * 2);
                                *esi_1 = (((0x800 - edi_2) >> 5) + eax_21);
                            }
                            j_2 = j_1;
                            if (j >= 0x1000000)
                            {
                                break;
                            }
                        }
                        if (i_1 == 0)
                        {
                            var_8c = 0xe;
                            goto label_407493;
                        }
                        break;
                    }
                    case 0xf:
                    {
                        while (i_1 != 0)
                        {
                            j = (j << 8);
                            i_1 = (i_1 - 1);
                            eax_21 = ((var_10 << 8) | *var_74);
                            var_74 = &var_74[1];
                            var_10 = eax_21;
                            while (j_1 < 0x100)
                            {
                            label_406e44:
                                int32_t edx_14 = (j_1 * 2);
                                esi_1 = (edx_14 + var_5c);
                                eax_21 = *esi_1;
                                int16_t* var_58_3 = esi_1;
                                uint32_t edi_3 = eax_21;
                                int32_t j_8 = ((j >> 0xb) * edi_3);
                                if (var_10 >= j_8)
                                {
                                    j = (j - j_8);
                                    var_10 = (var_10 - j_8);
                                    j_8 = eax_21;
                                    j_1 = (edx_14 + 1);
                                    j_8 = (j_8 >> 5);
                                    *esi_1 = (eax_21 - j_8);
                                }
                                else
                                {
                                    j = j_8;
                                    j_1 = (j_1 * 2);
                                    *esi_1 = (((0x800 - edi_3) >> 5) + eax_21);
                                }
                                j_2 = j_1;
                                if (j < 0x1000000)
                                {
                                    break;
                                }
                            }
                            if (j_1 >= 0x100)
                            {
                                break;
                            }
                        }
                        if (i_1 == 0)
                        {
                            var_8c = 0xf;
                            goto label_407493;
                        }
                        break;
                    }
                    case 0x16:
                    {
                        int32_t eax_66 = var_34;
                        if (eax_66 >= 4)
                        {
                            eax_66 = 3;
                        }
                        dwBytes = 6;
                        var_80 = 0x19;
                        var_5c = (((eax_66 << 7) + hMem_1) + 0x360);
                        goto label_407332;
                    }
                }
                if ((eax_21 == 0xd || eax_21 == 0xe))
                {
                    var_38 = 0;
                }
                else if ((eax_21 == 2 || eax_21 == 3))
                {
                    int32_t eax_20 = (var_64 & var_20);
                    var_88 = 6;
                    var_50 = eax_20;
                    esi_1 = (hMem_1 + (((var_3c << 4) + eax_20) << 1));
                label_40726a:
                    int16_t* var_58_5 = esi_1;
                label_40726d:
                    eax_21 = *esi_1;
                    uint32_t edx_26 = eax_21;
                    ecx = ((j >> 0xb) * edx_26);
                    if (var_10 >= ecx)
                    {
                        j = (j - ecx);
                        var_10 = (var_10 - ecx);
                        ecx = eax_21;
                        dwBytes = 1;
                        ecx = (ecx >> 5);
                        *esi_1 = (eax_21 - ecx);
                    }
                    else
                    {
                        j = ecx;
                        dwBytes = 0;
                        *esi_1 = (((0x800 - edx_26) >> 5) + eax_21);
                    }
                    if (j >= 0x1000000)
                    {
                        goto label_4072e0;
                    }
                }
                if (((eax_21 == 0xd || eax_21 == 0xe) || eax_21 == 0xf))
                {
                    eax_21 = j_2;
                    var_60 = eax_21;
                }
                if (((eax_21 == 5 || eax_21 == 2) || eax_21 == 3))
                {
                    if (i_1 == 0)
                    {
                        var_8c = 5;
                        goto label_407493;
                    }
                    j = (j << 8);
                    i_1 = (i_1 - 1);
                    int32_t eax_99 = ((var_10 << 8) | *var_74);
                    var_74 = &var_74[1];
                    var_10 = eax_99;
                label_4072e0:
                    eax_100 = var_88;
                    goto label_4072e6;
                }
                if ((((eax_21 == 0xe || eax_21 == 0xd) || eax_21 == 0xf) || eax_21 == 0x1a))
                {
                    if (i_2 == 0)
                    {
                        var_8c = 0x1a;
                        goto label_407493;
                    }
                    char* ecx_31 = var_6c;
                    eax_21 = var_60;
                    var_64 = (var_64 + 1);
                    var_6c = &var_6c[1];
                    i_2 = (i_2 - 1);
                    *ecx_31 = eax_21;
                    *(var_18 + hMem) = eax_21;
                    edx_13 = (COMBINE(0, (var_18 + 1)) % dwBytes_3);
                label_406fa9:
                    var_18 = edx_13;
                label_406fac:
                    var_8c = 2;
                    continue;
                }
                if (((eax_21 == 0x19 && j_1 >= 4) || eax_21 == 0xc))
                {
                    j_1 = 0;
                    var_5c = eax_73;
                    var_54 = 1;
                    j_2 = 0;
                    dwBytes_4 = 0;
                    goto label_407150;
                }
                if (eax_21 == 0x10)
                {
                    while (i_1 != 0)
                    {
                        j = (j << 8);
                        i_1 = (i_1 - 1);
                        int32_t eax_81 = ((var_10 << 8) | *var_74);
                        var_74 = &var_74[1];
                        var_10 = eax_81;
                        do
                        {
                            dwBytes_4 = (dwBytes_4 + 1);
                        label_407150:
                            if (dwBytes_4 >= dwBytes)
                            {
                                break;
                            }
                            int32_t edi_4 = (var_54 * 2);
                            esi_1 = (edi_4 + var_5c);
                            int16_t* var_58_4 = esi_1;
                            void* eax_84;
                            eax_84 = *esi_1;
                            ecx = eax_84;
                            int32_t j_10 = ((j >> 0xb) * ecx);
                            if (var_10 >= j_10)
                            {
                                j = (j - j_10);
                                var_10 = (var_10 - j_10);
                                j_1 = (j_2 | (1 << dwBytes_4));
                                ecx = eax_84;
                                ecx = (ecx >> 5);
                                j_2 = j_1;
                                *esi_1 = (eax_84 - ecx);
                                var_54 = (edi_4 + 1);
                            }
                            else
                            {
                                j = j_10;
                                var_54 = (var_54 << 1);
                                *esi_1 = (((0x800 - ecx) >> 5) + eax_84);
                            }
                        } while (j >= 0x1000000);
                        if (dwBytes_4 >= dwBytes)
                        {
                            break;
                        }
                    }
                    if (i_1 == 0)
                    {
                        var_8c = 0x10;
                        goto label_407493;
                    }
                    j_5 = (var_30 + j_1);
                }
                if (((eax_21 == 0x19 && j_1 < 4) || eax_21 == 0x10))
                {
                    var_30 = (j_5 + 1);
                }
                if (((eax_21 == 0x15 || (eax_21 == 0x19 && j_1 < 4)) || eax_21 == 0x10))
                {
                    if (var_30 == 0)
                    {
                        int32_t var_34_1 = 0xffffffff;
                        goto label_407493;
                    }
                    if (var_30 <= var_64)
                    {
                        var_34 = (var_34 + 2);
                        var_64 = (var_64 + var_34);
                    label_4071ef:
                        while (i_2 != 0)
                        {
                            char* eax_89 = (var_18 - var_30);
                            if (eax_89 >= dwBytes_3)
                            {
                                eax_89 = &eax_89[dwBytes_3];
                            }
                            ecx = *(eax_89 + hMem);
                            char* eax_90 = var_18;
                            var_60 = ecx;
                            *(eax_90 + hMem) = ecx;
                            char* eax_92 = var_6c;
                            var_6c = &var_6c[1];
                            i_2 = (i_2 - 1);
                            var_34 = (var_34 - 1);
                            *eax_92 = ecx;
                            var_18 = (COMBINE(0, &eax_90[1]) % dwBytes_3);
                            if (var_34 <= 0)
                            {
                                break;
                            }
                        }
                        if (i_2 != 0)
                        {
                            goto label_406fac;
                        }
                        var_8c = 0x1c;
                        goto label_407493;
                    }
                }
                if (eax_21 == 0x18)
                {
                    while (i_1 != 0)
                    {
                        j = (j << 8);
                        i_1 = (i_1 - 1);
                        int32_t eax_106 = ((var_10 << 8) | *var_74);
                        var_74 = &var_74[1];
                        var_10 = eax_106;
                        do
                        {
                            dwBytes_4 = (dwBytes_4 - 1);
                        label_407366:
                            if (dwBytes_4 <= 0)
                            {
                                break;
                            }
                            int32_t edx_27 = (var_54 * 2);
                            esi_1 = (edx_27 + var_5c);
                            int16_t* var_58_6 = esi_1;
                            void* eax_108;
                            eax_108 = *esi_1;
                            uint32_t edi_6 = eax_108;
                            int32_t j_9 = ((j >> 0xb) * edi_6);
                            if (var_10 >= j_9)
                            {
                                j = (j - j_9);
                                var_10 = (var_10 - j_9);
                                j_9 = eax_108;
                                j_9 = (j_9 >> 5);
                                *esi_1 = (eax_108 - j_9);
                                var_54 = (edx_27 + 1);
                            }
                            else
                            {
                                j = j_9;
                                var_54 = (var_54 << 1);
                                *esi_1 = (((0x800 - edi_6) >> 5) + eax_108);
                            }
                        } while (j >= 0x1000000);
                        if (dwBytes_4 <= 0)
                        {
                            break;
                        }
                    }
                    if (i_1 == 0)
                    {
                        var_8c = 0x18;
                        goto label_407493;
                    }
                    j_1 = (var_54 - (1 << dwBytes));
                    eax_100 = var_80;
                    j_2 = j_1;
                    goto label_4072e6;
                }
            }
            eax_1 = 0xffffffff;
            break;
        }
    }
    return eax_1;
}

